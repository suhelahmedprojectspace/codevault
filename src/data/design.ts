export const system_design_questions = [
  {
    id: 1,
    question: "Design a URL Shortener (e.g., TinyURL)",
    link: "https://www.educative.io/courses/grokking-the-system-design-interview/m2ygV4E81AR",
    key_topics: ["Hashing", "Database Schema", "Scaling", "CDN"],
  },
  {
    id: 2,
    question: "Design a Distributed Key-Value Store (e.g., Redis/DynamoDB)",
    link: "https://architecturenotes.co/redis/",
    key_topics: [
      "CAP Theorem",
      "Partitioning",
      "Replication",
      "Consistent Hashing",
    ],
  },
  {
    id: 3,
    question: "Design a Web Crawler (e.g., Googlebot)",
    link: "https://www.geeksforgeeks.org/design-a-web-crawler/",
    key_topics: [
      "BFS/DFS",
      "Politeness Policies",
      "Deduplication",
      "Distributed Crawling",
    ],
  },
  {
    id: 4,
    question: "Design a Chat Application (e.g., WhatsApp/Slack)",
    link: "https://www.educative.io/courses/grokking-the-system-design-interview/m2yDVZnQ8lG",
    key_topics: [
      "WebSockets",
      "Push Notifications",
      "Message Queues",
      "Scalability",
    ],
  },
  {
    id: 5,
    question: "Design a Social Network (e.g., Facebook/Twitter)",
    link: "https://www.youtube.com/watch?v=5m0L0k8ZtEs",
    key_topics: [
      "Graph Database",
      "News Feed Algorithm",
      "Sharding",
      "Caching",
    ],
  },
  {
    id: 6,
    question: "Design a Payment System (e.g., Stripe/PayPal)",
    link: "https://www.youtube.com/watch?v=2Q3nR1Z9PP4",
    key_topics: [
      "Idempotency",
      "Fraud Detection",
      "Database Transactions",
      "API Design",
    ],
  },
  {
    id: 7,
    question: "Design a Video Streaming Service (e.g., Netflix/YouTube)",
    link: "https://www.educative.io/courses/grokking-the-system-design-interview/N8G9MvM4OR2",
    key_topics: [
      "CDN",
      "Video Encoding",
      "Load Balancing",
      "Adaptive Bitrate Streaming",
    ],
  },
  {
    id: 8,
    question: "Design a Ride-Sharing App (e.g., Uber/Lyft)",
    link: "https://www.youtube.com/watch?v=umWABit-wbk",
    key_topics: [
      "Geohashing",
      "Real-time Tracking",
      "Matching Algorithms",
      "Distributed Systems",
    ],
  },
  {
    id: 9,
    question: "Design a Search Engine (e.g., Google)",
    link: "https://www.youtube.com/watch?v=CeGtqouT8eA",
    key_topics: [
      "Inverted Index",
      "PageRank",
      "Distributed Crawling",
      "Query Processing",
    ],
  },
  {
    id: 10,
    question: "Design a File Storage System (e.g., Dropbox/Google Drive)",
    link: "https://www.educative.io/courses/grokking-the-system-design-interview/m22Gymjp4mG",
    key_topics: [
      "Chunk Storage",
      "Delta Sync",
      "Metadata DB",
      "File Versioning",
    ],
  },
  {
    id: 11,
    question: "Design a Recommendation System (e.g., Amazon/Netflix)",
    link: "https://www.youtube.com/watch?v=09mb78oiPkA",
    key_topics: [
      "Collaborative Filtering",
      "Content-Based Filtering",
      "Matrix Factorization",
      "Scalability",
    ],
  },
  {
    id: 12,
    question: "Design a Distributed Cache (e.g., Memcached/Redis)",
    link: "https://architecturenotes.co/redis/",
    key_topics: [
      "Eviction Policies",
      "Sharding",
      "Consistency",
      "High Availability",
    ],
  },
  {
    id: 13,
    question: "Design an API Rate Limiter (e.g., Cloudflare)",
    link: "https://www.youtube.com/watch?v=FU4WlwfS3G0",
    key_topics: [
      "Token Bucket",
      "Sliding Window",
      "Distributed Counting",
      "Throttling",
    ],
  },
  {
    id: 14,
    question: "Design a Stock Exchange System (e.g., NASDAQ)",
    link: "https://www.youtube.com/watch?v=7J5Fq1JZQQQ",
    key_topics: [
      "Order Matching",
      "Limit Order Book",
      "Low Latency",
      "Fault Tolerance",
    ],
  },
  {
    id: 15,
    question: "Design a Distributed Logging System (e.g., Kafka)",
    link: "https://www.youtube.com/watch?v=aJuo_bLSW6s",
    key_topics: ["Pub-Sub", "Partitioning", "Replication", "Message Retention"],
  },
  {
    id: 16,
    question: "Design a Hotel Booking System (e.g., Booking.com)",
    link: "https://www.youtube.com/watch?v=3NEQ5gXQl-4",
    key_topics: [
      "Inventory Management",
      "Concurrency Control",
      "Payment Integration",
      "Search Ranking",
    ],
  },
  {
    id: 17,
    question: "Design a Flight Reservation System (e.g., Expedia)",
    link: "https://www.youtube.com/watch?v=W9K9h6Xq34c",
    key_topics: [
      "Seat Allocation",
      "Pricing Engine",
      "Global Distribution System",
      "Caching",
    ],
  },
  {
    id: 18,
    question: "Design a Real-time Analytics Dashboard (e.g., Google Analytics)",
    link: "https://www.youtube.com/watch?v=5RrL_Nbk-9Y",
    key_topics: [
      "Stream Processing",
      "Time-Series DB",
      "Aggregation",
      "Visualization",
    ],
  },
  {
    id: 19,
    question: "Design a Multiplayer Game Server (e.g., Fortnite)",
    link: "https://www.youtube.com/watch?v=4ogNqij6n0Q",
    key_topics: [
      "State Synchronization",
      "Lag Compensation",
      "Matchmaking",
      "Cheat Detection",
    ],
  },
  {
    id: 20,
    question: "Design a Distributed File System (e.g., GFS/HDFS)",
    link: "https://www.youtube.com/watch?v=9RPjR5qSPBw",
    key_topics: [
      "Chunk Servers",
      "Fault Tolerance",
      "Replication",
      "Consistency",
    ],
  },
  {
    id: 21,
    question: "Design a Load Balancer (e.g., NGINX/HAProxy)",
    link: "https://www.youtube.com/watch?v=K0Ta6Oq3FgA",
    key_topics: [
      "Round Robin",
      "Least Connections",
      "Health Checks",
      "Session Persistence",
    ],
  },
  {
    id: 22,
    question: "Design a Distributed Job Scheduler (e.g., Apache Airflow)",
    link: "https://www.youtube.com/watch?v=o5w5W5h_a0o",
    key_topics: [
      "Task Queues",
      "Fault Tolerance",
      "Priority Scheduling",
      "Retry Mechanisms",
    ],
  },
  {
    id: 23,
    question:
      "Design a Content Delivery Network (CDN) (e.g., Cloudflare/Akamai)",
    link: "https://www.youtube.com/watch?v=Bsq5cKkS33I",
    key_topics: [
      "Edge Caching",
      "GeoDNS",
      "Cache Invalidation",
      "DDoS Protection",
    ],
  },
  {
    id: 24,
    question: "Design a Distributed Locking System (e.g., ZooKeeper)",
    link: "https://www.youtube.com/watch?v=6FGYDZONuXE",
    key_topics: [
      "Leader Election",
      "Watch Mechanism",
      "Consensus (Paxos/Raft)",
      "High Availability",
    ],
  },
  {
    id: 25,
    question: "Design a Real-time Collaborative Editor (e.g., Google Docs)",
    link: "https://www.youtube.com/watch?v=2auwirNBvGg",
    key_topics: [
      "Operational Transforms (OT)",
      "Conflict Resolution",
      "WebSockets",
      "Versioning",
    ],
  },
  {
    id: 26,
    question: "Design a Distributed Search Index (e.g., Elasticsearch)",
    link: "https://www.youtube.com/watch?v=6oxFpYC-Kuo",
    key_topics: [
      "Inverted Index",
      "Sharding",
      "Replication",
      "Query Optimization",
    ],
  },
  {
    id: 27,
    question: "Design a Blockchain System (e.g., Bitcoin/Ethereum)",
    link: "https://www.youtube.com/watch?v=zVqczFZr124",
    key_topics: [
      "Consensus (PoW/PoS)",
      "Smart Contracts",
      "Merkle Trees",
      "Sybil Resistance",
    ],
  },
  {
    id: 28,
    question: "Design a Distributed Messaging Queue (e.g., RabbitMQ/Kafka)",
    link: "https://www.youtube.com/watch?v=aJuo_bLSW6s",
    key_topics: [
      "Pub-Sub",
      "Persistence",
      "Consumer Groups",
      "Exactly-Once Semantics",
    ],
  },
  {
    id: 29,
    question: "Design a Scalable Notification System (e.g., iOS/Android Push)",
    link: "https://www.youtube.com/watch?v=0R2aQdj1l5k",
    key_topics: ["Fan-out", "Batching", "Priority Queues", "Device Tokens"],
  },
  {
    id: 30,
    question: "Design a Distributed Tracing System (e.g., Jaeger/Zipkin)",
    link: "https://www.youtube.com/watch?v=2Hr4l0klg2Q",
    key_topics: [
      "Span/Trace IDs",
      "Sampling",
      "Storage Backends",
      "Latency Analysis",
    ],
  },
];
