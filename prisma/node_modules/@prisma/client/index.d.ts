
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model CodeBuddyRequest
 * 
 */
export type CodeBuddyRequest = $Result.DefaultSelection<Prisma.$CodeBuddyRequestPayload>
/**
 * Model techStack
 * 
 */
export type techStack = $Result.DefaultSelection<Prisma.$techStackPayload>
/**
 * Model Portfolio
 * 
 */
export type Portfolio = $Result.DefaultSelection<Prisma.$PortfolioPayload>
/**
 * Model SocialLink
 * 
 */
export type SocialLink = $Result.DefaultSelection<Prisma.$SocialLinkPayload>
/**
 * Model PasswordResetToken
 * 
 */
export type PasswordResetToken = $Result.DefaultSelection<Prisma.$PasswordResetTokenPayload>
/**
 * Model BlogRequest
 * 
 */
export type BlogRequest = $Result.DefaultSelection<Prisma.$BlogRequestPayload>
/**
 * Model SnippetRequest
 * 
 */
export type SnippetRequest = $Result.DefaultSelection<Prisma.$SnippetRequestPayload>
/**
 * Model Snippet
 * 
 */
export type Snippet = $Result.DefaultSelection<Prisma.$SnippetPayload>
/**
 * Model Like
 * 
 */
export type Like = $Result.DefaultSelection<Prisma.$LikePayload>
/**
 * Model Blog
 * 
 */
export type Blog = $Result.DefaultSelection<Prisma.$BlogPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

export type Role = (typeof Role)[keyof typeof Role]


export const RequestStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

export type RequestStatus = (typeof RequestStatus)[keyof typeof RequestStatus]


export const Visibility: {
  public: 'public',
  private: 'private'
};

export type Visibility = (typeof Visibility)[keyof typeof Visibility]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type RequestStatus = $Enums.RequestStatus

export const RequestStatus: typeof $Enums.RequestStatus

export type Visibility = $Enums.Visibility

export const Visibility: typeof $Enums.Visibility

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.account.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Accounts
   * const accounts = await prisma.account.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.codeBuddyRequest`: Exposes CRUD operations for the **CodeBuddyRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CodeBuddyRequests
    * const codeBuddyRequests = await prisma.codeBuddyRequest.findMany()
    * ```
    */
  get codeBuddyRequest(): Prisma.CodeBuddyRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.techStack`: Exposes CRUD operations for the **techStack** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TechStacks
    * const techStacks = await prisma.techStack.findMany()
    * ```
    */
  get techStack(): Prisma.techStackDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.portfolio`: Exposes CRUD operations for the **Portfolio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Portfolios
    * const portfolios = await prisma.portfolio.findMany()
    * ```
    */
  get portfolio(): Prisma.PortfolioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.socialLink`: Exposes CRUD operations for the **SocialLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SocialLinks
    * const socialLinks = await prisma.socialLink.findMany()
    * ```
    */
  get socialLink(): Prisma.SocialLinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordResetToken`: Exposes CRUD operations for the **PasswordResetToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordResetTokens
    * const passwordResetTokens = await prisma.passwordResetToken.findMany()
    * ```
    */
  get passwordResetToken(): Prisma.PasswordResetTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.blogRequest`: Exposes CRUD operations for the **BlogRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BlogRequests
    * const blogRequests = await prisma.blogRequest.findMany()
    * ```
    */
  get blogRequest(): Prisma.BlogRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.snippetRequest`: Exposes CRUD operations for the **SnippetRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SnippetRequests
    * const snippetRequests = await prisma.snippetRequest.findMany()
    * ```
    */
  get snippetRequest(): Prisma.SnippetRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.snippet`: Exposes CRUD operations for the **Snippet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Snippets
    * const snippets = await prisma.snippet.findMany()
    * ```
    */
  get snippet(): Prisma.SnippetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.like`: Exposes CRUD operations for the **Like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.like.findMany()
    * ```
    */
  get like(): Prisma.LikeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.blog`: Exposes CRUD operations for the **Blog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blogs
    * const blogs = await prisma.blog.findMany()
    * ```
    */
  get blog(): Prisma.BlogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Account: 'Account',
    Session: 'Session',
    User: 'User',
    CodeBuddyRequest: 'CodeBuddyRequest',
    techStack: 'techStack',
    Portfolio: 'Portfolio',
    SocialLink: 'SocialLink',
    PasswordResetToken: 'PasswordResetToken',
    BlogRequest: 'BlogRequest',
    SnippetRequest: 'SnippetRequest',
    Snippet: 'Snippet',
    Like: 'Like',
    Blog: 'Blog',
    Notification: 'Notification',
    Message: 'Message'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "account" | "session" | "user" | "codeBuddyRequest" | "techStack" | "portfolio" | "socialLink" | "passwordResetToken" | "blogRequest" | "snippetRequest" | "snippet" | "like" | "blog" | "notification" | "message"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      CodeBuddyRequest: {
        payload: Prisma.$CodeBuddyRequestPayload<ExtArgs>
        fields: Prisma.CodeBuddyRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CodeBuddyRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CodeBuddyRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          findFirst: {
            args: Prisma.CodeBuddyRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CodeBuddyRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          findMany: {
            args: Prisma.CodeBuddyRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>[]
          }
          create: {
            args: Prisma.CodeBuddyRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          createMany: {
            args: Prisma.CodeBuddyRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CodeBuddyRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>[]
          }
          delete: {
            args: Prisma.CodeBuddyRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          update: {
            args: Prisma.CodeBuddyRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          deleteMany: {
            args: Prisma.CodeBuddyRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CodeBuddyRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CodeBuddyRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>[]
          }
          upsert: {
            args: Prisma.CodeBuddyRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CodeBuddyRequestPayload>
          }
          aggregate: {
            args: Prisma.CodeBuddyRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCodeBuddyRequest>
          }
          groupBy: {
            args: Prisma.CodeBuddyRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<CodeBuddyRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.CodeBuddyRequestCountArgs<ExtArgs>
            result: $Utils.Optional<CodeBuddyRequestCountAggregateOutputType> | number
          }
        }
      }
      techStack: {
        payload: Prisma.$techStackPayload<ExtArgs>
        fields: Prisma.techStackFieldRefs
        operations: {
          findUnique: {
            args: Prisma.techStackFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.techStackFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          findFirst: {
            args: Prisma.techStackFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.techStackFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          findMany: {
            args: Prisma.techStackFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>[]
          }
          create: {
            args: Prisma.techStackCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          createMany: {
            args: Prisma.techStackCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.techStackCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>[]
          }
          delete: {
            args: Prisma.techStackDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          update: {
            args: Prisma.techStackUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          deleteMany: {
            args: Prisma.techStackDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.techStackUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.techStackUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>[]
          }
          upsert: {
            args: Prisma.techStackUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$techStackPayload>
          }
          aggregate: {
            args: Prisma.TechStackAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTechStack>
          }
          groupBy: {
            args: Prisma.techStackGroupByArgs<ExtArgs>
            result: $Utils.Optional<TechStackGroupByOutputType>[]
          }
          count: {
            args: Prisma.techStackCountArgs<ExtArgs>
            result: $Utils.Optional<TechStackCountAggregateOutputType> | number
          }
        }
      }
      Portfolio: {
        payload: Prisma.$PortfolioPayload<ExtArgs>
        fields: Prisma.PortfolioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PortfolioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PortfolioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          findFirst: {
            args: Prisma.PortfolioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PortfolioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          findMany: {
            args: Prisma.PortfolioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>[]
          }
          create: {
            args: Prisma.PortfolioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          createMany: {
            args: Prisma.PortfolioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PortfolioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>[]
          }
          delete: {
            args: Prisma.PortfolioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          update: {
            args: Prisma.PortfolioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          deleteMany: {
            args: Prisma.PortfolioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PortfolioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PortfolioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>[]
          }
          upsert: {
            args: Prisma.PortfolioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          aggregate: {
            args: Prisma.PortfolioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePortfolio>
          }
          groupBy: {
            args: Prisma.PortfolioGroupByArgs<ExtArgs>
            result: $Utils.Optional<PortfolioGroupByOutputType>[]
          }
          count: {
            args: Prisma.PortfolioCountArgs<ExtArgs>
            result: $Utils.Optional<PortfolioCountAggregateOutputType> | number
          }
        }
      }
      SocialLink: {
        payload: Prisma.$SocialLinkPayload<ExtArgs>
        fields: Prisma.SocialLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SocialLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SocialLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          findFirst: {
            args: Prisma.SocialLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SocialLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          findMany: {
            args: Prisma.SocialLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>[]
          }
          create: {
            args: Prisma.SocialLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          createMany: {
            args: Prisma.SocialLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SocialLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>[]
          }
          delete: {
            args: Prisma.SocialLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          update: {
            args: Prisma.SocialLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          deleteMany: {
            args: Prisma.SocialLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SocialLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SocialLinkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>[]
          }
          upsert: {
            args: Prisma.SocialLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocialLinkPayload>
          }
          aggregate: {
            args: Prisma.SocialLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSocialLink>
          }
          groupBy: {
            args: Prisma.SocialLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<SocialLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.SocialLinkCountArgs<ExtArgs>
            result: $Utils.Optional<SocialLinkCountAggregateOutputType> | number
          }
        }
      }
      PasswordResetToken: {
        payload: Prisma.$PasswordResetTokenPayload<ExtArgs>
        fields: Prisma.PasswordResetTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordResetTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findFirst: {
            args: Prisma.PasswordResetTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findMany: {
            args: Prisma.PasswordResetTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          create: {
            args: Prisma.PasswordResetTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          createMany: {
            args: Prisma.PasswordResetTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          delete: {
            args: Prisma.PasswordResetTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          update: {
            args: Prisma.PasswordResetTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          deleteMany: {
            args: Prisma.PasswordResetTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordResetTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          upsert: {
            args: Prisma.PasswordResetTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          aggregate: {
            args: Prisma.PasswordResetTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordResetToken>
          }
          groupBy: {
            args: Prisma.PasswordResetTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordResetTokenCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenCountAggregateOutputType> | number
          }
        }
      }
      BlogRequest: {
        payload: Prisma.$BlogRequestPayload<ExtArgs>
        fields: Prisma.BlogRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlogRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlogRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          findFirst: {
            args: Prisma.BlogRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlogRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          findMany: {
            args: Prisma.BlogRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>[]
          }
          create: {
            args: Prisma.BlogRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          createMany: {
            args: Prisma.BlogRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlogRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>[]
          }
          delete: {
            args: Prisma.BlogRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          update: {
            args: Prisma.BlogRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          deleteMany: {
            args: Prisma.BlogRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlogRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BlogRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>[]
          }
          upsert: {
            args: Prisma.BlogRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogRequestPayload>
          }
          aggregate: {
            args: Prisma.BlogRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlogRequest>
          }
          groupBy: {
            args: Prisma.BlogRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlogRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlogRequestCountArgs<ExtArgs>
            result: $Utils.Optional<BlogRequestCountAggregateOutputType> | number
          }
        }
      }
      SnippetRequest: {
        payload: Prisma.$SnippetRequestPayload<ExtArgs>
        fields: Prisma.SnippetRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SnippetRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SnippetRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          findFirst: {
            args: Prisma.SnippetRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SnippetRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          findMany: {
            args: Prisma.SnippetRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>[]
          }
          create: {
            args: Prisma.SnippetRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          createMany: {
            args: Prisma.SnippetRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SnippetRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>[]
          }
          delete: {
            args: Prisma.SnippetRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          update: {
            args: Prisma.SnippetRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          deleteMany: {
            args: Prisma.SnippetRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SnippetRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SnippetRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>[]
          }
          upsert: {
            args: Prisma.SnippetRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetRequestPayload>
          }
          aggregate: {
            args: Prisma.SnippetRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSnippetRequest>
          }
          groupBy: {
            args: Prisma.SnippetRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<SnippetRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.SnippetRequestCountArgs<ExtArgs>
            result: $Utils.Optional<SnippetRequestCountAggregateOutputType> | number
          }
        }
      }
      Snippet: {
        payload: Prisma.$SnippetPayload<ExtArgs>
        fields: Prisma.SnippetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SnippetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SnippetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          findFirst: {
            args: Prisma.SnippetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SnippetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          findMany: {
            args: Prisma.SnippetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>[]
          }
          create: {
            args: Prisma.SnippetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          createMany: {
            args: Prisma.SnippetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SnippetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>[]
          }
          delete: {
            args: Prisma.SnippetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          update: {
            args: Prisma.SnippetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          deleteMany: {
            args: Prisma.SnippetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SnippetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SnippetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>[]
          }
          upsert: {
            args: Prisma.SnippetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SnippetPayload>
          }
          aggregate: {
            args: Prisma.SnippetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSnippet>
          }
          groupBy: {
            args: Prisma.SnippetGroupByArgs<ExtArgs>
            result: $Utils.Optional<SnippetGroupByOutputType>[]
          }
          count: {
            args: Prisma.SnippetCountArgs<ExtArgs>
            result: $Utils.Optional<SnippetCountAggregateOutputType> | number
          }
        }
      }
      Like: {
        payload: Prisma.$LikePayload<ExtArgs>
        fields: Prisma.LikeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LikeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LikeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findFirst: {
            args: Prisma.LikeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LikeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findMany: {
            args: Prisma.LikeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          create: {
            args: Prisma.LikeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          createMany: {
            args: Prisma.LikeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LikeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          delete: {
            args: Prisma.LikeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          update: {
            args: Prisma.LikeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          deleteMany: {
            args: Prisma.LikeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LikeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LikeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          upsert: {
            args: Prisma.LikeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          aggregate: {
            args: Prisma.LikeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLike>
          }
          groupBy: {
            args: Prisma.LikeGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikeGroupByOutputType>[]
          }
          count: {
            args: Prisma.LikeCountArgs<ExtArgs>
            result: $Utils.Optional<LikeCountAggregateOutputType> | number
          }
        }
      }
      Blog: {
        payload: Prisma.$BlogPayload<ExtArgs>
        fields: Prisma.BlogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          findFirst: {
            args: Prisma.BlogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          findMany: {
            args: Prisma.BlogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>[]
          }
          create: {
            args: Prisma.BlogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          createMany: {
            args: Prisma.BlogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>[]
          }
          delete: {
            args: Prisma.BlogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          update: {
            args: Prisma.BlogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          deleteMany: {
            args: Prisma.BlogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BlogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>[]
          }
          upsert: {
            args: Prisma.BlogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPayload>
          }
          aggregate: {
            args: Prisma.BlogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlog>
          }
          groupBy: {
            args: Prisma.BlogGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlogGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlogCountArgs<ExtArgs>
            result: $Utils.Optional<BlogCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    account?: AccountOmit
    session?: SessionOmit
    user?: UserOmit
    codeBuddyRequest?: CodeBuddyRequestOmit
    techStack?: techStackOmit
    portfolio?: PortfolioOmit
    socialLink?: SocialLinkOmit
    passwordResetToken?: PasswordResetTokenOmit
    blogRequest?: BlogRequestOmit
    snippetRequest?: SnippetRequestOmit
    snippet?: SnippetOmit
    like?: LikeOmit
    blog?: BlogOmit
    notification?: NotificationOmit
    message?: MessageOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    blog: number
    sendBlogRequest: number
    receivedCodeBuddyRequests: number
    codeBuddyRequests: number
    likes: number
    receivedMessages: number
    sentMessages: number
    receivedNotifcations: number
    sentNotification: number
    sessions: number
    snippetCollection: number
    sendRequests: number
    buddyOf: number
    allowedBlog: number
    allowedSnippets: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    blog?: boolean | UserCountOutputTypeCountBlogArgs
    sendBlogRequest?: boolean | UserCountOutputTypeCountSendBlogRequestArgs
    receivedCodeBuddyRequests?: boolean | UserCountOutputTypeCountReceivedCodeBuddyRequestsArgs
    codeBuddyRequests?: boolean | UserCountOutputTypeCountCodeBuddyRequestsArgs
    likes?: boolean | UserCountOutputTypeCountLikesArgs
    receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    receivedNotifcations?: boolean | UserCountOutputTypeCountReceivedNotifcationsArgs
    sentNotification?: boolean | UserCountOutputTypeCountSentNotificationArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    snippetCollection?: boolean | UserCountOutputTypeCountSnippetCollectionArgs
    sendRequests?: boolean | UserCountOutputTypeCountSendRequestsArgs
    buddyOf?: boolean | UserCountOutputTypeCountBuddyOfArgs
    allowedBlog?: boolean | UserCountOutputTypeCountAllowedBlogArgs
    allowedSnippets?: boolean | UserCountOutputTypeCountAllowedSnippetsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBlogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSendBlogRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedCodeBuddyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CodeBuddyRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCodeBuddyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CodeBuddyRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedNotifcationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSnippetCollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSendRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBuddyOfArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAllowedBlogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAllowedSnippetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetWhereInput
  }


  /**
   * Count Type CodeBuddyRequestCountOutputType
   */

  export type CodeBuddyRequestCountOutputType = {
    notification: number
  }

  export type CodeBuddyRequestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notification?: boolean | CodeBuddyRequestCountOutputTypeCountNotificationArgs
  }

  // Custom InputTypes
  /**
   * CodeBuddyRequestCountOutputType without action
   */
  export type CodeBuddyRequestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequestCountOutputType
     */
    select?: CodeBuddyRequestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CodeBuddyRequestCountOutputType without action
   */
  export type CodeBuddyRequestCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type PortfolioCountOutputType
   */

  export type PortfolioCountOutputType = {
    links: number
  }

  export type PortfolioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    links?: boolean | PortfolioCountOutputTypeCountLinksArgs
  }

  // Custom InputTypes
  /**
   * PortfolioCountOutputType without action
   */
  export type PortfolioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PortfolioCountOutputType
     */
    select?: PortfolioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PortfolioCountOutputType without action
   */
  export type PortfolioCountOutputTypeCountLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SocialLinkWhereInput
  }


  /**
   * Count Type SnippetCountOutputType
   */

  export type SnippetCountOutputType = {
    notifications: number
    snippetRequests: number
    allowedUsers: number
  }

  export type SnippetCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifications?: boolean | SnippetCountOutputTypeCountNotificationsArgs
    snippetRequests?: boolean | SnippetCountOutputTypeCountSnippetRequestsArgs
    allowedUsers?: boolean | SnippetCountOutputTypeCountAllowedUsersArgs
  }

  // Custom InputTypes
  /**
   * SnippetCountOutputType without action
   */
  export type SnippetCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetCountOutputType
     */
    select?: SnippetCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SnippetCountOutputType without action
   */
  export type SnippetCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * SnippetCountOutputType without action
   */
  export type SnippetCountOutputTypeCountSnippetRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetRequestWhereInput
  }

  /**
   * SnippetCountOutputType without action
   */
  export type SnippetCountOutputTypeCountAllowedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type BlogCountOutputType
   */

  export type BlogCountOutputType = {
    blogRequests: number
    likes: number
    notifications: number
    allowedUsers: number
  }

  export type BlogCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blogRequests?: boolean | BlogCountOutputTypeCountBlogRequestsArgs
    likes?: boolean | BlogCountOutputTypeCountLikesArgs
    notifications?: boolean | BlogCountOutputTypeCountNotificationsArgs
    allowedUsers?: boolean | BlogCountOutputTypeCountAllowedUsersArgs
  }

  // Custom InputTypes
  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogCountOutputType
     */
    select?: BlogCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeCountBlogRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogRequestWhereInput
  }

  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * BlogCountOutputType without action
   */
  export type BlogCountOutputTypeCountAllowedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expires", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role | null
    codeBuddyId: string | null
    createdAt: Date | null
    portfolioId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role | null
    codeBuddyId: string | null
    createdAt: Date | null
    portfolioId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    emailVerified: number
    image: number
    password: number
    role: number
    codeBuddyId: number
    matchingPreferences: number
    createdAt: number
    portfolioId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    codeBuddyId?: true
    createdAt?: true
    portfolioId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    codeBuddyId?: true
    createdAt?: true
    portfolioId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    codeBuddyId?: true
    matchingPreferences?: true
    createdAt?: true
    portfolioId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    email: string | null
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role
    codeBuddyId: string | null
    matchingPreferences: JsonValue | null
    createdAt: Date
    portfolioId: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    codeBuddyId?: boolean
    matchingPreferences?: boolean
    createdAt?: boolean
    portfolioId?: boolean
    accounts?: boolean | User$accountsArgs<ExtArgs>
    blog?: boolean | User$blogArgs<ExtArgs>
    sendBlogRequest?: boolean | User$sendBlogRequestArgs<ExtArgs>
    receivedCodeBuddyRequests?: boolean | User$receivedCodeBuddyRequestsArgs<ExtArgs>
    codeBuddyRequests?: boolean | User$codeBuddyRequestsArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedNotifcations?: boolean | User$receivedNotifcationsArgs<ExtArgs>
    sentNotification?: boolean | User$sentNotificationArgs<ExtArgs>
    portfolio?: boolean | User$portfolioArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    snippetCollection?: boolean | User$snippetCollectionArgs<ExtArgs>
    sendRequests?: boolean | User$sendRequestsArgs<ExtArgs>
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
    buddyOf?: boolean | User$buddyOfArgs<ExtArgs>
    allowedBlog?: boolean | User$allowedBlogArgs<ExtArgs>
    allowedSnippets?: boolean | User$allowedSnippetsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    codeBuddyId?: boolean
    matchingPreferences?: boolean
    createdAt?: boolean
    portfolioId?: boolean
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    codeBuddyId?: boolean
    matchingPreferences?: boolean
    createdAt?: boolean
    portfolioId?: boolean
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    codeBuddyId?: boolean
    matchingPreferences?: boolean
    createdAt?: boolean
    portfolioId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "emailVerified" | "image" | "password" | "role" | "codeBuddyId" | "matchingPreferences" | "createdAt" | "portfolioId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | User$accountsArgs<ExtArgs>
    blog?: boolean | User$blogArgs<ExtArgs>
    sendBlogRequest?: boolean | User$sendBlogRequestArgs<ExtArgs>
    receivedCodeBuddyRequests?: boolean | User$receivedCodeBuddyRequestsArgs<ExtArgs>
    codeBuddyRequests?: boolean | User$codeBuddyRequestsArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedNotifcations?: boolean | User$receivedNotifcationsArgs<ExtArgs>
    sentNotification?: boolean | User$sentNotificationArgs<ExtArgs>
    portfolio?: boolean | User$portfolioArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    snippetCollection?: boolean | User$snippetCollectionArgs<ExtArgs>
    sendRequests?: boolean | User$sendRequestsArgs<ExtArgs>
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
    buddyOf?: boolean | User$buddyOfArgs<ExtArgs>
    allowedBlog?: boolean | User$allowedBlogArgs<ExtArgs>
    allowedSnippets?: boolean | User$allowedSnippetsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codeBuddy?: boolean | User$codeBuddyArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      blog: Prisma.$BlogPayload<ExtArgs>[]
      sendBlogRequest: Prisma.$BlogRequestPayload<ExtArgs>[]
      receivedCodeBuddyRequests: Prisma.$CodeBuddyRequestPayload<ExtArgs>[]
      codeBuddyRequests: Prisma.$CodeBuddyRequestPayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      receivedNotifcations: Prisma.$NotificationPayload<ExtArgs>[]
      sentNotification: Prisma.$NotificationPayload<ExtArgs>[]
      portfolio: Prisma.$PortfolioPayload<ExtArgs> | null
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      snippetCollection: Prisma.$SnippetPayload<ExtArgs>[]
      sendRequests: Prisma.$SnippetRequestPayload<ExtArgs>[]
      codeBuddy: Prisma.$UserPayload<ExtArgs> | null
      buddyOf: Prisma.$UserPayload<ExtArgs>[]
      allowedBlog: Prisma.$BlogPayload<ExtArgs>[]
      allowedSnippets: Prisma.$SnippetPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      email: string | null
      emailVerified: Date | null
      image: string | null
      password: string | null
      role: $Enums.Role
      codeBuddyId: string | null
      matchingPreferences: Prisma.JsonValue | null
      createdAt: Date
      portfolioId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    blog<T extends User$blogArgs<ExtArgs> = {}>(args?: Subset<T, User$blogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sendBlogRequest<T extends User$sendBlogRequestArgs<ExtArgs> = {}>(args?: Subset<T, User$sendBlogRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedCodeBuddyRequests<T extends User$receivedCodeBuddyRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedCodeBuddyRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    codeBuddyRequests<T extends User$codeBuddyRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$codeBuddyRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends User$likesArgs<ExtArgs> = {}>(args?: Subset<T, User$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedMessages<T extends User$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedNotifcations<T extends User$receivedNotifcationsArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedNotifcationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sentNotification<T extends User$sentNotificationArgs<ExtArgs> = {}>(args?: Subset<T, User$sentNotificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    portfolio<T extends User$portfolioArgs<ExtArgs> = {}>(args?: Subset<T, User$portfolioArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    snippetCollection<T extends User$snippetCollectionArgs<ExtArgs> = {}>(args?: Subset<T, User$snippetCollectionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sendRequests<T extends User$sendRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$sendRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    codeBuddy<T extends User$codeBuddyArgs<ExtArgs> = {}>(args?: Subset<T, User$codeBuddyArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    buddyOf<T extends User$buddyOfArgs<ExtArgs> = {}>(args?: Subset<T, User$buddyOfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    allowedBlog<T extends User$allowedBlogArgs<ExtArgs> = {}>(args?: Subset<T, User$allowedBlogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    allowedSnippets<T extends User$allowedSnippetsArgs<ExtArgs> = {}>(args?: Subset<T, User$allowedSnippetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly image: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly codeBuddyId: FieldRef<"User", 'String'>
    readonly matchingPreferences: FieldRef<"User", 'Json'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly portfolioId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.blog
   */
  export type User$blogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    where?: BlogWhereInput
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    cursor?: BlogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }

  /**
   * User.sendBlogRequest
   */
  export type User$sendBlogRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    where?: BlogRequestWhereInput
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    cursor?: BlogRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogRequestScalarFieldEnum | BlogRequestScalarFieldEnum[]
  }

  /**
   * User.receivedCodeBuddyRequests
   */
  export type User$receivedCodeBuddyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    where?: CodeBuddyRequestWhereInput
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    cursor?: CodeBuddyRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CodeBuddyRequestScalarFieldEnum | CodeBuddyRequestScalarFieldEnum[]
  }

  /**
   * User.codeBuddyRequests
   */
  export type User$codeBuddyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    where?: CodeBuddyRequestWhereInput
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    cursor?: CodeBuddyRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CodeBuddyRequestScalarFieldEnum | CodeBuddyRequestScalarFieldEnum[]
  }

  /**
   * User.likes
   */
  export type User$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * User.receivedMessages
   */
  export type User$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.receivedNotifcations
   */
  export type User$receivedNotifcationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.sentNotification
   */
  export type User$sentNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.portfolio
   */
  export type User$portfolioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    where?: PortfolioWhereInput
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.snippetCollection
   */
  export type User$snippetCollectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    where?: SnippetWhereInput
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    cursor?: SnippetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnippetScalarFieldEnum | SnippetScalarFieldEnum[]
  }

  /**
   * User.sendRequests
   */
  export type User$sendRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    where?: SnippetRequestWhereInput
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    cursor?: SnippetRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnippetRequestScalarFieldEnum | SnippetRequestScalarFieldEnum[]
  }

  /**
   * User.codeBuddy
   */
  export type User$codeBuddyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.buddyOf
   */
  export type User$buddyOfArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.allowedBlog
   */
  export type User$allowedBlogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    where?: BlogWhereInput
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    cursor?: BlogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }

  /**
   * User.allowedSnippets
   */
  export type User$allowedSnippetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    where?: SnippetWhereInput
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    cursor?: SnippetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnippetScalarFieldEnum | SnippetScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model CodeBuddyRequest
   */

  export type AggregateCodeBuddyRequest = {
    _count: CodeBuddyRequestCountAggregateOutputType | null
    _min: CodeBuddyRequestMinAggregateOutputType | null
    _max: CodeBuddyRequestMaxAggregateOutputType | null
  }

  export type CodeBuddyRequestMinAggregateOutputType = {
    id: string | null
    requesterId: string | null
    receiverId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    expiresAt: Date | null
  }

  export type CodeBuddyRequestMaxAggregateOutputType = {
    id: string | null
    requesterId: string | null
    receiverId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    expiresAt: Date | null
  }

  export type CodeBuddyRequestCountAggregateOutputType = {
    id: number
    requesterId: number
    receiverId: number
    status: number
    createdAt: number
    expiresAt: number
    _all: number
  }


  export type CodeBuddyRequestMinAggregateInputType = {
    id?: true
    requesterId?: true
    receiverId?: true
    status?: true
    createdAt?: true
    expiresAt?: true
  }

  export type CodeBuddyRequestMaxAggregateInputType = {
    id?: true
    requesterId?: true
    receiverId?: true
    status?: true
    createdAt?: true
    expiresAt?: true
  }

  export type CodeBuddyRequestCountAggregateInputType = {
    id?: true
    requesterId?: true
    receiverId?: true
    status?: true
    createdAt?: true
    expiresAt?: true
    _all?: true
  }

  export type CodeBuddyRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CodeBuddyRequest to aggregate.
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CodeBuddyRequests to fetch.
     */
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CodeBuddyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CodeBuddyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CodeBuddyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CodeBuddyRequests
    **/
    _count?: true | CodeBuddyRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CodeBuddyRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CodeBuddyRequestMaxAggregateInputType
  }

  export type GetCodeBuddyRequestAggregateType<T extends CodeBuddyRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateCodeBuddyRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCodeBuddyRequest[P]>
      : GetScalarType<T[P], AggregateCodeBuddyRequest[P]>
  }




  export type CodeBuddyRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CodeBuddyRequestWhereInput
    orderBy?: CodeBuddyRequestOrderByWithAggregationInput | CodeBuddyRequestOrderByWithAggregationInput[]
    by: CodeBuddyRequestScalarFieldEnum[] | CodeBuddyRequestScalarFieldEnum
    having?: CodeBuddyRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CodeBuddyRequestCountAggregateInputType | true
    _min?: CodeBuddyRequestMinAggregateInputType
    _max?: CodeBuddyRequestMaxAggregateInputType
  }

  export type CodeBuddyRequestGroupByOutputType = {
    id: string
    requesterId: string
    receiverId: string
    status: $Enums.RequestStatus
    createdAt: Date
    expiresAt: Date
    _count: CodeBuddyRequestCountAggregateOutputType | null
    _min: CodeBuddyRequestMinAggregateOutputType | null
    _max: CodeBuddyRequestMaxAggregateOutputType | null
  }

  type GetCodeBuddyRequestGroupByPayload<T extends CodeBuddyRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CodeBuddyRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CodeBuddyRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CodeBuddyRequestGroupByOutputType[P]>
            : GetScalarType<T[P], CodeBuddyRequestGroupByOutputType[P]>
        }
      >
    >


  export type CodeBuddyRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requesterId?: boolean
    receiverId?: boolean
    status?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    notification?: boolean | CodeBuddyRequest$notificationArgs<ExtArgs>
    _count?: boolean | CodeBuddyRequestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["codeBuddyRequest"]>

  export type CodeBuddyRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requesterId?: boolean
    receiverId?: boolean
    status?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["codeBuddyRequest"]>

  export type CodeBuddyRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    requesterId?: boolean
    receiverId?: boolean
    status?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["codeBuddyRequest"]>

  export type CodeBuddyRequestSelectScalar = {
    id?: boolean
    requesterId?: boolean
    receiverId?: boolean
    status?: boolean
    createdAt?: boolean
    expiresAt?: boolean
  }

  export type CodeBuddyRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "requesterId" | "receiverId" | "status" | "createdAt" | "expiresAt", ExtArgs["result"]["codeBuddyRequest"]>
  export type CodeBuddyRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    notification?: boolean | CodeBuddyRequest$notificationArgs<ExtArgs>
    _count?: boolean | CodeBuddyRequestCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CodeBuddyRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CodeBuddyRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reciever?: boolean | UserDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CodeBuddyRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CodeBuddyRequest"
    objects: {
      reciever: Prisma.$UserPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
      notification: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      requesterId: string
      receiverId: string
      status: $Enums.RequestStatus
      createdAt: Date
      expiresAt: Date
    }, ExtArgs["result"]["codeBuddyRequest"]>
    composites: {}
  }

  type CodeBuddyRequestGetPayload<S extends boolean | null | undefined | CodeBuddyRequestDefaultArgs> = $Result.GetResult<Prisma.$CodeBuddyRequestPayload, S>

  type CodeBuddyRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CodeBuddyRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CodeBuddyRequestCountAggregateInputType | true
    }

  export interface CodeBuddyRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CodeBuddyRequest'], meta: { name: 'CodeBuddyRequest' } }
    /**
     * Find zero or one CodeBuddyRequest that matches the filter.
     * @param {CodeBuddyRequestFindUniqueArgs} args - Arguments to find a CodeBuddyRequest
     * @example
     * // Get one CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CodeBuddyRequestFindUniqueArgs>(args: SelectSubset<T, CodeBuddyRequestFindUniqueArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CodeBuddyRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CodeBuddyRequestFindUniqueOrThrowArgs} args - Arguments to find a CodeBuddyRequest
     * @example
     * // Get one CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CodeBuddyRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, CodeBuddyRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CodeBuddyRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestFindFirstArgs} args - Arguments to find a CodeBuddyRequest
     * @example
     * // Get one CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CodeBuddyRequestFindFirstArgs>(args?: SelectSubset<T, CodeBuddyRequestFindFirstArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CodeBuddyRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestFindFirstOrThrowArgs} args - Arguments to find a CodeBuddyRequest
     * @example
     * // Get one CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CodeBuddyRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, CodeBuddyRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CodeBuddyRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CodeBuddyRequests
     * const codeBuddyRequests = await prisma.codeBuddyRequest.findMany()
     * 
     * // Get first 10 CodeBuddyRequests
     * const codeBuddyRequests = await prisma.codeBuddyRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const codeBuddyRequestWithIdOnly = await prisma.codeBuddyRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CodeBuddyRequestFindManyArgs>(args?: SelectSubset<T, CodeBuddyRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CodeBuddyRequest.
     * @param {CodeBuddyRequestCreateArgs} args - Arguments to create a CodeBuddyRequest.
     * @example
     * // Create one CodeBuddyRequest
     * const CodeBuddyRequest = await prisma.codeBuddyRequest.create({
     *   data: {
     *     // ... data to create a CodeBuddyRequest
     *   }
     * })
     * 
     */
    create<T extends CodeBuddyRequestCreateArgs>(args: SelectSubset<T, CodeBuddyRequestCreateArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CodeBuddyRequests.
     * @param {CodeBuddyRequestCreateManyArgs} args - Arguments to create many CodeBuddyRequests.
     * @example
     * // Create many CodeBuddyRequests
     * const codeBuddyRequest = await prisma.codeBuddyRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CodeBuddyRequestCreateManyArgs>(args?: SelectSubset<T, CodeBuddyRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CodeBuddyRequests and returns the data saved in the database.
     * @param {CodeBuddyRequestCreateManyAndReturnArgs} args - Arguments to create many CodeBuddyRequests.
     * @example
     * // Create many CodeBuddyRequests
     * const codeBuddyRequest = await prisma.codeBuddyRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CodeBuddyRequests and only return the `id`
     * const codeBuddyRequestWithIdOnly = await prisma.codeBuddyRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CodeBuddyRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, CodeBuddyRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CodeBuddyRequest.
     * @param {CodeBuddyRequestDeleteArgs} args - Arguments to delete one CodeBuddyRequest.
     * @example
     * // Delete one CodeBuddyRequest
     * const CodeBuddyRequest = await prisma.codeBuddyRequest.delete({
     *   where: {
     *     // ... filter to delete one CodeBuddyRequest
     *   }
     * })
     * 
     */
    delete<T extends CodeBuddyRequestDeleteArgs>(args: SelectSubset<T, CodeBuddyRequestDeleteArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CodeBuddyRequest.
     * @param {CodeBuddyRequestUpdateArgs} args - Arguments to update one CodeBuddyRequest.
     * @example
     * // Update one CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CodeBuddyRequestUpdateArgs>(args: SelectSubset<T, CodeBuddyRequestUpdateArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CodeBuddyRequests.
     * @param {CodeBuddyRequestDeleteManyArgs} args - Arguments to filter CodeBuddyRequests to delete.
     * @example
     * // Delete a few CodeBuddyRequests
     * const { count } = await prisma.codeBuddyRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CodeBuddyRequestDeleteManyArgs>(args?: SelectSubset<T, CodeBuddyRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CodeBuddyRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CodeBuddyRequests
     * const codeBuddyRequest = await prisma.codeBuddyRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CodeBuddyRequestUpdateManyArgs>(args: SelectSubset<T, CodeBuddyRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CodeBuddyRequests and returns the data updated in the database.
     * @param {CodeBuddyRequestUpdateManyAndReturnArgs} args - Arguments to update many CodeBuddyRequests.
     * @example
     * // Update many CodeBuddyRequests
     * const codeBuddyRequest = await prisma.codeBuddyRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CodeBuddyRequests and only return the `id`
     * const codeBuddyRequestWithIdOnly = await prisma.codeBuddyRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CodeBuddyRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, CodeBuddyRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CodeBuddyRequest.
     * @param {CodeBuddyRequestUpsertArgs} args - Arguments to update or create a CodeBuddyRequest.
     * @example
     * // Update or create a CodeBuddyRequest
     * const codeBuddyRequest = await prisma.codeBuddyRequest.upsert({
     *   create: {
     *     // ... data to create a CodeBuddyRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CodeBuddyRequest we want to update
     *   }
     * })
     */
    upsert<T extends CodeBuddyRequestUpsertArgs>(args: SelectSubset<T, CodeBuddyRequestUpsertArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CodeBuddyRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestCountArgs} args - Arguments to filter CodeBuddyRequests to count.
     * @example
     * // Count the number of CodeBuddyRequests
     * const count = await prisma.codeBuddyRequest.count({
     *   where: {
     *     // ... the filter for the CodeBuddyRequests we want to count
     *   }
     * })
    **/
    count<T extends CodeBuddyRequestCountArgs>(
      args?: Subset<T, CodeBuddyRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CodeBuddyRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CodeBuddyRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CodeBuddyRequestAggregateArgs>(args: Subset<T, CodeBuddyRequestAggregateArgs>): Prisma.PrismaPromise<GetCodeBuddyRequestAggregateType<T>>

    /**
     * Group by CodeBuddyRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodeBuddyRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CodeBuddyRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CodeBuddyRequestGroupByArgs['orderBy'] }
        : { orderBy?: CodeBuddyRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CodeBuddyRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCodeBuddyRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CodeBuddyRequest model
   */
  readonly fields: CodeBuddyRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CodeBuddyRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CodeBuddyRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reciever<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    notification<T extends CodeBuddyRequest$notificationArgs<ExtArgs> = {}>(args?: Subset<T, CodeBuddyRequest$notificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CodeBuddyRequest model
   */
  interface CodeBuddyRequestFieldRefs {
    readonly id: FieldRef<"CodeBuddyRequest", 'String'>
    readonly requesterId: FieldRef<"CodeBuddyRequest", 'String'>
    readonly receiverId: FieldRef<"CodeBuddyRequest", 'String'>
    readonly status: FieldRef<"CodeBuddyRequest", 'RequestStatus'>
    readonly createdAt: FieldRef<"CodeBuddyRequest", 'DateTime'>
    readonly expiresAt: FieldRef<"CodeBuddyRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CodeBuddyRequest findUnique
   */
  export type CodeBuddyRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter, which CodeBuddyRequest to fetch.
     */
    where: CodeBuddyRequestWhereUniqueInput
  }

  /**
   * CodeBuddyRequest findUniqueOrThrow
   */
  export type CodeBuddyRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter, which CodeBuddyRequest to fetch.
     */
    where: CodeBuddyRequestWhereUniqueInput
  }

  /**
   * CodeBuddyRequest findFirst
   */
  export type CodeBuddyRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter, which CodeBuddyRequest to fetch.
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CodeBuddyRequests to fetch.
     */
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CodeBuddyRequests.
     */
    cursor?: CodeBuddyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CodeBuddyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CodeBuddyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CodeBuddyRequests.
     */
    distinct?: CodeBuddyRequestScalarFieldEnum | CodeBuddyRequestScalarFieldEnum[]
  }

  /**
   * CodeBuddyRequest findFirstOrThrow
   */
  export type CodeBuddyRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter, which CodeBuddyRequest to fetch.
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CodeBuddyRequests to fetch.
     */
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CodeBuddyRequests.
     */
    cursor?: CodeBuddyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CodeBuddyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CodeBuddyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CodeBuddyRequests.
     */
    distinct?: CodeBuddyRequestScalarFieldEnum | CodeBuddyRequestScalarFieldEnum[]
  }

  /**
   * CodeBuddyRequest findMany
   */
  export type CodeBuddyRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter, which CodeBuddyRequests to fetch.
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CodeBuddyRequests to fetch.
     */
    orderBy?: CodeBuddyRequestOrderByWithRelationInput | CodeBuddyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CodeBuddyRequests.
     */
    cursor?: CodeBuddyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CodeBuddyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CodeBuddyRequests.
     */
    skip?: number
    distinct?: CodeBuddyRequestScalarFieldEnum | CodeBuddyRequestScalarFieldEnum[]
  }

  /**
   * CodeBuddyRequest create
   */
  export type CodeBuddyRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a CodeBuddyRequest.
     */
    data: XOR<CodeBuddyRequestCreateInput, CodeBuddyRequestUncheckedCreateInput>
  }

  /**
   * CodeBuddyRequest createMany
   */
  export type CodeBuddyRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CodeBuddyRequests.
     */
    data: CodeBuddyRequestCreateManyInput | CodeBuddyRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CodeBuddyRequest createManyAndReturn
   */
  export type CodeBuddyRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * The data used to create many CodeBuddyRequests.
     */
    data: CodeBuddyRequestCreateManyInput | CodeBuddyRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CodeBuddyRequest update
   */
  export type CodeBuddyRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a CodeBuddyRequest.
     */
    data: XOR<CodeBuddyRequestUpdateInput, CodeBuddyRequestUncheckedUpdateInput>
    /**
     * Choose, which CodeBuddyRequest to update.
     */
    where: CodeBuddyRequestWhereUniqueInput
  }

  /**
   * CodeBuddyRequest updateMany
   */
  export type CodeBuddyRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CodeBuddyRequests.
     */
    data: XOR<CodeBuddyRequestUpdateManyMutationInput, CodeBuddyRequestUncheckedUpdateManyInput>
    /**
     * Filter which CodeBuddyRequests to update
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * Limit how many CodeBuddyRequests to update.
     */
    limit?: number
  }

  /**
   * CodeBuddyRequest updateManyAndReturn
   */
  export type CodeBuddyRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * The data used to update CodeBuddyRequests.
     */
    data: XOR<CodeBuddyRequestUpdateManyMutationInput, CodeBuddyRequestUncheckedUpdateManyInput>
    /**
     * Filter which CodeBuddyRequests to update
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * Limit how many CodeBuddyRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CodeBuddyRequest upsert
   */
  export type CodeBuddyRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the CodeBuddyRequest to update in case it exists.
     */
    where: CodeBuddyRequestWhereUniqueInput
    /**
     * In case the CodeBuddyRequest found by the `where` argument doesn't exist, create a new CodeBuddyRequest with this data.
     */
    create: XOR<CodeBuddyRequestCreateInput, CodeBuddyRequestUncheckedCreateInput>
    /**
     * In case the CodeBuddyRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CodeBuddyRequestUpdateInput, CodeBuddyRequestUncheckedUpdateInput>
  }

  /**
   * CodeBuddyRequest delete
   */
  export type CodeBuddyRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    /**
     * Filter which CodeBuddyRequest to delete.
     */
    where: CodeBuddyRequestWhereUniqueInput
  }

  /**
   * CodeBuddyRequest deleteMany
   */
  export type CodeBuddyRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CodeBuddyRequests to delete
     */
    where?: CodeBuddyRequestWhereInput
    /**
     * Limit how many CodeBuddyRequests to delete.
     */
    limit?: number
  }

  /**
   * CodeBuddyRequest.notification
   */
  export type CodeBuddyRequest$notificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * CodeBuddyRequest without action
   */
  export type CodeBuddyRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
  }


  /**
   * Model techStack
   */

  export type AggregateTechStack = {
    _count: TechStackCountAggregateOutputType | null
    _avg: TechStackAvgAggregateOutputType | null
    _sum: TechStackSumAggregateOutputType | null
    _min: TechStackMinAggregateOutputType | null
    _max: TechStackMaxAggregateOutputType | null
  }

  export type TechStackAvgAggregateOutputType = {
    id: number | null
  }

  export type TechStackSumAggregateOutputType = {
    id: number | null
  }

  export type TechStackMinAggregateOutputType = {
    category: string | null
    name: string | null
    id: number | null
    logo: string | null
  }

  export type TechStackMaxAggregateOutputType = {
    category: string | null
    name: string | null
    id: number | null
    logo: string | null
  }

  export type TechStackCountAggregateOutputType = {
    category: number
    name: number
    id: number
    logo: number
    _all: number
  }


  export type TechStackAvgAggregateInputType = {
    id?: true
  }

  export type TechStackSumAggregateInputType = {
    id?: true
  }

  export type TechStackMinAggregateInputType = {
    category?: true
    name?: true
    id?: true
    logo?: true
  }

  export type TechStackMaxAggregateInputType = {
    category?: true
    name?: true
    id?: true
    logo?: true
  }

  export type TechStackCountAggregateInputType = {
    category?: true
    name?: true
    id?: true
    logo?: true
    _all?: true
  }

  export type TechStackAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which techStack to aggregate.
     */
    where?: techStackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of techStacks to fetch.
     */
    orderBy?: techStackOrderByWithRelationInput | techStackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: techStackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` techStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` techStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned techStacks
    **/
    _count?: true | TechStackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TechStackAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TechStackSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TechStackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TechStackMaxAggregateInputType
  }

  export type GetTechStackAggregateType<T extends TechStackAggregateArgs> = {
        [P in keyof T & keyof AggregateTechStack]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTechStack[P]>
      : GetScalarType<T[P], AggregateTechStack[P]>
  }




  export type techStackGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: techStackWhereInput
    orderBy?: techStackOrderByWithAggregationInput | techStackOrderByWithAggregationInput[]
    by: TechStackScalarFieldEnum[] | TechStackScalarFieldEnum
    having?: techStackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TechStackCountAggregateInputType | true
    _avg?: TechStackAvgAggregateInputType
    _sum?: TechStackSumAggregateInputType
    _min?: TechStackMinAggregateInputType
    _max?: TechStackMaxAggregateInputType
  }

  export type TechStackGroupByOutputType = {
    category: string | null
    name: string | null
    id: number
    logo: string | null
    _count: TechStackCountAggregateOutputType | null
    _avg: TechStackAvgAggregateOutputType | null
    _sum: TechStackSumAggregateOutputType | null
    _min: TechStackMinAggregateOutputType | null
    _max: TechStackMaxAggregateOutputType | null
  }

  type GetTechStackGroupByPayload<T extends techStackGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TechStackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TechStackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TechStackGroupByOutputType[P]>
            : GetScalarType<T[P], TechStackGroupByOutputType[P]>
        }
      >
    >


  export type techStackSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category?: boolean
    name?: boolean
    id?: boolean
    logo?: boolean
  }, ExtArgs["result"]["techStack"]>

  export type techStackSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category?: boolean
    name?: boolean
    id?: boolean
    logo?: boolean
  }, ExtArgs["result"]["techStack"]>

  export type techStackSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    category?: boolean
    name?: boolean
    id?: boolean
    logo?: boolean
  }, ExtArgs["result"]["techStack"]>

  export type techStackSelectScalar = {
    category?: boolean
    name?: boolean
    id?: boolean
    logo?: boolean
  }

  export type techStackOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"category" | "name" | "id" | "logo", ExtArgs["result"]["techStack"]>

  export type $techStackPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "techStack"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      category: string | null
      name: string | null
      id: number
      logo: string | null
    }, ExtArgs["result"]["techStack"]>
    composites: {}
  }

  type techStackGetPayload<S extends boolean | null | undefined | techStackDefaultArgs> = $Result.GetResult<Prisma.$techStackPayload, S>

  type techStackCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<techStackFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TechStackCountAggregateInputType | true
    }

  export interface techStackDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['techStack'], meta: { name: 'techStack' } }
    /**
     * Find zero or one TechStack that matches the filter.
     * @param {techStackFindUniqueArgs} args - Arguments to find a TechStack
     * @example
     * // Get one TechStack
     * const techStack = await prisma.techStack.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends techStackFindUniqueArgs>(args: SelectSubset<T, techStackFindUniqueArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TechStack that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {techStackFindUniqueOrThrowArgs} args - Arguments to find a TechStack
     * @example
     * // Get one TechStack
     * const techStack = await prisma.techStack.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends techStackFindUniqueOrThrowArgs>(args: SelectSubset<T, techStackFindUniqueOrThrowArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TechStack that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackFindFirstArgs} args - Arguments to find a TechStack
     * @example
     * // Get one TechStack
     * const techStack = await prisma.techStack.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends techStackFindFirstArgs>(args?: SelectSubset<T, techStackFindFirstArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TechStack that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackFindFirstOrThrowArgs} args - Arguments to find a TechStack
     * @example
     * // Get one TechStack
     * const techStack = await prisma.techStack.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends techStackFindFirstOrThrowArgs>(args?: SelectSubset<T, techStackFindFirstOrThrowArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TechStacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TechStacks
     * const techStacks = await prisma.techStack.findMany()
     * 
     * // Get first 10 TechStacks
     * const techStacks = await prisma.techStack.findMany({ take: 10 })
     * 
     * // Only select the `category`
     * const techStackWithCategoryOnly = await prisma.techStack.findMany({ select: { category: true } })
     * 
     */
    findMany<T extends techStackFindManyArgs>(args?: SelectSubset<T, techStackFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TechStack.
     * @param {techStackCreateArgs} args - Arguments to create a TechStack.
     * @example
     * // Create one TechStack
     * const TechStack = await prisma.techStack.create({
     *   data: {
     *     // ... data to create a TechStack
     *   }
     * })
     * 
     */
    create<T extends techStackCreateArgs>(args: SelectSubset<T, techStackCreateArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TechStacks.
     * @param {techStackCreateManyArgs} args - Arguments to create many TechStacks.
     * @example
     * // Create many TechStacks
     * const techStack = await prisma.techStack.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends techStackCreateManyArgs>(args?: SelectSubset<T, techStackCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TechStacks and returns the data saved in the database.
     * @param {techStackCreateManyAndReturnArgs} args - Arguments to create many TechStacks.
     * @example
     * // Create many TechStacks
     * const techStack = await prisma.techStack.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TechStacks and only return the `category`
     * const techStackWithCategoryOnly = await prisma.techStack.createManyAndReturn({
     *   select: { category: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends techStackCreateManyAndReturnArgs>(args?: SelectSubset<T, techStackCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TechStack.
     * @param {techStackDeleteArgs} args - Arguments to delete one TechStack.
     * @example
     * // Delete one TechStack
     * const TechStack = await prisma.techStack.delete({
     *   where: {
     *     // ... filter to delete one TechStack
     *   }
     * })
     * 
     */
    delete<T extends techStackDeleteArgs>(args: SelectSubset<T, techStackDeleteArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TechStack.
     * @param {techStackUpdateArgs} args - Arguments to update one TechStack.
     * @example
     * // Update one TechStack
     * const techStack = await prisma.techStack.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends techStackUpdateArgs>(args: SelectSubset<T, techStackUpdateArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TechStacks.
     * @param {techStackDeleteManyArgs} args - Arguments to filter TechStacks to delete.
     * @example
     * // Delete a few TechStacks
     * const { count } = await prisma.techStack.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends techStackDeleteManyArgs>(args?: SelectSubset<T, techStackDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TechStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TechStacks
     * const techStack = await prisma.techStack.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends techStackUpdateManyArgs>(args: SelectSubset<T, techStackUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TechStacks and returns the data updated in the database.
     * @param {techStackUpdateManyAndReturnArgs} args - Arguments to update many TechStacks.
     * @example
     * // Update many TechStacks
     * const techStack = await prisma.techStack.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TechStacks and only return the `category`
     * const techStackWithCategoryOnly = await prisma.techStack.updateManyAndReturn({
     *   select: { category: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends techStackUpdateManyAndReturnArgs>(args: SelectSubset<T, techStackUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TechStack.
     * @param {techStackUpsertArgs} args - Arguments to update or create a TechStack.
     * @example
     * // Update or create a TechStack
     * const techStack = await prisma.techStack.upsert({
     *   create: {
     *     // ... data to create a TechStack
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TechStack we want to update
     *   }
     * })
     */
    upsert<T extends techStackUpsertArgs>(args: SelectSubset<T, techStackUpsertArgs<ExtArgs>>): Prisma__techStackClient<$Result.GetResult<Prisma.$techStackPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TechStacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackCountArgs} args - Arguments to filter TechStacks to count.
     * @example
     * // Count the number of TechStacks
     * const count = await prisma.techStack.count({
     *   where: {
     *     // ... the filter for the TechStacks we want to count
     *   }
     * })
    **/
    count<T extends techStackCountArgs>(
      args?: Subset<T, techStackCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TechStackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TechStack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TechStackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TechStackAggregateArgs>(args: Subset<T, TechStackAggregateArgs>): Prisma.PrismaPromise<GetTechStackAggregateType<T>>

    /**
     * Group by TechStack.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {techStackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends techStackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: techStackGroupByArgs['orderBy'] }
        : { orderBy?: techStackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, techStackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTechStackGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the techStack model
   */
  readonly fields: techStackFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for techStack.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__techStackClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the techStack model
   */
  interface techStackFieldRefs {
    readonly category: FieldRef<"techStack", 'String'>
    readonly name: FieldRef<"techStack", 'String'>
    readonly id: FieldRef<"techStack", 'Int'>
    readonly logo: FieldRef<"techStack", 'String'>
  }
    

  // Custom InputTypes
  /**
   * techStack findUnique
   */
  export type techStackFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter, which techStack to fetch.
     */
    where: techStackWhereUniqueInput
  }

  /**
   * techStack findUniqueOrThrow
   */
  export type techStackFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter, which techStack to fetch.
     */
    where: techStackWhereUniqueInput
  }

  /**
   * techStack findFirst
   */
  export type techStackFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter, which techStack to fetch.
     */
    where?: techStackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of techStacks to fetch.
     */
    orderBy?: techStackOrderByWithRelationInput | techStackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for techStacks.
     */
    cursor?: techStackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` techStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` techStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of techStacks.
     */
    distinct?: TechStackScalarFieldEnum | TechStackScalarFieldEnum[]
  }

  /**
   * techStack findFirstOrThrow
   */
  export type techStackFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter, which techStack to fetch.
     */
    where?: techStackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of techStacks to fetch.
     */
    orderBy?: techStackOrderByWithRelationInput | techStackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for techStacks.
     */
    cursor?: techStackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` techStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` techStacks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of techStacks.
     */
    distinct?: TechStackScalarFieldEnum | TechStackScalarFieldEnum[]
  }

  /**
   * techStack findMany
   */
  export type techStackFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter, which techStacks to fetch.
     */
    where?: techStackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of techStacks to fetch.
     */
    orderBy?: techStackOrderByWithRelationInput | techStackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing techStacks.
     */
    cursor?: techStackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` techStacks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` techStacks.
     */
    skip?: number
    distinct?: TechStackScalarFieldEnum | TechStackScalarFieldEnum[]
  }

  /**
   * techStack create
   */
  export type techStackCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * The data needed to create a techStack.
     */
    data?: XOR<techStackCreateInput, techStackUncheckedCreateInput>
  }

  /**
   * techStack createMany
   */
  export type techStackCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many techStacks.
     */
    data: techStackCreateManyInput | techStackCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * techStack createManyAndReturn
   */
  export type techStackCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * The data used to create many techStacks.
     */
    data: techStackCreateManyInput | techStackCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * techStack update
   */
  export type techStackUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * The data needed to update a techStack.
     */
    data: XOR<techStackUpdateInput, techStackUncheckedUpdateInput>
    /**
     * Choose, which techStack to update.
     */
    where: techStackWhereUniqueInput
  }

  /**
   * techStack updateMany
   */
  export type techStackUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update techStacks.
     */
    data: XOR<techStackUpdateManyMutationInput, techStackUncheckedUpdateManyInput>
    /**
     * Filter which techStacks to update
     */
    where?: techStackWhereInput
    /**
     * Limit how many techStacks to update.
     */
    limit?: number
  }

  /**
   * techStack updateManyAndReturn
   */
  export type techStackUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * The data used to update techStacks.
     */
    data: XOR<techStackUpdateManyMutationInput, techStackUncheckedUpdateManyInput>
    /**
     * Filter which techStacks to update
     */
    where?: techStackWhereInput
    /**
     * Limit how many techStacks to update.
     */
    limit?: number
  }

  /**
   * techStack upsert
   */
  export type techStackUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * The filter to search for the techStack to update in case it exists.
     */
    where: techStackWhereUniqueInput
    /**
     * In case the techStack found by the `where` argument doesn't exist, create a new techStack with this data.
     */
    create: XOR<techStackCreateInput, techStackUncheckedCreateInput>
    /**
     * In case the techStack was found with the provided `where` argument, update it with this data.
     */
    update: XOR<techStackUpdateInput, techStackUncheckedUpdateInput>
  }

  /**
   * techStack delete
   */
  export type techStackDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
    /**
     * Filter which techStack to delete.
     */
    where: techStackWhereUniqueInput
  }

  /**
   * techStack deleteMany
   */
  export type techStackDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which techStacks to delete
     */
    where?: techStackWhereInput
    /**
     * Limit how many techStacks to delete.
     */
    limit?: number
  }

  /**
   * techStack without action
   */
  export type techStackDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the techStack
     */
    select?: techStackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the techStack
     */
    omit?: techStackOmit<ExtArgs> | null
  }


  /**
   * Model Portfolio
   */

  export type AggregatePortfolio = {
    _count: PortfolioCountAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  export type PortfolioMinAggregateOutputType = {
    id: string | null
    title: string | null
    summary: string | null
    profile: string | null
    name: string | null
    stackid: string | null
    userid: string | null
    achievements: string | null
    interests: string | null
    availability: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isPublished: boolean | null
    education: string | null
    location: string | null
    passionate: string | null
    yearofexperience: string | null
  }

  export type PortfolioMaxAggregateOutputType = {
    id: string | null
    title: string | null
    summary: string | null
    profile: string | null
    name: string | null
    stackid: string | null
    userid: string | null
    achievements: string | null
    interests: string | null
    availability: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isPublished: boolean | null
    education: string | null
    location: string | null
    passionate: string | null
    yearofexperience: string | null
  }

  export type PortfolioCountAggregateOutputType = {
    id: number
    title: number
    summary: number
    profile: number
    projects: number
    name: number
    stackid: number
    userid: number
    achievements: number
    interests: number
    availability: number
    createdAt: number
    updatedAt: number
    isPublished: number
    experiences: number
    education: number
    location: number
    passionate: number
    yearofexperience: number
    certifications: number
    techstack: number
    _all: number
  }


  export type PortfolioMinAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    profile?: true
    name?: true
    stackid?: true
    userid?: true
    achievements?: true
    interests?: true
    availability?: true
    createdAt?: true
    updatedAt?: true
    isPublished?: true
    education?: true
    location?: true
    passionate?: true
    yearofexperience?: true
  }

  export type PortfolioMaxAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    profile?: true
    name?: true
    stackid?: true
    userid?: true
    achievements?: true
    interests?: true
    availability?: true
    createdAt?: true
    updatedAt?: true
    isPublished?: true
    education?: true
    location?: true
    passionate?: true
    yearofexperience?: true
  }

  export type PortfolioCountAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    profile?: true
    projects?: true
    name?: true
    stackid?: true
    userid?: true
    achievements?: true
    interests?: true
    availability?: true
    createdAt?: true
    updatedAt?: true
    isPublished?: true
    experiences?: true
    education?: true
    location?: true
    passionate?: true
    yearofexperience?: true
    certifications?: true
    techstack?: true
    _all?: true
  }

  export type PortfolioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Portfolio to aggregate.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Portfolios
    **/
    _count?: true | PortfolioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PortfolioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PortfolioMaxAggregateInputType
  }

  export type GetPortfolioAggregateType<T extends PortfolioAggregateArgs> = {
        [P in keyof T & keyof AggregatePortfolio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePortfolio[P]>
      : GetScalarType<T[P], AggregatePortfolio[P]>
  }




  export type PortfolioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PortfolioWhereInput
    orderBy?: PortfolioOrderByWithAggregationInput | PortfolioOrderByWithAggregationInput[]
    by: PortfolioScalarFieldEnum[] | PortfolioScalarFieldEnum
    having?: PortfolioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PortfolioCountAggregateInputType | true
    _min?: PortfolioMinAggregateInputType
    _max?: PortfolioMaxAggregateInputType
  }

  export type PortfolioGroupByOutputType = {
    id: string
    title: string
    summary: string
    profile: string | null
    projects: JsonValue | null
    name: string
    stackid: string | null
    userid: string
    achievements: string | null
    interests: string | null
    availability: string | null
    createdAt: Date
    updatedAt: Date
    isPublished: boolean
    experiences: JsonValue | null
    education: string | null
    location: string | null
    passionate: string | null
    yearofexperience: string | null
    certifications: JsonValue | null
    techstack: JsonValue | null
    _count: PortfolioCountAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  type GetPortfolioGroupByPayload<T extends PortfolioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PortfolioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PortfolioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
            : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
        }
      >
    >


  export type PortfolioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    profile?: boolean
    projects?: boolean
    name?: boolean
    stackid?: boolean
    userid?: boolean
    achievements?: boolean
    interests?: boolean
    availability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isPublished?: boolean
    experiences?: boolean
    education?: boolean
    location?: boolean
    passionate?: boolean
    yearofexperience?: boolean
    certifications?: boolean
    techstack?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    links?: boolean | Portfolio$linksArgs<ExtArgs>
    _count?: boolean | PortfolioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["portfolio"]>

  export type PortfolioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    profile?: boolean
    projects?: boolean
    name?: boolean
    stackid?: boolean
    userid?: boolean
    achievements?: boolean
    interests?: boolean
    availability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isPublished?: boolean
    experiences?: boolean
    education?: boolean
    location?: boolean
    passionate?: boolean
    yearofexperience?: boolean
    certifications?: boolean
    techstack?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["portfolio"]>

  export type PortfolioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    profile?: boolean
    projects?: boolean
    name?: boolean
    stackid?: boolean
    userid?: boolean
    achievements?: boolean
    interests?: boolean
    availability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isPublished?: boolean
    experiences?: boolean
    education?: boolean
    location?: boolean
    passionate?: boolean
    yearofexperience?: boolean
    certifications?: boolean
    techstack?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["portfolio"]>

  export type PortfolioSelectScalar = {
    id?: boolean
    title?: boolean
    summary?: boolean
    profile?: boolean
    projects?: boolean
    name?: boolean
    stackid?: boolean
    userid?: boolean
    achievements?: boolean
    interests?: boolean
    availability?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isPublished?: boolean
    experiences?: boolean
    education?: boolean
    location?: boolean
    passionate?: boolean
    yearofexperience?: boolean
    certifications?: boolean
    techstack?: boolean
  }

  export type PortfolioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "summary" | "profile" | "projects" | "name" | "stackid" | "userid" | "achievements" | "interests" | "availability" | "createdAt" | "updatedAt" | "isPublished" | "experiences" | "education" | "location" | "passionate" | "yearofexperience" | "certifications" | "techstack", ExtArgs["result"]["portfolio"]>
  export type PortfolioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    links?: boolean | Portfolio$linksArgs<ExtArgs>
    _count?: boolean | PortfolioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PortfolioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PortfolioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PortfolioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Portfolio"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      links: Prisma.$SocialLinkPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      summary: string
      profile: string | null
      projects: Prisma.JsonValue | null
      name: string
      stackid: string | null
      userid: string
      achievements: string | null
      interests: string | null
      availability: string | null
      createdAt: Date
      updatedAt: Date
      isPublished: boolean
      experiences: Prisma.JsonValue | null
      education: string | null
      location: string | null
      passionate: string | null
      yearofexperience: string | null
      certifications: Prisma.JsonValue | null
      techstack: Prisma.JsonValue | null
    }, ExtArgs["result"]["portfolio"]>
    composites: {}
  }

  type PortfolioGetPayload<S extends boolean | null | undefined | PortfolioDefaultArgs> = $Result.GetResult<Prisma.$PortfolioPayload, S>

  type PortfolioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PortfolioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PortfolioCountAggregateInputType | true
    }

  export interface PortfolioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Portfolio'], meta: { name: 'Portfolio' } }
    /**
     * Find zero or one Portfolio that matches the filter.
     * @param {PortfolioFindUniqueArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PortfolioFindUniqueArgs>(args: SelectSubset<T, PortfolioFindUniqueArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Portfolio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PortfolioFindUniqueOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PortfolioFindUniqueOrThrowArgs>(args: SelectSubset<T, PortfolioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Portfolio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindFirstArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PortfolioFindFirstArgs>(args?: SelectSubset<T, PortfolioFindFirstArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Portfolio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindFirstOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PortfolioFindFirstOrThrowArgs>(args?: SelectSubset<T, PortfolioFindFirstOrThrowArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Portfolios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Portfolios
     * const portfolios = await prisma.portfolio.findMany()
     * 
     * // Get first 10 Portfolios
     * const portfolios = await prisma.portfolio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portfolioWithIdOnly = await prisma.portfolio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PortfolioFindManyArgs>(args?: SelectSubset<T, PortfolioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Portfolio.
     * @param {PortfolioCreateArgs} args - Arguments to create a Portfolio.
     * @example
     * // Create one Portfolio
     * const Portfolio = await prisma.portfolio.create({
     *   data: {
     *     // ... data to create a Portfolio
     *   }
     * })
     * 
     */
    create<T extends PortfolioCreateArgs>(args: SelectSubset<T, PortfolioCreateArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Portfolios.
     * @param {PortfolioCreateManyArgs} args - Arguments to create many Portfolios.
     * @example
     * // Create many Portfolios
     * const portfolio = await prisma.portfolio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PortfolioCreateManyArgs>(args?: SelectSubset<T, PortfolioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Portfolios and returns the data saved in the database.
     * @param {PortfolioCreateManyAndReturnArgs} args - Arguments to create many Portfolios.
     * @example
     * // Create many Portfolios
     * const portfolio = await prisma.portfolio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Portfolios and only return the `id`
     * const portfolioWithIdOnly = await prisma.portfolio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PortfolioCreateManyAndReturnArgs>(args?: SelectSubset<T, PortfolioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Portfolio.
     * @param {PortfolioDeleteArgs} args - Arguments to delete one Portfolio.
     * @example
     * // Delete one Portfolio
     * const Portfolio = await prisma.portfolio.delete({
     *   where: {
     *     // ... filter to delete one Portfolio
     *   }
     * })
     * 
     */
    delete<T extends PortfolioDeleteArgs>(args: SelectSubset<T, PortfolioDeleteArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Portfolio.
     * @param {PortfolioUpdateArgs} args - Arguments to update one Portfolio.
     * @example
     * // Update one Portfolio
     * const portfolio = await prisma.portfolio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PortfolioUpdateArgs>(args: SelectSubset<T, PortfolioUpdateArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Portfolios.
     * @param {PortfolioDeleteManyArgs} args - Arguments to filter Portfolios to delete.
     * @example
     * // Delete a few Portfolios
     * const { count } = await prisma.portfolio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PortfolioDeleteManyArgs>(args?: SelectSubset<T, PortfolioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Portfolios
     * const portfolio = await prisma.portfolio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PortfolioUpdateManyArgs>(args: SelectSubset<T, PortfolioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Portfolios and returns the data updated in the database.
     * @param {PortfolioUpdateManyAndReturnArgs} args - Arguments to update many Portfolios.
     * @example
     * // Update many Portfolios
     * const portfolio = await prisma.portfolio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Portfolios and only return the `id`
     * const portfolioWithIdOnly = await prisma.portfolio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PortfolioUpdateManyAndReturnArgs>(args: SelectSubset<T, PortfolioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Portfolio.
     * @param {PortfolioUpsertArgs} args - Arguments to update or create a Portfolio.
     * @example
     * // Update or create a Portfolio
     * const portfolio = await prisma.portfolio.upsert({
     *   create: {
     *     // ... data to create a Portfolio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Portfolio we want to update
     *   }
     * })
     */
    upsert<T extends PortfolioUpsertArgs>(args: SelectSubset<T, PortfolioUpsertArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioCountArgs} args - Arguments to filter Portfolios to count.
     * @example
     * // Count the number of Portfolios
     * const count = await prisma.portfolio.count({
     *   where: {
     *     // ... the filter for the Portfolios we want to count
     *   }
     * })
    **/
    count<T extends PortfolioCountArgs>(
      args?: Subset<T, PortfolioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PortfolioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PortfolioAggregateArgs>(args: Subset<T, PortfolioAggregateArgs>): Prisma.PrismaPromise<GetPortfolioAggregateType<T>>

    /**
     * Group by Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PortfolioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PortfolioGroupByArgs['orderBy'] }
        : { orderBy?: PortfolioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PortfolioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortfolioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Portfolio model
   */
  readonly fields: PortfolioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Portfolio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PortfolioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    links<T extends Portfolio$linksArgs<ExtArgs> = {}>(args?: Subset<T, Portfolio$linksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Portfolio model
   */
  interface PortfolioFieldRefs {
    readonly id: FieldRef<"Portfolio", 'String'>
    readonly title: FieldRef<"Portfolio", 'String'>
    readonly summary: FieldRef<"Portfolio", 'String'>
    readonly profile: FieldRef<"Portfolio", 'String'>
    readonly projects: FieldRef<"Portfolio", 'Json'>
    readonly name: FieldRef<"Portfolio", 'String'>
    readonly stackid: FieldRef<"Portfolio", 'String'>
    readonly userid: FieldRef<"Portfolio", 'String'>
    readonly achievements: FieldRef<"Portfolio", 'String'>
    readonly interests: FieldRef<"Portfolio", 'String'>
    readonly availability: FieldRef<"Portfolio", 'String'>
    readonly createdAt: FieldRef<"Portfolio", 'DateTime'>
    readonly updatedAt: FieldRef<"Portfolio", 'DateTime'>
    readonly isPublished: FieldRef<"Portfolio", 'Boolean'>
    readonly experiences: FieldRef<"Portfolio", 'Json'>
    readonly education: FieldRef<"Portfolio", 'String'>
    readonly location: FieldRef<"Portfolio", 'String'>
    readonly passionate: FieldRef<"Portfolio", 'String'>
    readonly yearofexperience: FieldRef<"Portfolio", 'String'>
    readonly certifications: FieldRef<"Portfolio", 'Json'>
    readonly techstack: FieldRef<"Portfolio", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Portfolio findUnique
   */
  export type PortfolioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio findUniqueOrThrow
   */
  export type PortfolioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio findFirst
   */
  export type PortfolioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio findFirstOrThrow
   */
  export type PortfolioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio findMany
   */
  export type PortfolioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolios to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio create
   */
  export type PortfolioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The data needed to create a Portfolio.
     */
    data: XOR<PortfolioCreateInput, PortfolioUncheckedCreateInput>
  }

  /**
   * Portfolio createMany
   */
  export type PortfolioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Portfolios.
     */
    data: PortfolioCreateManyInput | PortfolioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Portfolio createManyAndReturn
   */
  export type PortfolioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * The data used to create many Portfolios.
     */
    data: PortfolioCreateManyInput | PortfolioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Portfolio update
   */
  export type PortfolioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The data needed to update a Portfolio.
     */
    data: XOR<PortfolioUpdateInput, PortfolioUncheckedUpdateInput>
    /**
     * Choose, which Portfolio to update.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio updateMany
   */
  export type PortfolioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Portfolios.
     */
    data: XOR<PortfolioUpdateManyMutationInput, PortfolioUncheckedUpdateManyInput>
    /**
     * Filter which Portfolios to update
     */
    where?: PortfolioWhereInput
    /**
     * Limit how many Portfolios to update.
     */
    limit?: number
  }

  /**
   * Portfolio updateManyAndReturn
   */
  export type PortfolioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * The data used to update Portfolios.
     */
    data: XOR<PortfolioUpdateManyMutationInput, PortfolioUncheckedUpdateManyInput>
    /**
     * Filter which Portfolios to update
     */
    where?: PortfolioWhereInput
    /**
     * Limit how many Portfolios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Portfolio upsert
   */
  export type PortfolioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The filter to search for the Portfolio to update in case it exists.
     */
    where: PortfolioWhereUniqueInput
    /**
     * In case the Portfolio found by the `where` argument doesn't exist, create a new Portfolio with this data.
     */
    create: XOR<PortfolioCreateInput, PortfolioUncheckedCreateInput>
    /**
     * In case the Portfolio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PortfolioUpdateInput, PortfolioUncheckedUpdateInput>
  }

  /**
   * Portfolio delete
   */
  export type PortfolioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter which Portfolio to delete.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio deleteMany
   */
  export type PortfolioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Portfolios to delete
     */
    where?: PortfolioWhereInput
    /**
     * Limit how many Portfolios to delete.
     */
    limit?: number
  }

  /**
   * Portfolio.links
   */
  export type Portfolio$linksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    where?: SocialLinkWhereInput
    orderBy?: SocialLinkOrderByWithRelationInput | SocialLinkOrderByWithRelationInput[]
    cursor?: SocialLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SocialLinkScalarFieldEnum | SocialLinkScalarFieldEnum[]
  }

  /**
   * Portfolio without action
   */
  export type PortfolioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
  }


  /**
   * Model SocialLink
   */

  export type AggregateSocialLink = {
    _count: SocialLinkCountAggregateOutputType | null
    _min: SocialLinkMinAggregateOutputType | null
    _max: SocialLinkMaxAggregateOutputType | null
  }

  export type SocialLinkMinAggregateOutputType = {
    id: string | null
    platform: string | null
    url: string | null
    portfolioId: string | null
    logo: string | null
  }

  export type SocialLinkMaxAggregateOutputType = {
    id: string | null
    platform: string | null
    url: string | null
    portfolioId: string | null
    logo: string | null
  }

  export type SocialLinkCountAggregateOutputType = {
    id: number
    platform: number
    url: number
    portfolioId: number
    logo: number
    _all: number
  }


  export type SocialLinkMinAggregateInputType = {
    id?: true
    platform?: true
    url?: true
    portfolioId?: true
    logo?: true
  }

  export type SocialLinkMaxAggregateInputType = {
    id?: true
    platform?: true
    url?: true
    portfolioId?: true
    logo?: true
  }

  export type SocialLinkCountAggregateInputType = {
    id?: true
    platform?: true
    url?: true
    portfolioId?: true
    logo?: true
    _all?: true
  }

  export type SocialLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocialLink to aggregate.
     */
    where?: SocialLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialLinks to fetch.
     */
    orderBy?: SocialLinkOrderByWithRelationInput | SocialLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SocialLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SocialLinks
    **/
    _count?: true | SocialLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SocialLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SocialLinkMaxAggregateInputType
  }

  export type GetSocialLinkAggregateType<T extends SocialLinkAggregateArgs> = {
        [P in keyof T & keyof AggregateSocialLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocialLink[P]>
      : GetScalarType<T[P], AggregateSocialLink[P]>
  }




  export type SocialLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SocialLinkWhereInput
    orderBy?: SocialLinkOrderByWithAggregationInput | SocialLinkOrderByWithAggregationInput[]
    by: SocialLinkScalarFieldEnum[] | SocialLinkScalarFieldEnum
    having?: SocialLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SocialLinkCountAggregateInputType | true
    _min?: SocialLinkMinAggregateInputType
    _max?: SocialLinkMaxAggregateInputType
  }

  export type SocialLinkGroupByOutputType = {
    id: string
    platform: string
    url: string
    portfolioId: string
    logo: string | null
    _count: SocialLinkCountAggregateOutputType | null
    _min: SocialLinkMinAggregateOutputType | null
    _max: SocialLinkMaxAggregateOutputType | null
  }

  type GetSocialLinkGroupByPayload<T extends SocialLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SocialLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SocialLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SocialLinkGroupByOutputType[P]>
            : GetScalarType<T[P], SocialLinkGroupByOutputType[P]>
        }
      >
    >


  export type SocialLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    platform?: boolean
    url?: boolean
    portfolioId?: boolean
    logo?: boolean
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["socialLink"]>

  export type SocialLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    platform?: boolean
    url?: boolean
    portfolioId?: boolean
    logo?: boolean
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["socialLink"]>

  export type SocialLinkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    platform?: boolean
    url?: boolean
    portfolioId?: boolean
    logo?: boolean
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["socialLink"]>

  export type SocialLinkSelectScalar = {
    id?: boolean
    platform?: boolean
    url?: boolean
    portfolioId?: boolean
    logo?: boolean
  }

  export type SocialLinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "platform" | "url" | "portfolioId" | "logo", ExtArgs["result"]["socialLink"]>
  export type SocialLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }
  export type SocialLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }
  export type SocialLinkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    portfolio?: boolean | PortfolioDefaultArgs<ExtArgs>
  }

  export type $SocialLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SocialLink"
    objects: {
      portfolio: Prisma.$PortfolioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      platform: string
      url: string
      portfolioId: string
      logo: string | null
    }, ExtArgs["result"]["socialLink"]>
    composites: {}
  }

  type SocialLinkGetPayload<S extends boolean | null | undefined | SocialLinkDefaultArgs> = $Result.GetResult<Prisma.$SocialLinkPayload, S>

  type SocialLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SocialLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SocialLinkCountAggregateInputType | true
    }

  export interface SocialLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SocialLink'], meta: { name: 'SocialLink' } }
    /**
     * Find zero or one SocialLink that matches the filter.
     * @param {SocialLinkFindUniqueArgs} args - Arguments to find a SocialLink
     * @example
     * // Get one SocialLink
     * const socialLink = await prisma.socialLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SocialLinkFindUniqueArgs>(args: SelectSubset<T, SocialLinkFindUniqueArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SocialLink that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SocialLinkFindUniqueOrThrowArgs} args - Arguments to find a SocialLink
     * @example
     * // Get one SocialLink
     * const socialLink = await prisma.socialLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SocialLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, SocialLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SocialLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkFindFirstArgs} args - Arguments to find a SocialLink
     * @example
     * // Get one SocialLink
     * const socialLink = await prisma.socialLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SocialLinkFindFirstArgs>(args?: SelectSubset<T, SocialLinkFindFirstArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SocialLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkFindFirstOrThrowArgs} args - Arguments to find a SocialLink
     * @example
     * // Get one SocialLink
     * const socialLink = await prisma.socialLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SocialLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, SocialLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SocialLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SocialLinks
     * const socialLinks = await prisma.socialLink.findMany()
     * 
     * // Get first 10 SocialLinks
     * const socialLinks = await prisma.socialLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const socialLinkWithIdOnly = await prisma.socialLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SocialLinkFindManyArgs>(args?: SelectSubset<T, SocialLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SocialLink.
     * @param {SocialLinkCreateArgs} args - Arguments to create a SocialLink.
     * @example
     * // Create one SocialLink
     * const SocialLink = await prisma.socialLink.create({
     *   data: {
     *     // ... data to create a SocialLink
     *   }
     * })
     * 
     */
    create<T extends SocialLinkCreateArgs>(args: SelectSubset<T, SocialLinkCreateArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SocialLinks.
     * @param {SocialLinkCreateManyArgs} args - Arguments to create many SocialLinks.
     * @example
     * // Create many SocialLinks
     * const socialLink = await prisma.socialLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SocialLinkCreateManyArgs>(args?: SelectSubset<T, SocialLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SocialLinks and returns the data saved in the database.
     * @param {SocialLinkCreateManyAndReturnArgs} args - Arguments to create many SocialLinks.
     * @example
     * // Create many SocialLinks
     * const socialLink = await prisma.socialLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SocialLinks and only return the `id`
     * const socialLinkWithIdOnly = await prisma.socialLink.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SocialLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, SocialLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SocialLink.
     * @param {SocialLinkDeleteArgs} args - Arguments to delete one SocialLink.
     * @example
     * // Delete one SocialLink
     * const SocialLink = await prisma.socialLink.delete({
     *   where: {
     *     // ... filter to delete one SocialLink
     *   }
     * })
     * 
     */
    delete<T extends SocialLinkDeleteArgs>(args: SelectSubset<T, SocialLinkDeleteArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SocialLink.
     * @param {SocialLinkUpdateArgs} args - Arguments to update one SocialLink.
     * @example
     * // Update one SocialLink
     * const socialLink = await prisma.socialLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SocialLinkUpdateArgs>(args: SelectSubset<T, SocialLinkUpdateArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SocialLinks.
     * @param {SocialLinkDeleteManyArgs} args - Arguments to filter SocialLinks to delete.
     * @example
     * // Delete a few SocialLinks
     * const { count } = await prisma.socialLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SocialLinkDeleteManyArgs>(args?: SelectSubset<T, SocialLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SocialLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SocialLinks
     * const socialLink = await prisma.socialLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SocialLinkUpdateManyArgs>(args: SelectSubset<T, SocialLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SocialLinks and returns the data updated in the database.
     * @param {SocialLinkUpdateManyAndReturnArgs} args - Arguments to update many SocialLinks.
     * @example
     * // Update many SocialLinks
     * const socialLink = await prisma.socialLink.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SocialLinks and only return the `id`
     * const socialLinkWithIdOnly = await prisma.socialLink.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SocialLinkUpdateManyAndReturnArgs>(args: SelectSubset<T, SocialLinkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SocialLink.
     * @param {SocialLinkUpsertArgs} args - Arguments to update or create a SocialLink.
     * @example
     * // Update or create a SocialLink
     * const socialLink = await prisma.socialLink.upsert({
     *   create: {
     *     // ... data to create a SocialLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SocialLink we want to update
     *   }
     * })
     */
    upsert<T extends SocialLinkUpsertArgs>(args: SelectSubset<T, SocialLinkUpsertArgs<ExtArgs>>): Prisma__SocialLinkClient<$Result.GetResult<Prisma.$SocialLinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SocialLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkCountArgs} args - Arguments to filter SocialLinks to count.
     * @example
     * // Count the number of SocialLinks
     * const count = await prisma.socialLink.count({
     *   where: {
     *     // ... the filter for the SocialLinks we want to count
     *   }
     * })
    **/
    count<T extends SocialLinkCountArgs>(
      args?: Subset<T, SocialLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SocialLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SocialLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SocialLinkAggregateArgs>(args: Subset<T, SocialLinkAggregateArgs>): Prisma.PrismaPromise<GetSocialLinkAggregateType<T>>

    /**
     * Group by SocialLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocialLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SocialLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SocialLinkGroupByArgs['orderBy'] }
        : { orderBy?: SocialLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SocialLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocialLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SocialLink model
   */
  readonly fields: SocialLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SocialLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SocialLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    portfolio<T extends PortfolioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PortfolioDefaultArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SocialLink model
   */
  interface SocialLinkFieldRefs {
    readonly id: FieldRef<"SocialLink", 'String'>
    readonly platform: FieldRef<"SocialLink", 'String'>
    readonly url: FieldRef<"SocialLink", 'String'>
    readonly portfolioId: FieldRef<"SocialLink", 'String'>
    readonly logo: FieldRef<"SocialLink", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SocialLink findUnique
   */
  export type SocialLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter, which SocialLink to fetch.
     */
    where: SocialLinkWhereUniqueInput
  }

  /**
   * SocialLink findUniqueOrThrow
   */
  export type SocialLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter, which SocialLink to fetch.
     */
    where: SocialLinkWhereUniqueInput
  }

  /**
   * SocialLink findFirst
   */
  export type SocialLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter, which SocialLink to fetch.
     */
    where?: SocialLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialLinks to fetch.
     */
    orderBy?: SocialLinkOrderByWithRelationInput | SocialLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocialLinks.
     */
    cursor?: SocialLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocialLinks.
     */
    distinct?: SocialLinkScalarFieldEnum | SocialLinkScalarFieldEnum[]
  }

  /**
   * SocialLink findFirstOrThrow
   */
  export type SocialLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter, which SocialLink to fetch.
     */
    where?: SocialLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialLinks to fetch.
     */
    orderBy?: SocialLinkOrderByWithRelationInput | SocialLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SocialLinks.
     */
    cursor?: SocialLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SocialLinks.
     */
    distinct?: SocialLinkScalarFieldEnum | SocialLinkScalarFieldEnum[]
  }

  /**
   * SocialLink findMany
   */
  export type SocialLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter, which SocialLinks to fetch.
     */
    where?: SocialLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SocialLinks to fetch.
     */
    orderBy?: SocialLinkOrderByWithRelationInput | SocialLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SocialLinks.
     */
    cursor?: SocialLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SocialLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SocialLinks.
     */
    skip?: number
    distinct?: SocialLinkScalarFieldEnum | SocialLinkScalarFieldEnum[]
  }

  /**
   * SocialLink create
   */
  export type SocialLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a SocialLink.
     */
    data: XOR<SocialLinkCreateInput, SocialLinkUncheckedCreateInput>
  }

  /**
   * SocialLink createMany
   */
  export type SocialLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SocialLinks.
     */
    data: SocialLinkCreateManyInput | SocialLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SocialLink createManyAndReturn
   */
  export type SocialLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * The data used to create many SocialLinks.
     */
    data: SocialLinkCreateManyInput | SocialLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SocialLink update
   */
  export type SocialLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a SocialLink.
     */
    data: XOR<SocialLinkUpdateInput, SocialLinkUncheckedUpdateInput>
    /**
     * Choose, which SocialLink to update.
     */
    where: SocialLinkWhereUniqueInput
  }

  /**
   * SocialLink updateMany
   */
  export type SocialLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SocialLinks.
     */
    data: XOR<SocialLinkUpdateManyMutationInput, SocialLinkUncheckedUpdateManyInput>
    /**
     * Filter which SocialLinks to update
     */
    where?: SocialLinkWhereInput
    /**
     * Limit how many SocialLinks to update.
     */
    limit?: number
  }

  /**
   * SocialLink updateManyAndReturn
   */
  export type SocialLinkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * The data used to update SocialLinks.
     */
    data: XOR<SocialLinkUpdateManyMutationInput, SocialLinkUncheckedUpdateManyInput>
    /**
     * Filter which SocialLinks to update
     */
    where?: SocialLinkWhereInput
    /**
     * Limit how many SocialLinks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SocialLink upsert
   */
  export type SocialLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the SocialLink to update in case it exists.
     */
    where: SocialLinkWhereUniqueInput
    /**
     * In case the SocialLink found by the `where` argument doesn't exist, create a new SocialLink with this data.
     */
    create: XOR<SocialLinkCreateInput, SocialLinkUncheckedCreateInput>
    /**
     * In case the SocialLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SocialLinkUpdateInput, SocialLinkUncheckedUpdateInput>
  }

  /**
   * SocialLink delete
   */
  export type SocialLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
    /**
     * Filter which SocialLink to delete.
     */
    where: SocialLinkWhereUniqueInput
  }

  /**
   * SocialLink deleteMany
   */
  export type SocialLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SocialLinks to delete
     */
    where?: SocialLinkWhereInput
    /**
     * Limit how many SocialLinks to delete.
     */
    limit?: number
  }

  /**
   * SocialLink without action
   */
  export type SocialLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocialLink
     */
    select?: SocialLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SocialLink
     */
    omit?: SocialLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocialLinkInclude<ExtArgs> | null
  }


  /**
   * Model PasswordResetToken
   */

  export type AggregatePasswordResetToken = {
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  export type PasswordResetTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    email: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    email: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenCountAggregateOutputType = {
    id: number
    token: number
    email: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type PasswordResetTokenMinAggregateInputType = {
    id?: true
    token?: true
    email?: true
    expiresAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenMaxAggregateInputType = {
    id?: true
    token?: true
    email?: true
    expiresAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenCountAggregateInputType = {
    id?: true
    token?: true
    email?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type PasswordResetTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetToken to aggregate.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordResetTokens
    **/
    _count?: true | PasswordResetTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordResetTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type GetPasswordResetTokenAggregateType<T extends PasswordResetTokenAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordResetToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordResetToken[P]>
      : GetScalarType<T[P], AggregatePasswordResetToken[P]>
  }




  export type PasswordResetTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithAggregationInput | PasswordResetTokenOrderByWithAggregationInput[]
    by: PasswordResetTokenScalarFieldEnum[] | PasswordResetTokenScalarFieldEnum
    having?: PasswordResetTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordResetTokenCountAggregateInputType | true
    _min?: PasswordResetTokenMinAggregateInputType
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type PasswordResetTokenGroupByOutputType = {
    id: string
    token: string
    email: string
    expiresAt: Date
    createdAt: Date
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  type GetPasswordResetTokenGroupByPayload<T extends PasswordResetTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordResetTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordResetTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
        }
      >
    >


  export type PasswordResetTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    email?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    email?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    email?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectScalar = {
    id?: boolean
    token?: boolean
    email?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type PasswordResetTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "email" | "expiresAt" | "createdAt", ExtArgs["result"]["passwordResetToken"]>

  export type $PasswordResetTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordResetToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      email: string
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["passwordResetToken"]>
    composites: {}
  }

  type PasswordResetTokenGetPayload<S extends boolean | null | undefined | PasswordResetTokenDefaultArgs> = $Result.GetResult<Prisma.$PasswordResetTokenPayload, S>

  type PasswordResetTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordResetTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordResetTokenCountAggregateInputType | true
    }

  export interface PasswordResetTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordResetToken'], meta: { name: 'PasswordResetToken' } }
    /**
     * Find zero or one PasswordResetToken that matches the filter.
     * @param {PasswordResetTokenFindUniqueArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordResetTokenFindUniqueArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordResetToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordResetTokenFindUniqueOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordResetTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordResetTokenFindFirstArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordResetTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany()
     * 
     * // Get first 10 PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PasswordResetTokenFindManyArgs>(args?: SelectSubset<T, PasswordResetTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordResetToken.
     * @param {PasswordResetTokenCreateArgs} args - Arguments to create a PasswordResetToken.
     * @example
     * // Create one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.create({
     *   data: {
     *     // ... data to create a PasswordResetToken
     *   }
     * })
     * 
     */
    create<T extends PasswordResetTokenCreateArgs>(args: SelectSubset<T, PasswordResetTokenCreateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordResetTokens.
     * @param {PasswordResetTokenCreateManyArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordResetTokenCreateManyArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordResetTokens and returns the data saved in the database.
     * @param {PasswordResetTokenCreateManyAndReturnArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordResetTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordResetToken.
     * @param {PasswordResetTokenDeleteArgs} args - Arguments to delete one PasswordResetToken.
     * @example
     * // Delete one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.delete({
     *   where: {
     *     // ... filter to delete one PasswordResetToken
     *   }
     * })
     * 
     */
    delete<T extends PasswordResetTokenDeleteArgs>(args: SelectSubset<T, PasswordResetTokenDeleteArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordResetToken.
     * @param {PasswordResetTokenUpdateArgs} args - Arguments to update one PasswordResetToken.
     * @example
     * // Update one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordResetTokenUpdateArgs>(args: SelectSubset<T, PasswordResetTokenUpdateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordResetTokens.
     * @param {PasswordResetTokenDeleteManyArgs} args - Arguments to filter PasswordResetTokens to delete.
     * @example
     * // Delete a few PasswordResetTokens
     * const { count } = await prisma.passwordResetToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordResetTokenDeleteManyArgs>(args?: SelectSubset<T, PasswordResetTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordResetTokenUpdateManyArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens and returns the data updated in the database.
     * @param {PasswordResetTokenUpdateManyAndReturnArgs} args - Arguments to update many PasswordResetTokens.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordResetTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordResetToken.
     * @param {PasswordResetTokenUpsertArgs} args - Arguments to update or create a PasswordResetToken.
     * @example
     * // Update or create a PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.upsert({
     *   create: {
     *     // ... data to create a PasswordResetToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordResetToken we want to update
     *   }
     * })
     */
    upsert<T extends PasswordResetTokenUpsertArgs>(args: SelectSubset<T, PasswordResetTokenUpsertArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenCountArgs} args - Arguments to filter PasswordResetTokens to count.
     * @example
     * // Count the number of PasswordResetTokens
     * const count = await prisma.passwordResetToken.count({
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to count
     *   }
     * })
    **/
    count<T extends PasswordResetTokenCountArgs>(
      args?: Subset<T, PasswordResetTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordResetTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordResetTokenAggregateArgs>(args: Subset<T, PasswordResetTokenAggregateArgs>): Prisma.PrismaPromise<GetPasswordResetTokenAggregateType<T>>

    /**
     * Group by PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordResetTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordResetTokenGroupByArgs['orderBy'] }
        : { orderBy?: PasswordResetTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordResetTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordResetTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordResetToken model
   */
  readonly fields: PasswordResetTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordResetToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordResetTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordResetToken model
   */
  interface PasswordResetTokenFieldRefs {
    readonly id: FieldRef<"PasswordResetToken", 'String'>
    readonly token: FieldRef<"PasswordResetToken", 'String'>
    readonly email: FieldRef<"PasswordResetToken", 'String'>
    readonly expiresAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly createdAt: FieldRef<"PasswordResetToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordResetToken findUnique
   */
  export type PasswordResetTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findUniqueOrThrow
   */
  export type PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findFirst
   */
  export type PasswordResetTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findFirstOrThrow
   */
  export type PasswordResetTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findMany
   */
  export type PasswordResetTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken create
   */
  export type PasswordResetTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
  }

  /**
   * PasswordResetToken createMany
   */
  export type PasswordResetTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken createManyAndReturn
   */
  export type PasswordResetTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken update
   */
  export type PasswordResetTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
    /**
     * Choose, which PasswordResetToken to update.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken updateMany
   */
  export type PasswordResetTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken updateManyAndReturn
   */
  export type PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken upsert
   */
  export type PasswordResetTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the PasswordResetToken to update in case it exists.
     */
    where: PasswordResetTokenWhereUniqueInput
    /**
     * In case the PasswordResetToken found by the `where` argument doesn't exist, create a new PasswordResetToken with this data.
     */
    create: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
    /**
     * In case the PasswordResetToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
  }

  /**
   * PasswordResetToken delete
   */
  export type PasswordResetTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Filter which PasswordResetToken to delete.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken deleteMany
   */
  export type PasswordResetTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to delete
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to delete.
     */
    limit?: number
  }

  /**
   * PasswordResetToken without action
   */
  export type PasswordResetTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
  }


  /**
   * Model BlogRequest
   */

  export type AggregateBlogRequest = {
    _count: BlogRequestCountAggregateOutputType | null
    _min: BlogRequestMinAggregateOutputType | null
    _max: BlogRequestMaxAggregateOutputType | null
  }

  export type BlogRequestMinAggregateOutputType = {
    id: string | null
    blogId: string | null
    requesterId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type BlogRequestMaxAggregateOutputType = {
    id: string | null
    blogId: string | null
    requesterId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type BlogRequestCountAggregateOutputType = {
    id: number
    blogId: number
    requesterId: number
    status: number
    createdAt: number
    _all: number
  }


  export type BlogRequestMinAggregateInputType = {
    id?: true
    blogId?: true
    requesterId?: true
    status?: true
    createdAt?: true
  }

  export type BlogRequestMaxAggregateInputType = {
    id?: true
    blogId?: true
    requesterId?: true
    status?: true
    createdAt?: true
  }

  export type BlogRequestCountAggregateInputType = {
    id?: true
    blogId?: true
    requesterId?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type BlogRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogRequest to aggregate.
     */
    where?: BlogRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogRequests to fetch.
     */
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlogRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BlogRequests
    **/
    _count?: true | BlogRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogRequestMaxAggregateInputType
  }

  export type GetBlogRequestAggregateType<T extends BlogRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateBlogRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlogRequest[P]>
      : GetScalarType<T[P], AggregateBlogRequest[P]>
  }




  export type BlogRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogRequestWhereInput
    orderBy?: BlogRequestOrderByWithAggregationInput | BlogRequestOrderByWithAggregationInput[]
    by: BlogRequestScalarFieldEnum[] | BlogRequestScalarFieldEnum
    having?: BlogRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogRequestCountAggregateInputType | true
    _min?: BlogRequestMinAggregateInputType
    _max?: BlogRequestMaxAggregateInputType
  }

  export type BlogRequestGroupByOutputType = {
    id: string
    blogId: string
    requesterId: string
    status: $Enums.RequestStatus
    createdAt: Date
    _count: BlogRequestCountAggregateOutputType | null
    _min: BlogRequestMinAggregateOutputType | null
    _max: BlogRequestMaxAggregateOutputType | null
  }

  type GetBlogRequestGroupByPayload<T extends BlogRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogRequestGroupByOutputType[P]>
            : GetScalarType<T[P], BlogRequestGroupByOutputType[P]>
        }
      >
    >


  export type BlogRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blogId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blogRequest"]>

  export type BlogRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blogId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blogRequest"]>

  export type BlogRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blogId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blogRequest"]>

  export type BlogRequestSelectScalar = {
    id?: boolean
    blogId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type BlogRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "blogId" | "requesterId" | "status" | "createdAt", ExtArgs["result"]["blogRequest"]>
  export type BlogRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BlogRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BlogRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BlogRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BlogRequest"
    objects: {
      blog: Prisma.$BlogPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      blogId: string
      requesterId: string
      status: $Enums.RequestStatus
      createdAt: Date
    }, ExtArgs["result"]["blogRequest"]>
    composites: {}
  }

  type BlogRequestGetPayload<S extends boolean | null | undefined | BlogRequestDefaultArgs> = $Result.GetResult<Prisma.$BlogRequestPayload, S>

  type BlogRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BlogRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BlogRequestCountAggregateInputType | true
    }

  export interface BlogRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BlogRequest'], meta: { name: 'BlogRequest' } }
    /**
     * Find zero or one BlogRequest that matches the filter.
     * @param {BlogRequestFindUniqueArgs} args - Arguments to find a BlogRequest
     * @example
     * // Get one BlogRequest
     * const blogRequest = await prisma.blogRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlogRequestFindUniqueArgs>(args: SelectSubset<T, BlogRequestFindUniqueArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BlogRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BlogRequestFindUniqueOrThrowArgs} args - Arguments to find a BlogRequest
     * @example
     * // Get one BlogRequest
     * const blogRequest = await prisma.blogRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlogRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, BlogRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlogRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestFindFirstArgs} args - Arguments to find a BlogRequest
     * @example
     * // Get one BlogRequest
     * const blogRequest = await prisma.blogRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlogRequestFindFirstArgs>(args?: SelectSubset<T, BlogRequestFindFirstArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BlogRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestFindFirstOrThrowArgs} args - Arguments to find a BlogRequest
     * @example
     * // Get one BlogRequest
     * const blogRequest = await prisma.blogRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlogRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, BlogRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BlogRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BlogRequests
     * const blogRequests = await prisma.blogRequest.findMany()
     * 
     * // Get first 10 BlogRequests
     * const blogRequests = await prisma.blogRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogRequestWithIdOnly = await prisma.blogRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlogRequestFindManyArgs>(args?: SelectSubset<T, BlogRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BlogRequest.
     * @param {BlogRequestCreateArgs} args - Arguments to create a BlogRequest.
     * @example
     * // Create one BlogRequest
     * const BlogRequest = await prisma.blogRequest.create({
     *   data: {
     *     // ... data to create a BlogRequest
     *   }
     * })
     * 
     */
    create<T extends BlogRequestCreateArgs>(args: SelectSubset<T, BlogRequestCreateArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BlogRequests.
     * @param {BlogRequestCreateManyArgs} args - Arguments to create many BlogRequests.
     * @example
     * // Create many BlogRequests
     * const blogRequest = await prisma.blogRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlogRequestCreateManyArgs>(args?: SelectSubset<T, BlogRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BlogRequests and returns the data saved in the database.
     * @param {BlogRequestCreateManyAndReturnArgs} args - Arguments to create many BlogRequests.
     * @example
     * // Create many BlogRequests
     * const blogRequest = await prisma.blogRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BlogRequests and only return the `id`
     * const blogRequestWithIdOnly = await prisma.blogRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlogRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, BlogRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BlogRequest.
     * @param {BlogRequestDeleteArgs} args - Arguments to delete one BlogRequest.
     * @example
     * // Delete one BlogRequest
     * const BlogRequest = await prisma.blogRequest.delete({
     *   where: {
     *     // ... filter to delete one BlogRequest
     *   }
     * })
     * 
     */
    delete<T extends BlogRequestDeleteArgs>(args: SelectSubset<T, BlogRequestDeleteArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BlogRequest.
     * @param {BlogRequestUpdateArgs} args - Arguments to update one BlogRequest.
     * @example
     * // Update one BlogRequest
     * const blogRequest = await prisma.blogRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlogRequestUpdateArgs>(args: SelectSubset<T, BlogRequestUpdateArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BlogRequests.
     * @param {BlogRequestDeleteManyArgs} args - Arguments to filter BlogRequests to delete.
     * @example
     * // Delete a few BlogRequests
     * const { count } = await prisma.blogRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlogRequestDeleteManyArgs>(args?: SelectSubset<T, BlogRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlogRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BlogRequests
     * const blogRequest = await prisma.blogRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlogRequestUpdateManyArgs>(args: SelectSubset<T, BlogRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlogRequests and returns the data updated in the database.
     * @param {BlogRequestUpdateManyAndReturnArgs} args - Arguments to update many BlogRequests.
     * @example
     * // Update many BlogRequests
     * const blogRequest = await prisma.blogRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BlogRequests and only return the `id`
     * const blogRequestWithIdOnly = await prisma.blogRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BlogRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, BlogRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BlogRequest.
     * @param {BlogRequestUpsertArgs} args - Arguments to update or create a BlogRequest.
     * @example
     * // Update or create a BlogRequest
     * const blogRequest = await prisma.blogRequest.upsert({
     *   create: {
     *     // ... data to create a BlogRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BlogRequest we want to update
     *   }
     * })
     */
    upsert<T extends BlogRequestUpsertArgs>(args: SelectSubset<T, BlogRequestUpsertArgs<ExtArgs>>): Prisma__BlogRequestClient<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BlogRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestCountArgs} args - Arguments to filter BlogRequests to count.
     * @example
     * // Count the number of BlogRequests
     * const count = await prisma.blogRequest.count({
     *   where: {
     *     // ... the filter for the BlogRequests we want to count
     *   }
     * })
    **/
    count<T extends BlogRequestCountArgs>(
      args?: Subset<T, BlogRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BlogRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogRequestAggregateArgs>(args: Subset<T, BlogRequestAggregateArgs>): Prisma.PrismaPromise<GetBlogRequestAggregateType<T>>

    /**
     * Group by BlogRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlogRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlogRequestGroupByArgs['orderBy'] }
        : { orderBy?: BlogRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlogRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BlogRequest model
   */
  readonly fields: BlogRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BlogRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlogRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    blog<T extends BlogDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BlogDefaultArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BlogRequest model
   */
  interface BlogRequestFieldRefs {
    readonly id: FieldRef<"BlogRequest", 'String'>
    readonly blogId: FieldRef<"BlogRequest", 'String'>
    readonly requesterId: FieldRef<"BlogRequest", 'String'>
    readonly status: FieldRef<"BlogRequest", 'RequestStatus'>
    readonly createdAt: FieldRef<"BlogRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BlogRequest findUnique
   */
  export type BlogRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter, which BlogRequest to fetch.
     */
    where: BlogRequestWhereUniqueInput
  }

  /**
   * BlogRequest findUniqueOrThrow
   */
  export type BlogRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter, which BlogRequest to fetch.
     */
    where: BlogRequestWhereUniqueInput
  }

  /**
   * BlogRequest findFirst
   */
  export type BlogRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter, which BlogRequest to fetch.
     */
    where?: BlogRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogRequests to fetch.
     */
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogRequests.
     */
    cursor?: BlogRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogRequests.
     */
    distinct?: BlogRequestScalarFieldEnum | BlogRequestScalarFieldEnum[]
  }

  /**
   * BlogRequest findFirstOrThrow
   */
  export type BlogRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter, which BlogRequest to fetch.
     */
    where?: BlogRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogRequests to fetch.
     */
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogRequests.
     */
    cursor?: BlogRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogRequests.
     */
    distinct?: BlogRequestScalarFieldEnum | BlogRequestScalarFieldEnum[]
  }

  /**
   * BlogRequest findMany
   */
  export type BlogRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter, which BlogRequests to fetch.
     */
    where?: BlogRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogRequests to fetch.
     */
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BlogRequests.
     */
    cursor?: BlogRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogRequests.
     */
    skip?: number
    distinct?: BlogRequestScalarFieldEnum | BlogRequestScalarFieldEnum[]
  }

  /**
   * BlogRequest create
   */
  export type BlogRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a BlogRequest.
     */
    data: XOR<BlogRequestCreateInput, BlogRequestUncheckedCreateInput>
  }

  /**
   * BlogRequest createMany
   */
  export type BlogRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BlogRequests.
     */
    data: BlogRequestCreateManyInput | BlogRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlogRequest createManyAndReturn
   */
  export type BlogRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * The data used to create many BlogRequests.
     */
    data: BlogRequestCreateManyInput | BlogRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BlogRequest update
   */
  export type BlogRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a BlogRequest.
     */
    data: XOR<BlogRequestUpdateInput, BlogRequestUncheckedUpdateInput>
    /**
     * Choose, which BlogRequest to update.
     */
    where: BlogRequestWhereUniqueInput
  }

  /**
   * BlogRequest updateMany
   */
  export type BlogRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BlogRequests.
     */
    data: XOR<BlogRequestUpdateManyMutationInput, BlogRequestUncheckedUpdateManyInput>
    /**
     * Filter which BlogRequests to update
     */
    where?: BlogRequestWhereInput
    /**
     * Limit how many BlogRequests to update.
     */
    limit?: number
  }

  /**
   * BlogRequest updateManyAndReturn
   */
  export type BlogRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * The data used to update BlogRequests.
     */
    data: XOR<BlogRequestUpdateManyMutationInput, BlogRequestUncheckedUpdateManyInput>
    /**
     * Filter which BlogRequests to update
     */
    where?: BlogRequestWhereInput
    /**
     * Limit how many BlogRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BlogRequest upsert
   */
  export type BlogRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the BlogRequest to update in case it exists.
     */
    where: BlogRequestWhereUniqueInput
    /**
     * In case the BlogRequest found by the `where` argument doesn't exist, create a new BlogRequest with this data.
     */
    create: XOR<BlogRequestCreateInput, BlogRequestUncheckedCreateInput>
    /**
     * In case the BlogRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlogRequestUpdateInput, BlogRequestUncheckedUpdateInput>
  }

  /**
   * BlogRequest delete
   */
  export type BlogRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    /**
     * Filter which BlogRequest to delete.
     */
    where: BlogRequestWhereUniqueInput
  }

  /**
   * BlogRequest deleteMany
   */
  export type BlogRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogRequests to delete
     */
    where?: BlogRequestWhereInput
    /**
     * Limit how many BlogRequests to delete.
     */
    limit?: number
  }

  /**
   * BlogRequest without action
   */
  export type BlogRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
  }


  /**
   * Model SnippetRequest
   */

  export type AggregateSnippetRequest = {
    _count: SnippetRequestCountAggregateOutputType | null
    _min: SnippetRequestMinAggregateOutputType | null
    _max: SnippetRequestMaxAggregateOutputType | null
  }

  export type SnippetRequestMinAggregateOutputType = {
    id: string | null
    snippetId: string | null
    requesterId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type SnippetRequestMaxAggregateOutputType = {
    id: string | null
    snippetId: string | null
    requesterId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type SnippetRequestCountAggregateOutputType = {
    id: number
    snippetId: number
    requesterId: number
    status: number
    createdAt: number
    _all: number
  }


  export type SnippetRequestMinAggregateInputType = {
    id?: true
    snippetId?: true
    requesterId?: true
    status?: true
    createdAt?: true
  }

  export type SnippetRequestMaxAggregateInputType = {
    id?: true
    snippetId?: true
    requesterId?: true
    status?: true
    createdAt?: true
  }

  export type SnippetRequestCountAggregateInputType = {
    id?: true
    snippetId?: true
    requesterId?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type SnippetRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SnippetRequest to aggregate.
     */
    where?: SnippetRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SnippetRequests to fetch.
     */
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SnippetRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SnippetRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SnippetRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SnippetRequests
    **/
    _count?: true | SnippetRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SnippetRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SnippetRequestMaxAggregateInputType
  }

  export type GetSnippetRequestAggregateType<T extends SnippetRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateSnippetRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSnippetRequest[P]>
      : GetScalarType<T[P], AggregateSnippetRequest[P]>
  }




  export type SnippetRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetRequestWhereInput
    orderBy?: SnippetRequestOrderByWithAggregationInput | SnippetRequestOrderByWithAggregationInput[]
    by: SnippetRequestScalarFieldEnum[] | SnippetRequestScalarFieldEnum
    having?: SnippetRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SnippetRequestCountAggregateInputType | true
    _min?: SnippetRequestMinAggregateInputType
    _max?: SnippetRequestMaxAggregateInputType
  }

  export type SnippetRequestGroupByOutputType = {
    id: string
    snippetId: string
    requesterId: string
    status: $Enums.RequestStatus
    createdAt: Date
    _count: SnippetRequestCountAggregateOutputType | null
    _min: SnippetRequestMinAggregateOutputType | null
    _max: SnippetRequestMaxAggregateOutputType | null
  }

  type GetSnippetRequestGroupByPayload<T extends SnippetRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SnippetRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SnippetRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SnippetRequestGroupByOutputType[P]>
            : GetScalarType<T[P], SnippetRequestGroupByOutputType[P]>
        }
      >
    >


  export type SnippetRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    snippetId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippetRequest"]>

  export type SnippetRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    snippetId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippetRequest"]>

  export type SnippetRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    snippetId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippetRequest"]>

  export type SnippetRequestSelectScalar = {
    id?: boolean
    snippetId?: boolean
    requesterId?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type SnippetRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "snippetId" | "requesterId" | "status" | "createdAt", ExtArgs["result"]["snippetRequest"]>
  export type SnippetRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }
  export type SnippetRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }
  export type SnippetRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    requester?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | SnippetDefaultArgs<ExtArgs>
  }

  export type $SnippetRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SnippetRequest"
    objects: {
      requester: Prisma.$UserPayload<ExtArgs>
      snippet: Prisma.$SnippetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      snippetId: string
      requesterId: string
      status: $Enums.RequestStatus
      createdAt: Date
    }, ExtArgs["result"]["snippetRequest"]>
    composites: {}
  }

  type SnippetRequestGetPayload<S extends boolean | null | undefined | SnippetRequestDefaultArgs> = $Result.GetResult<Prisma.$SnippetRequestPayload, S>

  type SnippetRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SnippetRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SnippetRequestCountAggregateInputType | true
    }

  export interface SnippetRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SnippetRequest'], meta: { name: 'SnippetRequest' } }
    /**
     * Find zero or one SnippetRequest that matches the filter.
     * @param {SnippetRequestFindUniqueArgs} args - Arguments to find a SnippetRequest
     * @example
     * // Get one SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SnippetRequestFindUniqueArgs>(args: SelectSubset<T, SnippetRequestFindUniqueArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SnippetRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SnippetRequestFindUniqueOrThrowArgs} args - Arguments to find a SnippetRequest
     * @example
     * // Get one SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SnippetRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, SnippetRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SnippetRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestFindFirstArgs} args - Arguments to find a SnippetRequest
     * @example
     * // Get one SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SnippetRequestFindFirstArgs>(args?: SelectSubset<T, SnippetRequestFindFirstArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SnippetRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestFindFirstOrThrowArgs} args - Arguments to find a SnippetRequest
     * @example
     * // Get one SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SnippetRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, SnippetRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SnippetRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SnippetRequests
     * const snippetRequests = await prisma.snippetRequest.findMany()
     * 
     * // Get first 10 SnippetRequests
     * const snippetRequests = await prisma.snippetRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const snippetRequestWithIdOnly = await prisma.snippetRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SnippetRequestFindManyArgs>(args?: SelectSubset<T, SnippetRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SnippetRequest.
     * @param {SnippetRequestCreateArgs} args - Arguments to create a SnippetRequest.
     * @example
     * // Create one SnippetRequest
     * const SnippetRequest = await prisma.snippetRequest.create({
     *   data: {
     *     // ... data to create a SnippetRequest
     *   }
     * })
     * 
     */
    create<T extends SnippetRequestCreateArgs>(args: SelectSubset<T, SnippetRequestCreateArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SnippetRequests.
     * @param {SnippetRequestCreateManyArgs} args - Arguments to create many SnippetRequests.
     * @example
     * // Create many SnippetRequests
     * const snippetRequest = await prisma.snippetRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SnippetRequestCreateManyArgs>(args?: SelectSubset<T, SnippetRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SnippetRequests and returns the data saved in the database.
     * @param {SnippetRequestCreateManyAndReturnArgs} args - Arguments to create many SnippetRequests.
     * @example
     * // Create many SnippetRequests
     * const snippetRequest = await prisma.snippetRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SnippetRequests and only return the `id`
     * const snippetRequestWithIdOnly = await prisma.snippetRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SnippetRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, SnippetRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SnippetRequest.
     * @param {SnippetRequestDeleteArgs} args - Arguments to delete one SnippetRequest.
     * @example
     * // Delete one SnippetRequest
     * const SnippetRequest = await prisma.snippetRequest.delete({
     *   where: {
     *     // ... filter to delete one SnippetRequest
     *   }
     * })
     * 
     */
    delete<T extends SnippetRequestDeleteArgs>(args: SelectSubset<T, SnippetRequestDeleteArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SnippetRequest.
     * @param {SnippetRequestUpdateArgs} args - Arguments to update one SnippetRequest.
     * @example
     * // Update one SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SnippetRequestUpdateArgs>(args: SelectSubset<T, SnippetRequestUpdateArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SnippetRequests.
     * @param {SnippetRequestDeleteManyArgs} args - Arguments to filter SnippetRequests to delete.
     * @example
     * // Delete a few SnippetRequests
     * const { count } = await prisma.snippetRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SnippetRequestDeleteManyArgs>(args?: SelectSubset<T, SnippetRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SnippetRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SnippetRequests
     * const snippetRequest = await prisma.snippetRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SnippetRequestUpdateManyArgs>(args: SelectSubset<T, SnippetRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SnippetRequests and returns the data updated in the database.
     * @param {SnippetRequestUpdateManyAndReturnArgs} args - Arguments to update many SnippetRequests.
     * @example
     * // Update many SnippetRequests
     * const snippetRequest = await prisma.snippetRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SnippetRequests and only return the `id`
     * const snippetRequestWithIdOnly = await prisma.snippetRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SnippetRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, SnippetRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SnippetRequest.
     * @param {SnippetRequestUpsertArgs} args - Arguments to update or create a SnippetRequest.
     * @example
     * // Update or create a SnippetRequest
     * const snippetRequest = await prisma.snippetRequest.upsert({
     *   create: {
     *     // ... data to create a SnippetRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SnippetRequest we want to update
     *   }
     * })
     */
    upsert<T extends SnippetRequestUpsertArgs>(args: SelectSubset<T, SnippetRequestUpsertArgs<ExtArgs>>): Prisma__SnippetRequestClient<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SnippetRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestCountArgs} args - Arguments to filter SnippetRequests to count.
     * @example
     * // Count the number of SnippetRequests
     * const count = await prisma.snippetRequest.count({
     *   where: {
     *     // ... the filter for the SnippetRequests we want to count
     *   }
     * })
    **/
    count<T extends SnippetRequestCountArgs>(
      args?: Subset<T, SnippetRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SnippetRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SnippetRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SnippetRequestAggregateArgs>(args: Subset<T, SnippetRequestAggregateArgs>): Prisma.PrismaPromise<GetSnippetRequestAggregateType<T>>

    /**
     * Group by SnippetRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SnippetRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SnippetRequestGroupByArgs['orderBy'] }
        : { orderBy?: SnippetRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SnippetRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSnippetRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SnippetRequest model
   */
  readonly fields: SnippetRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SnippetRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SnippetRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    snippet<T extends SnippetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SnippetDefaultArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SnippetRequest model
   */
  interface SnippetRequestFieldRefs {
    readonly id: FieldRef<"SnippetRequest", 'String'>
    readonly snippetId: FieldRef<"SnippetRequest", 'String'>
    readonly requesterId: FieldRef<"SnippetRequest", 'String'>
    readonly status: FieldRef<"SnippetRequest", 'RequestStatus'>
    readonly createdAt: FieldRef<"SnippetRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SnippetRequest findUnique
   */
  export type SnippetRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter, which SnippetRequest to fetch.
     */
    where: SnippetRequestWhereUniqueInput
  }

  /**
   * SnippetRequest findUniqueOrThrow
   */
  export type SnippetRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter, which SnippetRequest to fetch.
     */
    where: SnippetRequestWhereUniqueInput
  }

  /**
   * SnippetRequest findFirst
   */
  export type SnippetRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter, which SnippetRequest to fetch.
     */
    where?: SnippetRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SnippetRequests to fetch.
     */
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SnippetRequests.
     */
    cursor?: SnippetRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SnippetRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SnippetRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SnippetRequests.
     */
    distinct?: SnippetRequestScalarFieldEnum | SnippetRequestScalarFieldEnum[]
  }

  /**
   * SnippetRequest findFirstOrThrow
   */
  export type SnippetRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter, which SnippetRequest to fetch.
     */
    where?: SnippetRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SnippetRequests to fetch.
     */
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SnippetRequests.
     */
    cursor?: SnippetRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SnippetRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SnippetRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SnippetRequests.
     */
    distinct?: SnippetRequestScalarFieldEnum | SnippetRequestScalarFieldEnum[]
  }

  /**
   * SnippetRequest findMany
   */
  export type SnippetRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter, which SnippetRequests to fetch.
     */
    where?: SnippetRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SnippetRequests to fetch.
     */
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SnippetRequests.
     */
    cursor?: SnippetRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SnippetRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SnippetRequests.
     */
    skip?: number
    distinct?: SnippetRequestScalarFieldEnum | SnippetRequestScalarFieldEnum[]
  }

  /**
   * SnippetRequest create
   */
  export type SnippetRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a SnippetRequest.
     */
    data: XOR<SnippetRequestCreateInput, SnippetRequestUncheckedCreateInput>
  }

  /**
   * SnippetRequest createMany
   */
  export type SnippetRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SnippetRequests.
     */
    data: SnippetRequestCreateManyInput | SnippetRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SnippetRequest createManyAndReturn
   */
  export type SnippetRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * The data used to create many SnippetRequests.
     */
    data: SnippetRequestCreateManyInput | SnippetRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SnippetRequest update
   */
  export type SnippetRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a SnippetRequest.
     */
    data: XOR<SnippetRequestUpdateInput, SnippetRequestUncheckedUpdateInput>
    /**
     * Choose, which SnippetRequest to update.
     */
    where: SnippetRequestWhereUniqueInput
  }

  /**
   * SnippetRequest updateMany
   */
  export type SnippetRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SnippetRequests.
     */
    data: XOR<SnippetRequestUpdateManyMutationInput, SnippetRequestUncheckedUpdateManyInput>
    /**
     * Filter which SnippetRequests to update
     */
    where?: SnippetRequestWhereInput
    /**
     * Limit how many SnippetRequests to update.
     */
    limit?: number
  }

  /**
   * SnippetRequest updateManyAndReturn
   */
  export type SnippetRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * The data used to update SnippetRequests.
     */
    data: XOR<SnippetRequestUpdateManyMutationInput, SnippetRequestUncheckedUpdateManyInput>
    /**
     * Filter which SnippetRequests to update
     */
    where?: SnippetRequestWhereInput
    /**
     * Limit how many SnippetRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SnippetRequest upsert
   */
  export type SnippetRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the SnippetRequest to update in case it exists.
     */
    where: SnippetRequestWhereUniqueInput
    /**
     * In case the SnippetRequest found by the `where` argument doesn't exist, create a new SnippetRequest with this data.
     */
    create: XOR<SnippetRequestCreateInput, SnippetRequestUncheckedCreateInput>
    /**
     * In case the SnippetRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SnippetRequestUpdateInput, SnippetRequestUncheckedUpdateInput>
  }

  /**
   * SnippetRequest delete
   */
  export type SnippetRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    /**
     * Filter which SnippetRequest to delete.
     */
    where: SnippetRequestWhereUniqueInput
  }

  /**
   * SnippetRequest deleteMany
   */
  export type SnippetRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SnippetRequests to delete
     */
    where?: SnippetRequestWhereInput
    /**
     * Limit how many SnippetRequests to delete.
     */
    limit?: number
  }

  /**
   * SnippetRequest without action
   */
  export type SnippetRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
  }


  /**
   * Model Snippet
   */

  export type AggregateSnippet = {
    _count: SnippetCountAggregateOutputType | null
    _min: SnippetMinAggregateOutputType | null
    _max: SnippetMaxAggregateOutputType | null
  }

  export type SnippetMinAggregateOutputType = {
    id: string | null
    authorid: string | null
    title: string | null
    description: string | null
    content: string | null
    createdAt: Date | null
    updatedAt: Date | null
    visibility: $Enums.Visibility | null
    framework: string | null
  }

  export type SnippetMaxAggregateOutputType = {
    id: string | null
    authorid: string | null
    title: string | null
    description: string | null
    content: string | null
    createdAt: Date | null
    updatedAt: Date | null
    visibility: $Enums.Visibility | null
    framework: string | null
  }

  export type SnippetCountAggregateOutputType = {
    id: number
    authorid: number
    title: number
    description: number
    content: number
    createdAt: number
    updatedAt: number
    visibility: number
    framework: number
    _all: number
  }


  export type SnippetMinAggregateInputType = {
    id?: true
    authorid?: true
    title?: true
    description?: true
    content?: true
    createdAt?: true
    updatedAt?: true
    visibility?: true
    framework?: true
  }

  export type SnippetMaxAggregateInputType = {
    id?: true
    authorid?: true
    title?: true
    description?: true
    content?: true
    createdAt?: true
    updatedAt?: true
    visibility?: true
    framework?: true
  }

  export type SnippetCountAggregateInputType = {
    id?: true
    authorid?: true
    title?: true
    description?: true
    content?: true
    createdAt?: true
    updatedAt?: true
    visibility?: true
    framework?: true
    _all?: true
  }

  export type SnippetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Snippet to aggregate.
     */
    where?: SnippetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snippets to fetch.
     */
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SnippetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Snippets
    **/
    _count?: true | SnippetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SnippetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SnippetMaxAggregateInputType
  }

  export type GetSnippetAggregateType<T extends SnippetAggregateArgs> = {
        [P in keyof T & keyof AggregateSnippet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSnippet[P]>
      : GetScalarType<T[P], AggregateSnippet[P]>
  }




  export type SnippetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SnippetWhereInput
    orderBy?: SnippetOrderByWithAggregationInput | SnippetOrderByWithAggregationInput[]
    by: SnippetScalarFieldEnum[] | SnippetScalarFieldEnum
    having?: SnippetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SnippetCountAggregateInputType | true
    _min?: SnippetMinAggregateInputType
    _max?: SnippetMaxAggregateInputType
  }

  export type SnippetGroupByOutputType = {
    id: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt: Date
    updatedAt: Date
    visibility: $Enums.Visibility
    framework: string | null
    _count: SnippetCountAggregateOutputType | null
    _min: SnippetMinAggregateOutputType | null
    _max: SnippetMaxAggregateOutputType | null
  }

  type GetSnippetGroupByPayload<T extends SnippetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SnippetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SnippetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SnippetGroupByOutputType[P]>
            : GetScalarType<T[P], SnippetGroupByOutputType[P]>
        }
      >
    >


  export type SnippetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorid?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visibility?: boolean
    framework?: boolean
    notifications?: boolean | Snippet$notificationsArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    snippetRequests?: boolean | Snippet$snippetRequestsArgs<ExtArgs>
    allowedUsers?: boolean | Snippet$allowedUsersArgs<ExtArgs>
    _count?: boolean | SnippetCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippet"]>

  export type SnippetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorid?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visibility?: boolean
    framework?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippet"]>

  export type SnippetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorid?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visibility?: boolean
    framework?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["snippet"]>

  export type SnippetSelectScalar = {
    id?: boolean
    authorid?: boolean
    title?: boolean
    description?: boolean
    content?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visibility?: boolean
    framework?: boolean
  }

  export type SnippetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "authorid" | "title" | "description" | "content" | "createdAt" | "updatedAt" | "visibility" | "framework", ExtArgs["result"]["snippet"]>
  export type SnippetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifications?: boolean | Snippet$notificationsArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    snippetRequests?: boolean | Snippet$snippetRequestsArgs<ExtArgs>
    allowedUsers?: boolean | Snippet$allowedUsersArgs<ExtArgs>
    _count?: boolean | SnippetCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SnippetIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SnippetIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SnippetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Snippet"
    objects: {
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      author: Prisma.$UserPayload<ExtArgs>
      snippetRequests: Prisma.$SnippetRequestPayload<ExtArgs>[]
      allowedUsers: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      authorid: string
      title: string
      description: string
      content: string
      createdAt: Date
      updatedAt: Date
      visibility: $Enums.Visibility
      framework: string | null
    }, ExtArgs["result"]["snippet"]>
    composites: {}
  }

  type SnippetGetPayload<S extends boolean | null | undefined | SnippetDefaultArgs> = $Result.GetResult<Prisma.$SnippetPayload, S>

  type SnippetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SnippetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SnippetCountAggregateInputType | true
    }

  export interface SnippetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Snippet'], meta: { name: 'Snippet' } }
    /**
     * Find zero or one Snippet that matches the filter.
     * @param {SnippetFindUniqueArgs} args - Arguments to find a Snippet
     * @example
     * // Get one Snippet
     * const snippet = await prisma.snippet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SnippetFindUniqueArgs>(args: SelectSubset<T, SnippetFindUniqueArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Snippet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SnippetFindUniqueOrThrowArgs} args - Arguments to find a Snippet
     * @example
     * // Get one Snippet
     * const snippet = await prisma.snippet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SnippetFindUniqueOrThrowArgs>(args: SelectSubset<T, SnippetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Snippet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetFindFirstArgs} args - Arguments to find a Snippet
     * @example
     * // Get one Snippet
     * const snippet = await prisma.snippet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SnippetFindFirstArgs>(args?: SelectSubset<T, SnippetFindFirstArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Snippet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetFindFirstOrThrowArgs} args - Arguments to find a Snippet
     * @example
     * // Get one Snippet
     * const snippet = await prisma.snippet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SnippetFindFirstOrThrowArgs>(args?: SelectSubset<T, SnippetFindFirstOrThrowArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Snippets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Snippets
     * const snippets = await prisma.snippet.findMany()
     * 
     * // Get first 10 Snippets
     * const snippets = await prisma.snippet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const snippetWithIdOnly = await prisma.snippet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SnippetFindManyArgs>(args?: SelectSubset<T, SnippetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Snippet.
     * @param {SnippetCreateArgs} args - Arguments to create a Snippet.
     * @example
     * // Create one Snippet
     * const Snippet = await prisma.snippet.create({
     *   data: {
     *     // ... data to create a Snippet
     *   }
     * })
     * 
     */
    create<T extends SnippetCreateArgs>(args: SelectSubset<T, SnippetCreateArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Snippets.
     * @param {SnippetCreateManyArgs} args - Arguments to create many Snippets.
     * @example
     * // Create many Snippets
     * const snippet = await prisma.snippet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SnippetCreateManyArgs>(args?: SelectSubset<T, SnippetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Snippets and returns the data saved in the database.
     * @param {SnippetCreateManyAndReturnArgs} args - Arguments to create many Snippets.
     * @example
     * // Create many Snippets
     * const snippet = await prisma.snippet.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Snippets and only return the `id`
     * const snippetWithIdOnly = await prisma.snippet.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SnippetCreateManyAndReturnArgs>(args?: SelectSubset<T, SnippetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Snippet.
     * @param {SnippetDeleteArgs} args - Arguments to delete one Snippet.
     * @example
     * // Delete one Snippet
     * const Snippet = await prisma.snippet.delete({
     *   where: {
     *     // ... filter to delete one Snippet
     *   }
     * })
     * 
     */
    delete<T extends SnippetDeleteArgs>(args: SelectSubset<T, SnippetDeleteArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Snippet.
     * @param {SnippetUpdateArgs} args - Arguments to update one Snippet.
     * @example
     * // Update one Snippet
     * const snippet = await prisma.snippet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SnippetUpdateArgs>(args: SelectSubset<T, SnippetUpdateArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Snippets.
     * @param {SnippetDeleteManyArgs} args - Arguments to filter Snippets to delete.
     * @example
     * // Delete a few Snippets
     * const { count } = await prisma.snippet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SnippetDeleteManyArgs>(args?: SelectSubset<T, SnippetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Snippets
     * const snippet = await prisma.snippet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SnippetUpdateManyArgs>(args: SelectSubset<T, SnippetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Snippets and returns the data updated in the database.
     * @param {SnippetUpdateManyAndReturnArgs} args - Arguments to update many Snippets.
     * @example
     * // Update many Snippets
     * const snippet = await prisma.snippet.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Snippets and only return the `id`
     * const snippetWithIdOnly = await prisma.snippet.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SnippetUpdateManyAndReturnArgs>(args: SelectSubset<T, SnippetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Snippet.
     * @param {SnippetUpsertArgs} args - Arguments to update or create a Snippet.
     * @example
     * // Update or create a Snippet
     * const snippet = await prisma.snippet.upsert({
     *   create: {
     *     // ... data to create a Snippet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Snippet we want to update
     *   }
     * })
     */
    upsert<T extends SnippetUpsertArgs>(args: SelectSubset<T, SnippetUpsertArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetCountArgs} args - Arguments to filter Snippets to count.
     * @example
     * // Count the number of Snippets
     * const count = await prisma.snippet.count({
     *   where: {
     *     // ... the filter for the Snippets we want to count
     *   }
     * })
    **/
    count<T extends SnippetCountArgs>(
      args?: Subset<T, SnippetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SnippetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Snippet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SnippetAggregateArgs>(args: Subset<T, SnippetAggregateArgs>): Prisma.PrismaPromise<GetSnippetAggregateType<T>>

    /**
     * Group by Snippet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SnippetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SnippetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SnippetGroupByArgs['orderBy'] }
        : { orderBy?: SnippetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SnippetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSnippetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Snippet model
   */
  readonly fields: SnippetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Snippet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SnippetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notifications<T extends Snippet$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Snippet$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    snippetRequests<T extends Snippet$snippetRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Snippet$snippetRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SnippetRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    allowedUsers<T extends Snippet$allowedUsersArgs<ExtArgs> = {}>(args?: Subset<T, Snippet$allowedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Snippet model
   */
  interface SnippetFieldRefs {
    readonly id: FieldRef<"Snippet", 'String'>
    readonly authorid: FieldRef<"Snippet", 'String'>
    readonly title: FieldRef<"Snippet", 'String'>
    readonly description: FieldRef<"Snippet", 'String'>
    readonly content: FieldRef<"Snippet", 'String'>
    readonly createdAt: FieldRef<"Snippet", 'DateTime'>
    readonly updatedAt: FieldRef<"Snippet", 'DateTime'>
    readonly visibility: FieldRef<"Snippet", 'Visibility'>
    readonly framework: FieldRef<"Snippet", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Snippet findUnique
   */
  export type SnippetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter, which Snippet to fetch.
     */
    where: SnippetWhereUniqueInput
  }

  /**
   * Snippet findUniqueOrThrow
   */
  export type SnippetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter, which Snippet to fetch.
     */
    where: SnippetWhereUniqueInput
  }

  /**
   * Snippet findFirst
   */
  export type SnippetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter, which Snippet to fetch.
     */
    where?: SnippetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snippets to fetch.
     */
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Snippets.
     */
    cursor?: SnippetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Snippets.
     */
    distinct?: SnippetScalarFieldEnum | SnippetScalarFieldEnum[]
  }

  /**
   * Snippet findFirstOrThrow
   */
  export type SnippetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter, which Snippet to fetch.
     */
    where?: SnippetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snippets to fetch.
     */
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Snippets.
     */
    cursor?: SnippetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Snippets.
     */
    distinct?: SnippetScalarFieldEnum | SnippetScalarFieldEnum[]
  }

  /**
   * Snippet findMany
   */
  export type SnippetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter, which Snippets to fetch.
     */
    where?: SnippetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Snippets to fetch.
     */
    orderBy?: SnippetOrderByWithRelationInput | SnippetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Snippets.
     */
    cursor?: SnippetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Snippets.
     */
    skip?: number
    distinct?: SnippetScalarFieldEnum | SnippetScalarFieldEnum[]
  }

  /**
   * Snippet create
   */
  export type SnippetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * The data needed to create a Snippet.
     */
    data: XOR<SnippetCreateInput, SnippetUncheckedCreateInput>
  }

  /**
   * Snippet createMany
   */
  export type SnippetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Snippets.
     */
    data: SnippetCreateManyInput | SnippetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Snippet createManyAndReturn
   */
  export type SnippetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * The data used to create many Snippets.
     */
    data: SnippetCreateManyInput | SnippetCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Snippet update
   */
  export type SnippetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * The data needed to update a Snippet.
     */
    data: XOR<SnippetUpdateInput, SnippetUncheckedUpdateInput>
    /**
     * Choose, which Snippet to update.
     */
    where: SnippetWhereUniqueInput
  }

  /**
   * Snippet updateMany
   */
  export type SnippetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Snippets.
     */
    data: XOR<SnippetUpdateManyMutationInput, SnippetUncheckedUpdateManyInput>
    /**
     * Filter which Snippets to update
     */
    where?: SnippetWhereInput
    /**
     * Limit how many Snippets to update.
     */
    limit?: number
  }

  /**
   * Snippet updateManyAndReturn
   */
  export type SnippetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * The data used to update Snippets.
     */
    data: XOR<SnippetUpdateManyMutationInput, SnippetUncheckedUpdateManyInput>
    /**
     * Filter which Snippets to update
     */
    where?: SnippetWhereInput
    /**
     * Limit how many Snippets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Snippet upsert
   */
  export type SnippetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * The filter to search for the Snippet to update in case it exists.
     */
    where: SnippetWhereUniqueInput
    /**
     * In case the Snippet found by the `where` argument doesn't exist, create a new Snippet with this data.
     */
    create: XOR<SnippetCreateInput, SnippetUncheckedCreateInput>
    /**
     * In case the Snippet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SnippetUpdateInput, SnippetUncheckedUpdateInput>
  }

  /**
   * Snippet delete
   */
  export type SnippetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    /**
     * Filter which Snippet to delete.
     */
    where: SnippetWhereUniqueInput
  }

  /**
   * Snippet deleteMany
   */
  export type SnippetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Snippets to delete
     */
    where?: SnippetWhereInput
    /**
     * Limit how many Snippets to delete.
     */
    limit?: number
  }

  /**
   * Snippet.notifications
   */
  export type Snippet$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Snippet.snippetRequests
   */
  export type Snippet$snippetRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SnippetRequest
     */
    select?: SnippetRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SnippetRequest
     */
    omit?: SnippetRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetRequestInclude<ExtArgs> | null
    where?: SnippetRequestWhereInput
    orderBy?: SnippetRequestOrderByWithRelationInput | SnippetRequestOrderByWithRelationInput[]
    cursor?: SnippetRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SnippetRequestScalarFieldEnum | SnippetRequestScalarFieldEnum[]
  }

  /**
   * Snippet.allowedUsers
   */
  export type Snippet$allowedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Snippet without action
   */
  export type SnippetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
  }


  /**
   * Model Like
   */

  export type AggregateLike = {
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  export type LikeMinAggregateOutputType = {
    id: string | null
    userId: string | null
    blogId: string | null
    createdAt: Date | null
  }

  export type LikeMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    blogId: string | null
    createdAt: Date | null
  }

  export type LikeCountAggregateOutputType = {
    id: number
    userId: number
    blogId: number
    createdAt: number
    _all: number
  }


  export type LikeMinAggregateInputType = {
    id?: true
    userId?: true
    blogId?: true
    createdAt?: true
  }

  export type LikeMaxAggregateInputType = {
    id?: true
    userId?: true
    blogId?: true
    createdAt?: true
  }

  export type LikeCountAggregateInputType = {
    id?: true
    userId?: true
    blogId?: true
    createdAt?: true
    _all?: true
  }

  export type LikeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Like to aggregate.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Likes
    **/
    _count?: true | LikeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikeMaxAggregateInputType
  }

  export type GetLikeAggregateType<T extends LikeAggregateArgs> = {
        [P in keyof T & keyof AggregateLike]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLike[P]>
      : GetScalarType<T[P], AggregateLike[P]>
  }




  export type LikeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithAggregationInput | LikeOrderByWithAggregationInput[]
    by: LikeScalarFieldEnum[] | LikeScalarFieldEnum
    having?: LikeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikeCountAggregateInputType | true
    _min?: LikeMinAggregateInputType
    _max?: LikeMaxAggregateInputType
  }

  export type LikeGroupByOutputType = {
    id: string
    userId: string
    blogId: string
    createdAt: Date
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  type GetLikeGroupByPayload<T extends LikeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikeGroupByOutputType[P]>
            : GetScalarType<T[P], LikeGroupByOutputType[P]>
        }
      >
    >


  export type LikeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    blogId?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    blogId?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    blogId?: boolean
    createdAt?: boolean
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectScalar = {
    id?: boolean
    userId?: boolean
    blogId?: boolean
    createdAt?: boolean
  }

  export type LikeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "blogId" | "createdAt", ExtArgs["result"]["like"]>
  export type LikeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LikeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LikeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | BlogDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LikePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Like"
    objects: {
      blog: Prisma.$BlogPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      blogId: string
      createdAt: Date
    }, ExtArgs["result"]["like"]>
    composites: {}
  }

  type LikeGetPayload<S extends boolean | null | undefined | LikeDefaultArgs> = $Result.GetResult<Prisma.$LikePayload, S>

  type LikeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LikeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LikeCountAggregateInputType | true
    }

  export interface LikeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Like'], meta: { name: 'Like' } }
    /**
     * Find zero or one Like that matches the filter.
     * @param {LikeFindUniqueArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LikeFindUniqueArgs>(args: SelectSubset<T, LikeFindUniqueArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Like that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LikeFindUniqueOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LikeFindUniqueOrThrowArgs>(args: SelectSubset<T, LikeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LikeFindFirstArgs>(args?: SelectSubset<T, LikeFindFirstArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LikeFindFirstOrThrowArgs>(args?: SelectSubset<T, LikeFindFirstOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.like.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const likeWithIdOnly = await prisma.like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LikeFindManyArgs>(args?: SelectSubset<T, LikeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Like.
     * @param {LikeCreateArgs} args - Arguments to create a Like.
     * @example
     * // Create one Like
     * const Like = await prisma.like.create({
     *   data: {
     *     // ... data to create a Like
     *   }
     * })
     * 
     */
    create<T extends LikeCreateArgs>(args: SelectSubset<T, LikeCreateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Likes.
     * @param {LikeCreateManyArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LikeCreateManyArgs>(args?: SelectSubset<T, LikeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Likes and returns the data saved in the database.
     * @param {LikeCreateManyAndReturnArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Likes and only return the `id`
     * const likeWithIdOnly = await prisma.like.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LikeCreateManyAndReturnArgs>(args?: SelectSubset<T, LikeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Like.
     * @param {LikeDeleteArgs} args - Arguments to delete one Like.
     * @example
     * // Delete one Like
     * const Like = await prisma.like.delete({
     *   where: {
     *     // ... filter to delete one Like
     *   }
     * })
     * 
     */
    delete<T extends LikeDeleteArgs>(args: SelectSubset<T, LikeDeleteArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Like.
     * @param {LikeUpdateArgs} args - Arguments to update one Like.
     * @example
     * // Update one Like
     * const like = await prisma.like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LikeUpdateArgs>(args: SelectSubset<T, LikeUpdateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Likes.
     * @param {LikeDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LikeDeleteManyArgs>(args?: SelectSubset<T, LikeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const like = await prisma.like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LikeUpdateManyArgs>(args: SelectSubset<T, LikeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes and returns the data updated in the database.
     * @param {LikeUpdateManyAndReturnArgs} args - Arguments to update many Likes.
     * @example
     * // Update many Likes
     * const like = await prisma.like.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Likes and only return the `id`
     * const likeWithIdOnly = await prisma.like.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LikeUpdateManyAndReturnArgs>(args: SelectSubset<T, LikeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Like.
     * @param {LikeUpsertArgs} args - Arguments to update or create a Like.
     * @example
     * // Update or create a Like
     * const like = await prisma.like.upsert({
     *   create: {
     *     // ... data to create a Like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Like we want to update
     *   }
     * })
     */
    upsert<T extends LikeUpsertArgs>(args: SelectSubset<T, LikeUpsertArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.like.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends LikeCountArgs>(
      args?: Subset<T, LikeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikeAggregateArgs>(args: Subset<T, LikeAggregateArgs>): Prisma.PrismaPromise<GetLikeAggregateType<T>>

    /**
     * Group by Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LikeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LikeGroupByArgs['orderBy'] }
        : { orderBy?: LikeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LikeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Like model
   */
  readonly fields: LikeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LikeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    blog<T extends BlogDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BlogDefaultArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Like model
   */
  interface LikeFieldRefs {
    readonly id: FieldRef<"Like", 'String'>
    readonly userId: FieldRef<"Like", 'String'>
    readonly blogId: FieldRef<"Like", 'String'>
    readonly createdAt: FieldRef<"Like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Like findUnique
   */
  export type LikeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findUniqueOrThrow
   */
  export type LikeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findFirst
   */
  export type LikeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findFirstOrThrow
   */
  export type LikeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findMany
   */
  export type LikeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like create
   */
  export type LikeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to create a Like.
     */
    data: XOR<LikeCreateInput, LikeUncheckedCreateInput>
  }

  /**
   * Like createMany
   */
  export type LikeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Like createManyAndReturn
   */
  export type LikeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Like update
   */
  export type LikeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to update a Like.
     */
    data: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
    /**
     * Choose, which Like to update.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like updateMany
   */
  export type LikeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Likes.
     */
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    /**
     * Filter which Likes to update
     */
    where?: LikeWhereInput
    /**
     * Limit how many Likes to update.
     */
    limit?: number
  }

  /**
   * Like updateManyAndReturn
   */
  export type LikeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * The data used to update Likes.
     */
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    /**
     * Filter which Likes to update
     */
    where?: LikeWhereInput
    /**
     * Limit how many Likes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Like upsert
   */
  export type LikeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The filter to search for the Like to update in case it exists.
     */
    where: LikeWhereUniqueInput
    /**
     * In case the Like found by the `where` argument doesn't exist, create a new Like with this data.
     */
    create: XOR<LikeCreateInput, LikeUncheckedCreateInput>
    /**
     * In case the Like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
  }

  /**
   * Like delete
   */
  export type LikeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter which Like to delete.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like deleteMany
   */
  export type LikeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Likes to delete
     */
    where?: LikeWhereInput
    /**
     * Limit how many Likes to delete.
     */
    limit?: number
  }

  /**
   * Like without action
   */
  export type LikeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
  }


  /**
   * Model Blog
   */

  export type AggregateBlog = {
    _count: BlogCountAggregateOutputType | null
    _min: BlogMinAggregateOutputType | null
    _max: BlogMaxAggregateOutputType | null
  }

  export type BlogMinAggregateOutputType = {
    id: string | null
    authorId: string | null
    content: string | null
    title: string | null
    thumbnail: string | null
    createdAt: Date | null
    updateAt: Date | null
    visibilty: $Enums.Visibility | null
  }

  export type BlogMaxAggregateOutputType = {
    id: string | null
    authorId: string | null
    content: string | null
    title: string | null
    thumbnail: string | null
    createdAt: Date | null
    updateAt: Date | null
    visibilty: $Enums.Visibility | null
  }

  export type BlogCountAggregateOutputType = {
    id: number
    authorId: number
    content: number
    title: number
    thumbnail: number
    createdAt: number
    updateAt: number
    visibilty: number
    _all: number
  }


  export type BlogMinAggregateInputType = {
    id?: true
    authorId?: true
    content?: true
    title?: true
    thumbnail?: true
    createdAt?: true
    updateAt?: true
    visibilty?: true
  }

  export type BlogMaxAggregateInputType = {
    id?: true
    authorId?: true
    content?: true
    title?: true
    thumbnail?: true
    createdAt?: true
    updateAt?: true
    visibilty?: true
  }

  export type BlogCountAggregateInputType = {
    id?: true
    authorId?: true
    content?: true
    title?: true
    thumbnail?: true
    createdAt?: true
    updateAt?: true
    visibilty?: true
    _all?: true
  }

  export type BlogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Blog to aggregate.
     */
    where?: BlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blogs to fetch.
     */
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Blogs
    **/
    _count?: true | BlogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogMaxAggregateInputType
  }

  export type GetBlogAggregateType<T extends BlogAggregateArgs> = {
        [P in keyof T & keyof AggregateBlog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlog[P]>
      : GetScalarType<T[P], AggregateBlog[P]>
  }




  export type BlogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogWhereInput
    orderBy?: BlogOrderByWithAggregationInput | BlogOrderByWithAggregationInput[]
    by: BlogScalarFieldEnum[] | BlogScalarFieldEnum
    having?: BlogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogCountAggregateInputType | true
    _min?: BlogMinAggregateInputType
    _max?: BlogMaxAggregateInputType
  }

  export type BlogGroupByOutputType = {
    id: string
    authorId: string
    content: string
    title: string
    thumbnail: string | null
    createdAt: Date
    updateAt: Date
    visibilty: $Enums.Visibility
    _count: BlogCountAggregateOutputType | null
    _min: BlogMinAggregateOutputType | null
    _max: BlogMaxAggregateOutputType | null
  }

  type GetBlogGroupByPayload<T extends BlogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogGroupByOutputType[P]>
            : GetScalarType<T[P], BlogGroupByOutputType[P]>
        }
      >
    >


  export type BlogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorId?: boolean
    content?: boolean
    title?: boolean
    thumbnail?: boolean
    createdAt?: boolean
    updateAt?: boolean
    visibilty?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    blogRequests?: boolean | Blog$blogRequestsArgs<ExtArgs>
    likes?: boolean | Blog$likesArgs<ExtArgs>
    notifications?: boolean | Blog$notificationsArgs<ExtArgs>
    allowedUsers?: boolean | Blog$allowedUsersArgs<ExtArgs>
    _count?: boolean | BlogCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blog"]>

  export type BlogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorId?: boolean
    content?: boolean
    title?: boolean
    thumbnail?: boolean
    createdAt?: boolean
    updateAt?: boolean
    visibilty?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blog"]>

  export type BlogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorId?: boolean
    content?: boolean
    title?: boolean
    thumbnail?: boolean
    createdAt?: boolean
    updateAt?: boolean
    visibilty?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["blog"]>

  export type BlogSelectScalar = {
    id?: boolean
    authorId?: boolean
    content?: boolean
    title?: boolean
    thumbnail?: boolean
    createdAt?: boolean
    updateAt?: boolean
    visibilty?: boolean
  }

  export type BlogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "authorId" | "content" | "title" | "thumbnail" | "createdAt" | "updateAt" | "visibilty", ExtArgs["result"]["blog"]>
  export type BlogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    blogRequests?: boolean | Blog$blogRequestsArgs<ExtArgs>
    likes?: boolean | Blog$likesArgs<ExtArgs>
    notifications?: boolean | Blog$notificationsArgs<ExtArgs>
    allowedUsers?: boolean | Blog$allowedUsersArgs<ExtArgs>
    _count?: boolean | BlogCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BlogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BlogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BlogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Blog"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      blogRequests: Prisma.$BlogRequestPayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      allowedUsers: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      authorId: string
      content: string
      title: string
      thumbnail: string | null
      createdAt: Date
      updateAt: Date
      visibilty: $Enums.Visibility
    }, ExtArgs["result"]["blog"]>
    composites: {}
  }

  type BlogGetPayload<S extends boolean | null | undefined | BlogDefaultArgs> = $Result.GetResult<Prisma.$BlogPayload, S>

  type BlogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BlogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BlogCountAggregateInputType | true
    }

  export interface BlogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Blog'], meta: { name: 'Blog' } }
    /**
     * Find zero or one Blog that matches the filter.
     * @param {BlogFindUniqueArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlogFindUniqueArgs>(args: SelectSubset<T, BlogFindUniqueArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Blog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BlogFindUniqueOrThrowArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlogFindUniqueOrThrowArgs>(args: SelectSubset<T, BlogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Blog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogFindFirstArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlogFindFirstArgs>(args?: SelectSubset<T, BlogFindFirstArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Blog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogFindFirstOrThrowArgs} args - Arguments to find a Blog
     * @example
     * // Get one Blog
     * const blog = await prisma.blog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlogFindFirstOrThrowArgs>(args?: SelectSubset<T, BlogFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Blogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blogs
     * const blogs = await prisma.blog.findMany()
     * 
     * // Get first 10 Blogs
     * const blogs = await prisma.blog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogWithIdOnly = await prisma.blog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlogFindManyArgs>(args?: SelectSubset<T, BlogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Blog.
     * @param {BlogCreateArgs} args - Arguments to create a Blog.
     * @example
     * // Create one Blog
     * const Blog = await prisma.blog.create({
     *   data: {
     *     // ... data to create a Blog
     *   }
     * })
     * 
     */
    create<T extends BlogCreateArgs>(args: SelectSubset<T, BlogCreateArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Blogs.
     * @param {BlogCreateManyArgs} args - Arguments to create many Blogs.
     * @example
     * // Create many Blogs
     * const blog = await prisma.blog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlogCreateManyArgs>(args?: SelectSubset<T, BlogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Blogs and returns the data saved in the database.
     * @param {BlogCreateManyAndReturnArgs} args - Arguments to create many Blogs.
     * @example
     * // Create many Blogs
     * const blog = await prisma.blog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Blogs and only return the `id`
     * const blogWithIdOnly = await prisma.blog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlogCreateManyAndReturnArgs>(args?: SelectSubset<T, BlogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Blog.
     * @param {BlogDeleteArgs} args - Arguments to delete one Blog.
     * @example
     * // Delete one Blog
     * const Blog = await prisma.blog.delete({
     *   where: {
     *     // ... filter to delete one Blog
     *   }
     * })
     * 
     */
    delete<T extends BlogDeleteArgs>(args: SelectSubset<T, BlogDeleteArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Blog.
     * @param {BlogUpdateArgs} args - Arguments to update one Blog.
     * @example
     * // Update one Blog
     * const blog = await prisma.blog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlogUpdateArgs>(args: SelectSubset<T, BlogUpdateArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Blogs.
     * @param {BlogDeleteManyArgs} args - Arguments to filter Blogs to delete.
     * @example
     * // Delete a few Blogs
     * const { count } = await prisma.blog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlogDeleteManyArgs>(args?: SelectSubset<T, BlogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blogs
     * const blog = await prisma.blog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlogUpdateManyArgs>(args: SelectSubset<T, BlogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blogs and returns the data updated in the database.
     * @param {BlogUpdateManyAndReturnArgs} args - Arguments to update many Blogs.
     * @example
     * // Update many Blogs
     * const blog = await prisma.blog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Blogs and only return the `id`
     * const blogWithIdOnly = await prisma.blog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BlogUpdateManyAndReturnArgs>(args: SelectSubset<T, BlogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Blog.
     * @param {BlogUpsertArgs} args - Arguments to update or create a Blog.
     * @example
     * // Update or create a Blog
     * const blog = await prisma.blog.upsert({
     *   create: {
     *     // ... data to create a Blog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Blog we want to update
     *   }
     * })
     */
    upsert<T extends BlogUpsertArgs>(args: SelectSubset<T, BlogUpsertArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Blogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogCountArgs} args - Arguments to filter Blogs to count.
     * @example
     * // Count the number of Blogs
     * const count = await prisma.blog.count({
     *   where: {
     *     // ... the filter for the Blogs we want to count
     *   }
     * })
    **/
    count<T extends BlogCountArgs>(
      args?: Subset<T, BlogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Blog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogAggregateArgs>(args: Subset<T, BlogAggregateArgs>): Prisma.PrismaPromise<GetBlogAggregateType<T>>

    /**
     * Group by Blog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlogGroupByArgs['orderBy'] }
        : { orderBy?: BlogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Blog model
   */
  readonly fields: BlogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Blog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    blogRequests<T extends Blog$blogRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Blog$blogRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends Blog$likesArgs<ExtArgs> = {}>(args?: Subset<T, Blog$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Blog$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Blog$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    allowedUsers<T extends Blog$allowedUsersArgs<ExtArgs> = {}>(args?: Subset<T, Blog$allowedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Blog model
   */
  interface BlogFieldRefs {
    readonly id: FieldRef<"Blog", 'String'>
    readonly authorId: FieldRef<"Blog", 'String'>
    readonly content: FieldRef<"Blog", 'String'>
    readonly title: FieldRef<"Blog", 'String'>
    readonly thumbnail: FieldRef<"Blog", 'String'>
    readonly createdAt: FieldRef<"Blog", 'DateTime'>
    readonly updateAt: FieldRef<"Blog", 'DateTime'>
    readonly visibilty: FieldRef<"Blog", 'Visibility'>
  }
    

  // Custom InputTypes
  /**
   * Blog findUnique
   */
  export type BlogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter, which Blog to fetch.
     */
    where: BlogWhereUniqueInput
  }

  /**
   * Blog findUniqueOrThrow
   */
  export type BlogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter, which Blog to fetch.
     */
    where: BlogWhereUniqueInput
  }

  /**
   * Blog findFirst
   */
  export type BlogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter, which Blog to fetch.
     */
    where?: BlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blogs to fetch.
     */
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Blogs.
     */
    cursor?: BlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Blogs.
     */
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }

  /**
   * Blog findFirstOrThrow
   */
  export type BlogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter, which Blog to fetch.
     */
    where?: BlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blogs to fetch.
     */
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Blogs.
     */
    cursor?: BlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Blogs.
     */
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }

  /**
   * Blog findMany
   */
  export type BlogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter, which Blogs to fetch.
     */
    where?: BlogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Blogs to fetch.
     */
    orderBy?: BlogOrderByWithRelationInput | BlogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Blogs.
     */
    cursor?: BlogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Blogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Blogs.
     */
    skip?: number
    distinct?: BlogScalarFieldEnum | BlogScalarFieldEnum[]
  }

  /**
   * Blog create
   */
  export type BlogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * The data needed to create a Blog.
     */
    data: XOR<BlogCreateInput, BlogUncheckedCreateInput>
  }

  /**
   * Blog createMany
   */
  export type BlogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Blogs.
     */
    data: BlogCreateManyInput | BlogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Blog createManyAndReturn
   */
  export type BlogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * The data used to create many Blogs.
     */
    data: BlogCreateManyInput | BlogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Blog update
   */
  export type BlogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * The data needed to update a Blog.
     */
    data: XOR<BlogUpdateInput, BlogUncheckedUpdateInput>
    /**
     * Choose, which Blog to update.
     */
    where: BlogWhereUniqueInput
  }

  /**
   * Blog updateMany
   */
  export type BlogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Blogs.
     */
    data: XOR<BlogUpdateManyMutationInput, BlogUncheckedUpdateManyInput>
    /**
     * Filter which Blogs to update
     */
    where?: BlogWhereInput
    /**
     * Limit how many Blogs to update.
     */
    limit?: number
  }

  /**
   * Blog updateManyAndReturn
   */
  export type BlogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * The data used to update Blogs.
     */
    data: XOR<BlogUpdateManyMutationInput, BlogUncheckedUpdateManyInput>
    /**
     * Filter which Blogs to update
     */
    where?: BlogWhereInput
    /**
     * Limit how many Blogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Blog upsert
   */
  export type BlogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * The filter to search for the Blog to update in case it exists.
     */
    where: BlogWhereUniqueInput
    /**
     * In case the Blog found by the `where` argument doesn't exist, create a new Blog with this data.
     */
    create: XOR<BlogCreateInput, BlogUncheckedCreateInput>
    /**
     * In case the Blog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlogUpdateInput, BlogUncheckedUpdateInput>
  }

  /**
   * Blog delete
   */
  export type BlogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    /**
     * Filter which Blog to delete.
     */
    where: BlogWhereUniqueInput
  }

  /**
   * Blog deleteMany
   */
  export type BlogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Blogs to delete
     */
    where?: BlogWhereInput
    /**
     * Limit how many Blogs to delete.
     */
    limit?: number
  }

  /**
   * Blog.blogRequests
   */
  export type Blog$blogRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogRequest
     */
    select?: BlogRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BlogRequest
     */
    omit?: BlogRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogRequestInclude<ExtArgs> | null
    where?: BlogRequestWhereInput
    orderBy?: BlogRequestOrderByWithRelationInput | BlogRequestOrderByWithRelationInput[]
    cursor?: BlogRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogRequestScalarFieldEnum | BlogRequestScalarFieldEnum[]
  }

  /**
   * Blog.likes
   */
  export type Blog$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Like
     */
    omit?: LikeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Blog.notifications
   */
  export type Blog$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Blog.allowedUsers
   */
  export type Blog$allowedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Blog without action
   */
  export type BlogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    senderId: string | null
    receiverId: string | null
    snippetId: string | null
    blogId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    isRead: boolean | null
    type: string | null
    codebuddyId: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    senderId: string | null
    receiverId: string | null
    snippetId: string | null
    blogId: string | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    isRead: boolean | null
    type: string | null
    codebuddyId: string | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    senderId: number
    receiverId: number
    snippetId: number
    blogId: number
    status: number
    createdAt: number
    isRead: number
    type: number
    codebuddyId: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    snippetId?: true
    blogId?: true
    status?: true
    createdAt?: true
    isRead?: true
    type?: true
    codebuddyId?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    snippetId?: true
    blogId?: true
    status?: true
    createdAt?: true
    isRead?: true
    type?: true
    codebuddyId?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    snippetId?: true
    blogId?: true
    status?: true
    createdAt?: true
    isRead?: true
    type?: true
    codebuddyId?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    senderId: string
    receiverId: string
    snippetId: string | null
    blogId: string | null
    status: $Enums.RequestStatus
    createdAt: Date
    isRead: boolean
    type: string | null
    codebuddyId: string | null
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    snippetId?: boolean
    blogId?: boolean
    status?: boolean
    createdAt?: boolean
    isRead?: boolean
    type?: boolean
    codebuddyId?: boolean
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    snippetId?: boolean
    blogId?: boolean
    status?: boolean
    createdAt?: boolean
    isRead?: boolean
    type?: boolean
    codebuddyId?: boolean
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    snippetId?: boolean
    blogId?: boolean
    status?: boolean
    createdAt?: boolean
    isRead?: boolean
    type?: boolean
    codebuddyId?: boolean
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    snippetId?: boolean
    blogId?: boolean
    status?: boolean
    createdAt?: boolean
    isRead?: boolean
    type?: boolean
    codebuddyId?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "senderId" | "receiverId" | "snippetId" | "blogId" | "status" | "createdAt" | "isRead" | "type" | "codebuddyId", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blog?: boolean | Notification$blogArgs<ExtArgs>
    codeBuddyRequest?: boolean | Notification$codeBuddyRequestArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    snippet?: boolean | Notification$snippetArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      blog: Prisma.$BlogPayload<ExtArgs> | null
      codeBuddyRequest: Prisma.$CodeBuddyRequestPayload<ExtArgs> | null
      receiver: Prisma.$UserPayload<ExtArgs>
      sender: Prisma.$UserPayload<ExtArgs>
      snippet: Prisma.$SnippetPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      senderId: string
      receiverId: string
      snippetId: string | null
      blogId: string | null
      status: $Enums.RequestStatus
      createdAt: Date
      isRead: boolean
      type: string | null
      codebuddyId: string | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    blog<T extends Notification$blogArgs<ExtArgs> = {}>(args?: Subset<T, Notification$blogArgs<ExtArgs>>): Prisma__BlogClient<$Result.GetResult<Prisma.$BlogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    codeBuddyRequest<T extends Notification$codeBuddyRequestArgs<ExtArgs> = {}>(args?: Subset<T, Notification$codeBuddyRequestArgs<ExtArgs>>): Prisma__CodeBuddyRequestClient<$Result.GetResult<Prisma.$CodeBuddyRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    receiver<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    snippet<T extends Notification$snippetArgs<ExtArgs> = {}>(args?: Subset<T, Notification$snippetArgs<ExtArgs>>): Prisma__SnippetClient<$Result.GetResult<Prisma.$SnippetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly senderId: FieldRef<"Notification", 'String'>
    readonly receiverId: FieldRef<"Notification", 'String'>
    readonly snippetId: FieldRef<"Notification", 'String'>
    readonly blogId: FieldRef<"Notification", 'String'>
    readonly status: FieldRef<"Notification", 'RequestStatus'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly type: FieldRef<"Notification", 'String'>
    readonly codebuddyId: FieldRef<"Notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification.blog
   */
  export type Notification$blogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Blog
     */
    select?: BlogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Blog
     */
    omit?: BlogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogInclude<ExtArgs> | null
    where?: BlogWhereInput
  }

  /**
   * Notification.codeBuddyRequest
   */
  export type Notification$codeBuddyRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodeBuddyRequest
     */
    select?: CodeBuddyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CodeBuddyRequest
     */
    omit?: CodeBuddyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CodeBuddyRequestInclude<ExtArgs> | null
    where?: CodeBuddyRequestWhereInput
  }

  /**
   * Notification.snippet
   */
  export type Notification$snippetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Snippet
     */
    select?: SnippetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Snippet
     */
    omit?: SnippetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SnippetInclude<ExtArgs> | null
    where?: SnippetWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    content: string | null
    senderId: string | null
    recipientId: string | null
    timestamp: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    content: string | null
    senderId: string | null
    recipientId: string | null
    timestamp: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    content: number
    senderId: number
    recipientId: number
    timestamp: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    recipientId?: true
    timestamp?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    recipientId?: true
    timestamp?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    content?: true
    senderId?: true
    recipientId?: true
    timestamp?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    content: string
    senderId: string
    recipientId: string
    timestamp: Date
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    senderId?: boolean
    recipientId?: boolean
    timestamp?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    senderId?: boolean
    recipientId?: boolean
    timestamp?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    senderId?: boolean
    recipientId?: boolean
    timestamp?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    content?: boolean
    senderId?: boolean
    recipientId?: boolean
    timestamp?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "senderId" | "recipientId" | "timestamp", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      recipient: Prisma.$UserPayload<ExtArgs>
      sender: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      senderId: string
      recipientId: string
      timestamp: Date
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    recipient<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly recipientId: FieldRef<"Message", 'String'>
    readonly timestamp: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message updateManyAndReturn
   */
  export type MessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    password: 'password',
    role: 'role',
    codeBuddyId: 'codeBuddyId',
    matchingPreferences: 'matchingPreferences',
    createdAt: 'createdAt',
    portfolioId: 'portfolioId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const CodeBuddyRequestScalarFieldEnum: {
    id: 'id',
    requesterId: 'requesterId',
    receiverId: 'receiverId',
    status: 'status',
    createdAt: 'createdAt',
    expiresAt: 'expiresAt'
  };

  export type CodeBuddyRequestScalarFieldEnum = (typeof CodeBuddyRequestScalarFieldEnum)[keyof typeof CodeBuddyRequestScalarFieldEnum]


  export const TechStackScalarFieldEnum: {
    category: 'category',
    name: 'name',
    id: 'id',
    logo: 'logo'
  };

  export type TechStackScalarFieldEnum = (typeof TechStackScalarFieldEnum)[keyof typeof TechStackScalarFieldEnum]


  export const PortfolioScalarFieldEnum: {
    id: 'id',
    title: 'title',
    summary: 'summary',
    profile: 'profile',
    projects: 'projects',
    name: 'name',
    stackid: 'stackid',
    userid: 'userid',
    achievements: 'achievements',
    interests: 'interests',
    availability: 'availability',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isPublished: 'isPublished',
    experiences: 'experiences',
    education: 'education',
    location: 'location',
    passionate: 'passionate',
    yearofexperience: 'yearofexperience',
    certifications: 'certifications',
    techstack: 'techstack'
  };

  export type PortfolioScalarFieldEnum = (typeof PortfolioScalarFieldEnum)[keyof typeof PortfolioScalarFieldEnum]


  export const SocialLinkScalarFieldEnum: {
    id: 'id',
    platform: 'platform',
    url: 'url',
    portfolioId: 'portfolioId',
    logo: 'logo'
  };

  export type SocialLinkScalarFieldEnum = (typeof SocialLinkScalarFieldEnum)[keyof typeof SocialLinkScalarFieldEnum]


  export const PasswordResetTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    email: 'email',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


  export const BlogRequestScalarFieldEnum: {
    id: 'id',
    blogId: 'blogId',
    requesterId: 'requesterId',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type BlogRequestScalarFieldEnum = (typeof BlogRequestScalarFieldEnum)[keyof typeof BlogRequestScalarFieldEnum]


  export const SnippetRequestScalarFieldEnum: {
    id: 'id',
    snippetId: 'snippetId',
    requesterId: 'requesterId',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type SnippetRequestScalarFieldEnum = (typeof SnippetRequestScalarFieldEnum)[keyof typeof SnippetRequestScalarFieldEnum]


  export const SnippetScalarFieldEnum: {
    id: 'id',
    authorid: 'authorid',
    title: 'title',
    description: 'description',
    content: 'content',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    visibility: 'visibility',
    framework: 'framework'
  };

  export type SnippetScalarFieldEnum = (typeof SnippetScalarFieldEnum)[keyof typeof SnippetScalarFieldEnum]


  export const LikeScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    blogId: 'blogId',
    createdAt: 'createdAt'
  };

  export type LikeScalarFieldEnum = (typeof LikeScalarFieldEnum)[keyof typeof LikeScalarFieldEnum]


  export const BlogScalarFieldEnum: {
    id: 'id',
    authorId: 'authorId',
    content: 'content',
    title: 'title',
    thumbnail: 'thumbnail',
    createdAt: 'createdAt',
    updateAt: 'updateAt',
    visibilty: 'visibilty'
  };

  export type BlogScalarFieldEnum = (typeof BlogScalarFieldEnum)[keyof typeof BlogScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    senderId: 'senderId',
    receiverId: 'receiverId',
    snippetId: 'snippetId',
    blogId: 'blogId',
    status: 'status',
    createdAt: 'createdAt',
    isRead: 'isRead',
    type: 'type',
    codebuddyId: 'codebuddyId'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    content: 'content',
    senderId: 'senderId',
    recipientId: 'recipientId',
    timestamp: 'timestamp'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'RequestStatus'
   */
  export type EnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus'>
    


  /**
   * Reference to a field of type 'RequestStatus[]'
   */
  export type ListEnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Visibility'
   */
  export type EnumVisibilityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Visibility'>
    


  /**
   * Reference to a field of type 'Visibility[]'
   */
  export type ListEnumVisibilityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Visibility[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    codeBuddyId?: StringNullableFilter<"User"> | string | null
    matchingPreferences?: JsonNullableFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    portfolioId?: StringNullableFilter<"User"> | string | null
    accounts?: AccountListRelationFilter
    blog?: BlogListRelationFilter
    sendBlogRequest?: BlogRequestListRelationFilter
    receivedCodeBuddyRequests?: CodeBuddyRequestListRelationFilter
    codeBuddyRequests?: CodeBuddyRequestListRelationFilter
    likes?: LikeListRelationFilter
    receivedMessages?: MessageListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedNotifcations?: NotificationListRelationFilter
    sentNotification?: NotificationListRelationFilter
    portfolio?: XOR<PortfolioNullableScalarRelationFilter, PortfolioWhereInput> | null
    sessions?: SessionListRelationFilter
    snippetCollection?: SnippetListRelationFilter
    sendRequests?: SnippetRequestListRelationFilter
    codeBuddy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    buddyOf?: UserListRelationFilter
    allowedBlog?: BlogListRelationFilter
    allowedSnippets?: SnippetListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    role?: SortOrder
    codeBuddyId?: SortOrderInput | SortOrder
    matchingPreferences?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    portfolioId?: SortOrderInput | SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    blog?: BlogOrderByRelationAggregateInput
    sendBlogRequest?: BlogRequestOrderByRelationAggregateInput
    receivedCodeBuddyRequests?: CodeBuddyRequestOrderByRelationAggregateInput
    codeBuddyRequests?: CodeBuddyRequestOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    receivedNotifcations?: NotificationOrderByRelationAggregateInput
    sentNotification?: NotificationOrderByRelationAggregateInput
    portfolio?: PortfolioOrderByWithRelationInput
    sessions?: SessionOrderByRelationAggregateInput
    snippetCollection?: SnippetOrderByRelationAggregateInput
    sendRequests?: SnippetRequestOrderByRelationAggregateInput
    codeBuddy?: UserOrderByWithRelationInput
    buddyOf?: UserOrderByRelationAggregateInput
    allowedBlog?: BlogOrderByRelationAggregateInput
    allowedSnippets?: SnippetOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    codeBuddyId?: StringNullableFilter<"User"> | string | null
    matchingPreferences?: JsonNullableFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    portfolioId?: StringNullableFilter<"User"> | string | null
    accounts?: AccountListRelationFilter
    blog?: BlogListRelationFilter
    sendBlogRequest?: BlogRequestListRelationFilter
    receivedCodeBuddyRequests?: CodeBuddyRequestListRelationFilter
    codeBuddyRequests?: CodeBuddyRequestListRelationFilter
    likes?: LikeListRelationFilter
    receivedMessages?: MessageListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedNotifcations?: NotificationListRelationFilter
    sentNotification?: NotificationListRelationFilter
    portfolio?: XOR<PortfolioNullableScalarRelationFilter, PortfolioWhereInput> | null
    sessions?: SessionListRelationFilter
    snippetCollection?: SnippetListRelationFilter
    sendRequests?: SnippetRequestListRelationFilter
    codeBuddy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    buddyOf?: UserListRelationFilter
    allowedBlog?: BlogListRelationFilter
    allowedSnippets?: SnippetListRelationFilter
  }, "id" | "username" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    role?: SortOrder
    codeBuddyId?: SortOrderInput | SortOrder
    matchingPreferences?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    portfolioId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    password?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    codeBuddyId?: StringNullableWithAggregatesFilter<"User"> | string | null
    matchingPreferences?: JsonNullableWithAggregatesFilter<"User">
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    portfolioId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type CodeBuddyRequestWhereInput = {
    AND?: CodeBuddyRequestWhereInput | CodeBuddyRequestWhereInput[]
    OR?: CodeBuddyRequestWhereInput[]
    NOT?: CodeBuddyRequestWhereInput | CodeBuddyRequestWhereInput[]
    id?: StringFilter<"CodeBuddyRequest"> | string
    requesterId?: StringFilter<"CodeBuddyRequest"> | string
    receiverId?: StringFilter<"CodeBuddyRequest"> | string
    status?: EnumRequestStatusFilter<"CodeBuddyRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
    expiresAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
    reciever?: XOR<UserScalarRelationFilter, UserWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    notification?: NotificationListRelationFilter
  }

  export type CodeBuddyRequestOrderByWithRelationInput = {
    id?: SortOrder
    requesterId?: SortOrder
    receiverId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    reciever?: UserOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
    notification?: NotificationOrderByRelationAggregateInput
  }

  export type CodeBuddyRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    requesterId_receiverId?: CodeBuddyRequestRequesterIdReceiverIdCompoundUniqueInput
    AND?: CodeBuddyRequestWhereInput | CodeBuddyRequestWhereInput[]
    OR?: CodeBuddyRequestWhereInput[]
    NOT?: CodeBuddyRequestWhereInput | CodeBuddyRequestWhereInput[]
    requesterId?: StringFilter<"CodeBuddyRequest"> | string
    receiverId?: StringFilter<"CodeBuddyRequest"> | string
    status?: EnumRequestStatusFilter<"CodeBuddyRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
    expiresAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
    reciever?: XOR<UserScalarRelationFilter, UserWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    notification?: NotificationListRelationFilter
  }, "id" | "requesterId_receiverId">

  export type CodeBuddyRequestOrderByWithAggregationInput = {
    id?: SortOrder
    requesterId?: SortOrder
    receiverId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    _count?: CodeBuddyRequestCountOrderByAggregateInput
    _max?: CodeBuddyRequestMaxOrderByAggregateInput
    _min?: CodeBuddyRequestMinOrderByAggregateInput
  }

  export type CodeBuddyRequestScalarWhereWithAggregatesInput = {
    AND?: CodeBuddyRequestScalarWhereWithAggregatesInput | CodeBuddyRequestScalarWhereWithAggregatesInput[]
    OR?: CodeBuddyRequestScalarWhereWithAggregatesInput[]
    NOT?: CodeBuddyRequestScalarWhereWithAggregatesInput | CodeBuddyRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CodeBuddyRequest"> | string
    requesterId?: StringWithAggregatesFilter<"CodeBuddyRequest"> | string
    receiverId?: StringWithAggregatesFilter<"CodeBuddyRequest"> | string
    status?: EnumRequestStatusWithAggregatesFilter<"CodeBuddyRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"CodeBuddyRequest"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"CodeBuddyRequest"> | Date | string
  }

  export type techStackWhereInput = {
    AND?: techStackWhereInput | techStackWhereInput[]
    OR?: techStackWhereInput[]
    NOT?: techStackWhereInput | techStackWhereInput[]
    category?: StringNullableFilter<"techStack"> | string | null
    name?: StringNullableFilter<"techStack"> | string | null
    id?: IntFilter<"techStack"> | number
    logo?: StringNullableFilter<"techStack"> | string | null
  }

  export type techStackOrderByWithRelationInput = {
    category?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    id?: SortOrder
    logo?: SortOrderInput | SortOrder
  }

  export type techStackWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: techStackWhereInput | techStackWhereInput[]
    OR?: techStackWhereInput[]
    NOT?: techStackWhereInput | techStackWhereInput[]
    category?: StringNullableFilter<"techStack"> | string | null
    name?: StringNullableFilter<"techStack"> | string | null
    logo?: StringNullableFilter<"techStack"> | string | null
  }, "id">

  export type techStackOrderByWithAggregationInput = {
    category?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    id?: SortOrder
    logo?: SortOrderInput | SortOrder
    _count?: techStackCountOrderByAggregateInput
    _avg?: techStackAvgOrderByAggregateInput
    _max?: techStackMaxOrderByAggregateInput
    _min?: techStackMinOrderByAggregateInput
    _sum?: techStackSumOrderByAggregateInput
  }

  export type techStackScalarWhereWithAggregatesInput = {
    AND?: techStackScalarWhereWithAggregatesInput | techStackScalarWhereWithAggregatesInput[]
    OR?: techStackScalarWhereWithAggregatesInput[]
    NOT?: techStackScalarWhereWithAggregatesInput | techStackScalarWhereWithAggregatesInput[]
    category?: StringNullableWithAggregatesFilter<"techStack"> | string | null
    name?: StringNullableWithAggregatesFilter<"techStack"> | string | null
    id?: IntWithAggregatesFilter<"techStack"> | number
    logo?: StringNullableWithAggregatesFilter<"techStack"> | string | null
  }

  export type PortfolioWhereInput = {
    AND?: PortfolioWhereInput | PortfolioWhereInput[]
    OR?: PortfolioWhereInput[]
    NOT?: PortfolioWhereInput | PortfolioWhereInput[]
    id?: StringFilter<"Portfolio"> | string
    title?: StringFilter<"Portfolio"> | string
    summary?: StringFilter<"Portfolio"> | string
    profile?: StringNullableFilter<"Portfolio"> | string | null
    projects?: JsonNullableFilter<"Portfolio">
    name?: StringFilter<"Portfolio"> | string
    stackid?: StringNullableFilter<"Portfolio"> | string | null
    userid?: StringFilter<"Portfolio"> | string
    achievements?: StringNullableFilter<"Portfolio"> | string | null
    interests?: StringNullableFilter<"Portfolio"> | string | null
    availability?: StringNullableFilter<"Portfolio"> | string | null
    createdAt?: DateTimeFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeFilter<"Portfolio"> | Date | string
    isPublished?: BoolFilter<"Portfolio"> | boolean
    experiences?: JsonNullableFilter<"Portfolio">
    education?: StringNullableFilter<"Portfolio"> | string | null
    location?: StringNullableFilter<"Portfolio"> | string | null
    passionate?: StringNullableFilter<"Portfolio"> | string | null
    yearofexperience?: StringNullableFilter<"Portfolio"> | string | null
    certifications?: JsonNullableFilter<"Portfolio">
    techstack?: JsonNullableFilter<"Portfolio">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    links?: SocialLinkListRelationFilter
  }

  export type PortfolioOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    profile?: SortOrderInput | SortOrder
    projects?: SortOrderInput | SortOrder
    name?: SortOrder
    stackid?: SortOrderInput | SortOrder
    userid?: SortOrder
    achievements?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isPublished?: SortOrder
    experiences?: SortOrderInput | SortOrder
    education?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    passionate?: SortOrderInput | SortOrder
    yearofexperience?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    techstack?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    links?: SocialLinkOrderByRelationAggregateInput
  }

  export type PortfolioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userid?: string
    AND?: PortfolioWhereInput | PortfolioWhereInput[]
    OR?: PortfolioWhereInput[]
    NOT?: PortfolioWhereInput | PortfolioWhereInput[]
    title?: StringFilter<"Portfolio"> | string
    summary?: StringFilter<"Portfolio"> | string
    profile?: StringNullableFilter<"Portfolio"> | string | null
    projects?: JsonNullableFilter<"Portfolio">
    name?: StringFilter<"Portfolio"> | string
    stackid?: StringNullableFilter<"Portfolio"> | string | null
    achievements?: StringNullableFilter<"Portfolio"> | string | null
    interests?: StringNullableFilter<"Portfolio"> | string | null
    availability?: StringNullableFilter<"Portfolio"> | string | null
    createdAt?: DateTimeFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeFilter<"Portfolio"> | Date | string
    isPublished?: BoolFilter<"Portfolio"> | boolean
    experiences?: JsonNullableFilter<"Portfolio">
    education?: StringNullableFilter<"Portfolio"> | string | null
    location?: StringNullableFilter<"Portfolio"> | string | null
    passionate?: StringNullableFilter<"Portfolio"> | string | null
    yearofexperience?: StringNullableFilter<"Portfolio"> | string | null
    certifications?: JsonNullableFilter<"Portfolio">
    techstack?: JsonNullableFilter<"Portfolio">
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    links?: SocialLinkListRelationFilter
  }, "id" | "userid">

  export type PortfolioOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    profile?: SortOrderInput | SortOrder
    projects?: SortOrderInput | SortOrder
    name?: SortOrder
    stackid?: SortOrderInput | SortOrder
    userid?: SortOrder
    achievements?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isPublished?: SortOrder
    experiences?: SortOrderInput | SortOrder
    education?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    passionate?: SortOrderInput | SortOrder
    yearofexperience?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    techstack?: SortOrderInput | SortOrder
    _count?: PortfolioCountOrderByAggregateInput
    _max?: PortfolioMaxOrderByAggregateInput
    _min?: PortfolioMinOrderByAggregateInput
  }

  export type PortfolioScalarWhereWithAggregatesInput = {
    AND?: PortfolioScalarWhereWithAggregatesInput | PortfolioScalarWhereWithAggregatesInput[]
    OR?: PortfolioScalarWhereWithAggregatesInput[]
    NOT?: PortfolioScalarWhereWithAggregatesInput | PortfolioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Portfolio"> | string
    title?: StringWithAggregatesFilter<"Portfolio"> | string
    summary?: StringWithAggregatesFilter<"Portfolio"> | string
    profile?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    projects?: JsonNullableWithAggregatesFilter<"Portfolio">
    name?: StringWithAggregatesFilter<"Portfolio"> | string
    stackid?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    userid?: StringWithAggregatesFilter<"Portfolio"> | string
    achievements?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    interests?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    availability?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Portfolio"> | Date | string
    isPublished?: BoolWithAggregatesFilter<"Portfolio"> | boolean
    experiences?: JsonNullableWithAggregatesFilter<"Portfolio">
    education?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    location?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    passionate?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    yearofexperience?: StringNullableWithAggregatesFilter<"Portfolio"> | string | null
    certifications?: JsonNullableWithAggregatesFilter<"Portfolio">
    techstack?: JsonNullableWithAggregatesFilter<"Portfolio">
  }

  export type SocialLinkWhereInput = {
    AND?: SocialLinkWhereInput | SocialLinkWhereInput[]
    OR?: SocialLinkWhereInput[]
    NOT?: SocialLinkWhereInput | SocialLinkWhereInput[]
    id?: StringFilter<"SocialLink"> | string
    platform?: StringFilter<"SocialLink"> | string
    url?: StringFilter<"SocialLink"> | string
    portfolioId?: StringFilter<"SocialLink"> | string
    logo?: StringNullableFilter<"SocialLink"> | string | null
    portfolio?: XOR<PortfolioScalarRelationFilter, PortfolioWhereInput>
  }

  export type SocialLinkOrderByWithRelationInput = {
    id?: SortOrder
    platform?: SortOrder
    url?: SortOrder
    portfolioId?: SortOrder
    logo?: SortOrderInput | SortOrder
    portfolio?: PortfolioOrderByWithRelationInput
  }

  export type SocialLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SocialLinkWhereInput | SocialLinkWhereInput[]
    OR?: SocialLinkWhereInput[]
    NOT?: SocialLinkWhereInput | SocialLinkWhereInput[]
    platform?: StringFilter<"SocialLink"> | string
    url?: StringFilter<"SocialLink"> | string
    portfolioId?: StringFilter<"SocialLink"> | string
    logo?: StringNullableFilter<"SocialLink"> | string | null
    portfolio?: XOR<PortfolioScalarRelationFilter, PortfolioWhereInput>
  }, "id">

  export type SocialLinkOrderByWithAggregationInput = {
    id?: SortOrder
    platform?: SortOrder
    url?: SortOrder
    portfolioId?: SortOrder
    logo?: SortOrderInput | SortOrder
    _count?: SocialLinkCountOrderByAggregateInput
    _max?: SocialLinkMaxOrderByAggregateInput
    _min?: SocialLinkMinOrderByAggregateInput
  }

  export type SocialLinkScalarWhereWithAggregatesInput = {
    AND?: SocialLinkScalarWhereWithAggregatesInput | SocialLinkScalarWhereWithAggregatesInput[]
    OR?: SocialLinkScalarWhereWithAggregatesInput[]
    NOT?: SocialLinkScalarWhereWithAggregatesInput | SocialLinkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SocialLink"> | string
    platform?: StringWithAggregatesFilter<"SocialLink"> | string
    url?: StringWithAggregatesFilter<"SocialLink"> | string
    portfolioId?: StringWithAggregatesFilter<"SocialLink"> | string
    logo?: StringNullableWithAggregatesFilter<"SocialLink"> | string | null
  }

  export type PasswordResetTokenWhereInput = {
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    id?: StringFilter<"PasswordResetToken"> | string
    token?: StringFilter<"PasswordResetToken"> | string
    email?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }

  export type PasswordResetTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    email?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    email?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }, "id" | "token">

  export type PasswordResetTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    email?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: PasswordResetTokenCountOrderByAggregateInput
    _max?: PasswordResetTokenMaxOrderByAggregateInput
    _min?: PasswordResetTokenMinOrderByAggregateInput
  }

  export type PasswordResetTokenScalarWhereWithAggregatesInput = {
    AND?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    OR?: PasswordResetTokenScalarWhereWithAggregatesInput[]
    NOT?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    token?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    email?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
  }

  export type BlogRequestWhereInput = {
    AND?: BlogRequestWhereInput | BlogRequestWhereInput[]
    OR?: BlogRequestWhereInput[]
    NOT?: BlogRequestWhereInput | BlogRequestWhereInput[]
    id?: StringFilter<"BlogRequest"> | string
    blogId?: StringFilter<"BlogRequest"> | string
    requesterId?: StringFilter<"BlogRequest"> | string
    status?: EnumRequestStatusFilter<"BlogRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"BlogRequest"> | Date | string
    blog?: XOR<BlogScalarRelationFilter, BlogWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type BlogRequestOrderByWithRelationInput = {
    id?: SortOrder
    blogId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    blog?: BlogOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
  }

  export type BlogRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BlogRequestWhereInput | BlogRequestWhereInput[]
    OR?: BlogRequestWhereInput[]
    NOT?: BlogRequestWhereInput | BlogRequestWhereInput[]
    blogId?: StringFilter<"BlogRequest"> | string
    requesterId?: StringFilter<"BlogRequest"> | string
    status?: EnumRequestStatusFilter<"BlogRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"BlogRequest"> | Date | string
    blog?: XOR<BlogScalarRelationFilter, BlogWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type BlogRequestOrderByWithAggregationInput = {
    id?: SortOrder
    blogId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    _count?: BlogRequestCountOrderByAggregateInput
    _max?: BlogRequestMaxOrderByAggregateInput
    _min?: BlogRequestMinOrderByAggregateInput
  }

  export type BlogRequestScalarWhereWithAggregatesInput = {
    AND?: BlogRequestScalarWhereWithAggregatesInput | BlogRequestScalarWhereWithAggregatesInput[]
    OR?: BlogRequestScalarWhereWithAggregatesInput[]
    NOT?: BlogRequestScalarWhereWithAggregatesInput | BlogRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BlogRequest"> | string
    blogId?: StringWithAggregatesFilter<"BlogRequest"> | string
    requesterId?: StringWithAggregatesFilter<"BlogRequest"> | string
    status?: EnumRequestStatusWithAggregatesFilter<"BlogRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"BlogRequest"> | Date | string
  }

  export type SnippetRequestWhereInput = {
    AND?: SnippetRequestWhereInput | SnippetRequestWhereInput[]
    OR?: SnippetRequestWhereInput[]
    NOT?: SnippetRequestWhereInput | SnippetRequestWhereInput[]
    id?: StringFilter<"SnippetRequest"> | string
    snippetId?: StringFilter<"SnippetRequest"> | string
    requesterId?: StringFilter<"SnippetRequest"> | string
    status?: EnumRequestStatusFilter<"SnippetRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SnippetRequest"> | Date | string
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippet?: XOR<SnippetScalarRelationFilter, SnippetWhereInput>
  }

  export type SnippetRequestOrderByWithRelationInput = {
    id?: SortOrder
    snippetId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    requester?: UserOrderByWithRelationInput
    snippet?: SnippetOrderByWithRelationInput
  }

  export type SnippetRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SnippetRequestWhereInput | SnippetRequestWhereInput[]
    OR?: SnippetRequestWhereInput[]
    NOT?: SnippetRequestWhereInput | SnippetRequestWhereInput[]
    snippetId?: StringFilter<"SnippetRequest"> | string
    requesterId?: StringFilter<"SnippetRequest"> | string
    status?: EnumRequestStatusFilter<"SnippetRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SnippetRequest"> | Date | string
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippet?: XOR<SnippetScalarRelationFilter, SnippetWhereInput>
  }, "id">

  export type SnippetRequestOrderByWithAggregationInput = {
    id?: SortOrder
    snippetId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    _count?: SnippetRequestCountOrderByAggregateInput
    _max?: SnippetRequestMaxOrderByAggregateInput
    _min?: SnippetRequestMinOrderByAggregateInput
  }

  export type SnippetRequestScalarWhereWithAggregatesInput = {
    AND?: SnippetRequestScalarWhereWithAggregatesInput | SnippetRequestScalarWhereWithAggregatesInput[]
    OR?: SnippetRequestScalarWhereWithAggregatesInput[]
    NOT?: SnippetRequestScalarWhereWithAggregatesInput | SnippetRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SnippetRequest"> | string
    snippetId?: StringWithAggregatesFilter<"SnippetRequest"> | string
    requesterId?: StringWithAggregatesFilter<"SnippetRequest"> | string
    status?: EnumRequestStatusWithAggregatesFilter<"SnippetRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"SnippetRequest"> | Date | string
  }

  export type SnippetWhereInput = {
    AND?: SnippetWhereInput | SnippetWhereInput[]
    OR?: SnippetWhereInput[]
    NOT?: SnippetWhereInput | SnippetWhereInput[]
    id?: StringFilter<"Snippet"> | string
    authorid?: StringFilter<"Snippet"> | string
    title?: StringFilter<"Snippet"> | string
    description?: StringFilter<"Snippet"> | string
    content?: StringFilter<"Snippet"> | string
    createdAt?: DateTimeFilter<"Snippet"> | Date | string
    updatedAt?: DateTimeFilter<"Snippet"> | Date | string
    visibility?: EnumVisibilityFilter<"Snippet"> | $Enums.Visibility
    framework?: StringNullableFilter<"Snippet"> | string | null
    notifications?: NotificationListRelationFilter
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippetRequests?: SnippetRequestListRelationFilter
    allowedUsers?: UserListRelationFilter
  }

  export type SnippetOrderByWithRelationInput = {
    id?: SortOrder
    authorid?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visibility?: SortOrder
    framework?: SortOrderInput | SortOrder
    notifications?: NotificationOrderByRelationAggregateInput
    author?: UserOrderByWithRelationInput
    snippetRequests?: SnippetRequestOrderByRelationAggregateInput
    allowedUsers?: UserOrderByRelationAggregateInput
  }

  export type SnippetWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SnippetWhereInput | SnippetWhereInput[]
    OR?: SnippetWhereInput[]
    NOT?: SnippetWhereInput | SnippetWhereInput[]
    authorid?: StringFilter<"Snippet"> | string
    title?: StringFilter<"Snippet"> | string
    description?: StringFilter<"Snippet"> | string
    content?: StringFilter<"Snippet"> | string
    createdAt?: DateTimeFilter<"Snippet"> | Date | string
    updatedAt?: DateTimeFilter<"Snippet"> | Date | string
    visibility?: EnumVisibilityFilter<"Snippet"> | $Enums.Visibility
    framework?: StringNullableFilter<"Snippet"> | string | null
    notifications?: NotificationListRelationFilter
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippetRequests?: SnippetRequestListRelationFilter
    allowedUsers?: UserListRelationFilter
  }, "id">

  export type SnippetOrderByWithAggregationInput = {
    id?: SortOrder
    authorid?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visibility?: SortOrder
    framework?: SortOrderInput | SortOrder
    _count?: SnippetCountOrderByAggregateInput
    _max?: SnippetMaxOrderByAggregateInput
    _min?: SnippetMinOrderByAggregateInput
  }

  export type SnippetScalarWhereWithAggregatesInput = {
    AND?: SnippetScalarWhereWithAggregatesInput | SnippetScalarWhereWithAggregatesInput[]
    OR?: SnippetScalarWhereWithAggregatesInput[]
    NOT?: SnippetScalarWhereWithAggregatesInput | SnippetScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Snippet"> | string
    authorid?: StringWithAggregatesFilter<"Snippet"> | string
    title?: StringWithAggregatesFilter<"Snippet"> | string
    description?: StringWithAggregatesFilter<"Snippet"> | string
    content?: StringWithAggregatesFilter<"Snippet"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Snippet"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Snippet"> | Date | string
    visibility?: EnumVisibilityWithAggregatesFilter<"Snippet"> | $Enums.Visibility
    framework?: StringNullableWithAggregatesFilter<"Snippet"> | string | null
  }

  export type LikeWhereInput = {
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    blogId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
    blog?: XOR<BlogScalarRelationFilter, BlogWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type LikeOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    blogId?: SortOrder
    createdAt?: SortOrder
    blog?: BlogOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type LikeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_blogId?: LikeUserIdBlogIdCompoundUniqueInput
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    userId?: StringFilter<"Like"> | string
    blogId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
    blog?: XOR<BlogScalarRelationFilter, BlogWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_blogId">

  export type LikeOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    blogId?: SortOrder
    createdAt?: SortOrder
    _count?: LikeCountOrderByAggregateInput
    _max?: LikeMaxOrderByAggregateInput
    _min?: LikeMinOrderByAggregateInput
  }

  export type LikeScalarWhereWithAggregatesInput = {
    AND?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    OR?: LikeScalarWhereWithAggregatesInput[]
    NOT?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Like"> | string
    userId?: StringWithAggregatesFilter<"Like"> | string
    blogId?: StringWithAggregatesFilter<"Like"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Like"> | Date | string
  }

  export type BlogWhereInput = {
    AND?: BlogWhereInput | BlogWhereInput[]
    OR?: BlogWhereInput[]
    NOT?: BlogWhereInput | BlogWhereInput[]
    id?: StringFilter<"Blog"> | string
    authorId?: StringFilter<"Blog"> | string
    content?: StringFilter<"Blog"> | string
    title?: StringFilter<"Blog"> | string
    thumbnail?: StringNullableFilter<"Blog"> | string | null
    createdAt?: DateTimeFilter<"Blog"> | Date | string
    updateAt?: DateTimeFilter<"Blog"> | Date | string
    visibilty?: EnumVisibilityFilter<"Blog"> | $Enums.Visibility
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    blogRequests?: BlogRequestListRelationFilter
    likes?: LikeListRelationFilter
    notifications?: NotificationListRelationFilter
    allowedUsers?: UserListRelationFilter
  }

  export type BlogOrderByWithRelationInput = {
    id?: SortOrder
    authorId?: SortOrder
    content?: SortOrder
    title?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updateAt?: SortOrder
    visibilty?: SortOrder
    author?: UserOrderByWithRelationInput
    blogRequests?: BlogRequestOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    allowedUsers?: UserOrderByRelationAggregateInput
  }

  export type BlogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BlogWhereInput | BlogWhereInput[]
    OR?: BlogWhereInput[]
    NOT?: BlogWhereInput | BlogWhereInput[]
    authorId?: StringFilter<"Blog"> | string
    content?: StringFilter<"Blog"> | string
    title?: StringFilter<"Blog"> | string
    thumbnail?: StringNullableFilter<"Blog"> | string | null
    createdAt?: DateTimeFilter<"Blog"> | Date | string
    updateAt?: DateTimeFilter<"Blog"> | Date | string
    visibilty?: EnumVisibilityFilter<"Blog"> | $Enums.Visibility
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    blogRequests?: BlogRequestListRelationFilter
    likes?: LikeListRelationFilter
    notifications?: NotificationListRelationFilter
    allowedUsers?: UserListRelationFilter
  }, "id">

  export type BlogOrderByWithAggregationInput = {
    id?: SortOrder
    authorId?: SortOrder
    content?: SortOrder
    title?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updateAt?: SortOrder
    visibilty?: SortOrder
    _count?: BlogCountOrderByAggregateInput
    _max?: BlogMaxOrderByAggregateInput
    _min?: BlogMinOrderByAggregateInput
  }

  export type BlogScalarWhereWithAggregatesInput = {
    AND?: BlogScalarWhereWithAggregatesInput | BlogScalarWhereWithAggregatesInput[]
    OR?: BlogScalarWhereWithAggregatesInput[]
    NOT?: BlogScalarWhereWithAggregatesInput | BlogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Blog"> | string
    authorId?: StringWithAggregatesFilter<"Blog"> | string
    content?: StringWithAggregatesFilter<"Blog"> | string
    title?: StringWithAggregatesFilter<"Blog"> | string
    thumbnail?: StringNullableWithAggregatesFilter<"Blog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Blog"> | Date | string
    updateAt?: DateTimeWithAggregatesFilter<"Blog"> | Date | string
    visibilty?: EnumVisibilityWithAggregatesFilter<"Blog"> | $Enums.Visibility
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    senderId?: StringFilter<"Notification"> | string
    receiverId?: StringFilter<"Notification"> | string
    snippetId?: StringNullableFilter<"Notification"> | string | null
    blogId?: StringNullableFilter<"Notification"> | string | null
    status?: EnumRequestStatusFilter<"Notification"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    isRead?: BoolFilter<"Notification"> | boolean
    type?: StringNullableFilter<"Notification"> | string | null
    codebuddyId?: StringNullableFilter<"Notification"> | string | null
    blog?: XOR<BlogNullableScalarRelationFilter, BlogWhereInput> | null
    codeBuddyRequest?: XOR<CodeBuddyRequestNullableScalarRelationFilter, CodeBuddyRequestWhereInput> | null
    receiver?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippet?: XOR<SnippetNullableScalarRelationFilter, SnippetWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    snippetId?: SortOrderInput | SortOrder
    blogId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    isRead?: SortOrder
    type?: SortOrderInput | SortOrder
    codebuddyId?: SortOrderInput | SortOrder
    blog?: BlogOrderByWithRelationInput
    codeBuddyRequest?: CodeBuddyRequestOrderByWithRelationInput
    receiver?: UserOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
    snippet?: SnippetOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    senderId?: StringFilter<"Notification"> | string
    receiverId?: StringFilter<"Notification"> | string
    snippetId?: StringNullableFilter<"Notification"> | string | null
    blogId?: StringNullableFilter<"Notification"> | string | null
    status?: EnumRequestStatusFilter<"Notification"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    isRead?: BoolFilter<"Notification"> | boolean
    type?: StringNullableFilter<"Notification"> | string | null
    codebuddyId?: StringNullableFilter<"Notification"> | string | null
    blog?: XOR<BlogNullableScalarRelationFilter, BlogWhereInput> | null
    codeBuddyRequest?: XOR<CodeBuddyRequestNullableScalarRelationFilter, CodeBuddyRequestWhereInput> | null
    receiver?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    snippet?: XOR<SnippetNullableScalarRelationFilter, SnippetWhereInput> | null
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    snippetId?: SortOrderInput | SortOrder
    blogId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    isRead?: SortOrder
    type?: SortOrderInput | SortOrder
    codebuddyId?: SortOrderInput | SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    senderId?: StringWithAggregatesFilter<"Notification"> | string
    receiverId?: StringWithAggregatesFilter<"Notification"> | string
    snippetId?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    blogId?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    status?: EnumRequestStatusWithAggregatesFilter<"Notification"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    type?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    codebuddyId?: StringNullableWithAggregatesFilter<"Notification"> | string | null
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    recipientId?: StringFilter<"Message"> | string
    timestamp?: DateTimeFilter<"Message"> | Date | string
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    timestamp?: SortOrder
    recipient?: UserOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    content?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    recipientId?: StringFilter<"Message"> | string
    timestamp?: DateTimeFilter<"Message"> | Date | string
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    timestamp?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    content?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    recipientId?: StringWithAggregatesFilter<"Message"> | string
    timestamp?: DateTimeWithAggregatesFilter<"Message"> | Date | string
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CodeBuddyRequestCreateInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    reciever: UserCreateNestedOneWithoutReceivedCodeBuddyRequestsInput
    requester: UserCreateNestedOneWithoutCodeBuddyRequestsInput
    notification?: NotificationCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestUncheckedCreateInput = {
    id?: string
    requesterId: string
    receiverId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    notification?: NotificationUncheckedCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reciever?: UserUpdateOneRequiredWithoutReceivedCodeBuddyRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutCodeBuddyRequestsNestedInput
    notification?: NotificationUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: NotificationUncheckedUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestCreateManyInput = {
    id?: string
    requesterId: string
    receiverId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
  }

  export type CodeBuddyRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CodeBuddyRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type techStackCreateInput = {
    category?: string | null
    name?: string | null
    logo?: string | null
  }

  export type techStackUncheckedCreateInput = {
    category?: string | null
    name?: string | null
    id?: number
    logo?: string | null
  }

  export type techStackUpdateInput = {
    category?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type techStackUncheckedUpdateInput = {
    category?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type techStackCreateManyInput = {
    category?: string | null
    name?: string | null
    id?: number
    logo?: string | null
  }

  export type techStackUpdateManyMutationInput = {
    category?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type techStackUncheckedUpdateManyInput = {
    category?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PortfolioCreateInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutPortfolioInput
    links?: SocialLinkCreateNestedManyWithoutPortfolioInput
  }

  export type PortfolioUncheckedCreateInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    userid: string
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkUncheckedCreateNestedManyWithoutPortfolioInput
  }

  export type PortfolioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutPortfolioNestedInput
    links?: SocialLinkUpdateManyWithoutPortfolioNestedInput
  }

  export type PortfolioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: StringFieldUpdateOperationsInput | string
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkUncheckedUpdateManyWithoutPortfolioNestedInput
  }

  export type PortfolioCreateManyInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    userid: string
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PortfolioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PortfolioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: StringFieldUpdateOperationsInput | string
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SocialLinkCreateInput = {
    id?: string
    platform: string
    url: string
    logo?: string | null
    portfolio: PortfolioCreateNestedOneWithoutLinksInput
  }

  export type SocialLinkUncheckedCreateInput = {
    id?: string
    platform: string
    url: string
    portfolioId: string
    logo?: string | null
  }

  export type SocialLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    portfolio?: PortfolioUpdateOneRequiredWithoutLinksNestedInput
  }

  export type SocialLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    portfolioId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialLinkCreateManyInput = {
    id?: string
    platform: string
    url: string
    portfolioId: string
    logo?: string | null
  }

  export type SocialLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    portfolioId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PasswordResetTokenCreateInput = {
    id?: string
    token: string
    email: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type PasswordResetTokenUncheckedCreateInput = {
    id?: string
    token: string
    email: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type PasswordResetTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenCreateManyInput = {
    id?: string
    token: string
    email: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type PasswordResetTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogRequestCreateInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    blog: BlogCreateNestedOneWithoutBlogRequestsInput
    requester: UserCreateNestedOneWithoutSendBlogRequestInput
  }

  export type BlogRequestUncheckedCreateInput = {
    id?: string
    blogId: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type BlogRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blog?: BlogUpdateOneRequiredWithoutBlogRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutSendBlogRequestNestedInput
  }

  export type BlogRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogRequestCreateManyInput = {
    id?: string
    blogId: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type BlogRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetRequestCreateInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    requester: UserCreateNestedOneWithoutSendRequestsInput
    snippet: SnippetCreateNestedOneWithoutSnippetRequestsInput
  }

  export type SnippetRequestUncheckedCreateInput = {
    id?: string
    snippetId: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type SnippetRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requester?: UserUpdateOneRequiredWithoutSendRequestsNestedInput
    snippet?: SnippetUpdateOneRequiredWithoutSnippetRequestsNestedInput
  }

  export type SnippetRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    snippetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetRequestCreateManyInput = {
    id?: string
    snippetId: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type SnippetRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    snippetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetCreateInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationCreateNestedManyWithoutSnippetInput
    author: UserCreateNestedOneWithoutSnippetCollectionInput
    snippetRequests?: SnippetRequestCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetUncheckedCreateInput = {
    id?: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationUncheckedCreateNestedManyWithoutSnippetInput
    snippetRequests?: SnippetRequestUncheckedCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUpdateManyWithoutSnippetNestedInput
    author?: UserUpdateOneRequiredWithoutSnippetCollectionNestedInput
    snippetRequests?: SnippetRequestUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUncheckedUpdateManyWithoutSnippetNestedInput
    snippetRequests?: SnippetRequestUncheckedUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetCreateManyInput = {
    id?: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
  }

  export type SnippetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SnippetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LikeCreateInput = {
    id?: string
    createdAt?: Date | string
    blog: BlogCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateInput = {
    id?: string
    userId: string
    blogId: string
    createdAt?: Date | string
  }

  export type LikeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blog?: BlogUpdateOneRequiredWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeCreateManyInput = {
    id?: string
    userId: string
    blogId: string
    createdAt?: Date | string
  }

  export type LikeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogCreateInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    author: UserCreateNestedOneWithoutBlogInput
    blogRequests?: BlogRequestCreateNestedManyWithoutBlogInput
    likes?: LikeCreateNestedManyWithoutBlogInput
    notifications?: NotificationCreateNestedManyWithoutBlogInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUncheckedCreateInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestUncheckedCreateNestedManyWithoutBlogInput
    likes?: LikeUncheckedCreateNestedManyWithoutBlogInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutBlogInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    author?: UserUpdateOneRequiredWithoutBlogNestedInput
    blogRequests?: BlogRequestUpdateManyWithoutBlogNestedInput
    likes?: LikeUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUncheckedUpdateManyWithoutBlogNestedInput
    likes?: LikeUncheckedUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogCreateManyInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
  }

  export type BlogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
  }

  export type BlogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
  }

  export type NotificationCreateInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    blog?: BlogCreateNestedOneWithoutNotificationsInput
    codeBuddyRequest?: CodeBuddyRequestCreateNestedOneWithoutNotificationInput
    receiver: UserCreateNestedOneWithoutReceivedNotifcationsInput
    sender: UserCreateNestedOneWithoutSentNotificationInput
    snippet?: SnippetCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateOneWithoutNotificationsNestedInput
    codeBuddyRequest?: CodeBuddyRequestUpdateOneWithoutNotificationNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput
    sender?: UserUpdateOneRequiredWithoutSentNotificationNestedInput
    snippet?: SnippetUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateManyInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessageCreateInput = {
    id?: string
    content: string
    timestamp?: Date | string
    recipient: UserCreateNestedOneWithoutReceivedMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    content: string
    senderId: string
    recipientId: string
    timestamp?: Date | string
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateManyInput = {
    id?: string
    content: string
    senderId: string
    recipientId: string
    timestamp?: Date | string
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type BlogListRelationFilter = {
    every?: BlogWhereInput
    some?: BlogWhereInput
    none?: BlogWhereInput
  }

  export type BlogRequestListRelationFilter = {
    every?: BlogRequestWhereInput
    some?: BlogRequestWhereInput
    none?: BlogRequestWhereInput
  }

  export type CodeBuddyRequestListRelationFilter = {
    every?: CodeBuddyRequestWhereInput
    some?: CodeBuddyRequestWhereInput
    none?: CodeBuddyRequestWhereInput
  }

  export type LikeListRelationFilter = {
    every?: LikeWhereInput
    some?: LikeWhereInput
    none?: LikeWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type PortfolioNullableScalarRelationFilter = {
    is?: PortfolioWhereInput | null
    isNot?: PortfolioWhereInput | null
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type SnippetListRelationFilter = {
    every?: SnippetWhereInput
    some?: SnippetWhereInput
    none?: SnippetWhereInput
  }

  export type SnippetRequestListRelationFilter = {
    every?: SnippetRequestWhereInput
    some?: SnippetRequestWhereInput
    none?: SnippetRequestWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BlogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BlogRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CodeBuddyRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LikeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SnippetOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SnippetRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    codeBuddyId?: SortOrder
    matchingPreferences?: SortOrder
    createdAt?: SortOrder
    portfolioId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    codeBuddyId?: SortOrder
    createdAt?: SortOrder
    portfolioId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    codeBuddyId?: SortOrder
    createdAt?: SortOrder
    portfolioId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type CodeBuddyRequestRequesterIdReceiverIdCompoundUniqueInput = {
    requesterId: string
    receiverId: string
  }

  export type CodeBuddyRequestCountOrderByAggregateInput = {
    id?: SortOrder
    requesterId?: SortOrder
    receiverId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type CodeBuddyRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    requesterId?: SortOrder
    receiverId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type CodeBuddyRequestMinOrderByAggregateInput = {
    id?: SortOrder
    requesterId?: SortOrder
    receiverId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type EnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type techStackCountOrderByAggregateInput = {
    category?: SortOrder
    name?: SortOrder
    id?: SortOrder
    logo?: SortOrder
  }

  export type techStackAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type techStackMaxOrderByAggregateInput = {
    category?: SortOrder
    name?: SortOrder
    id?: SortOrder
    logo?: SortOrder
  }

  export type techStackMinOrderByAggregateInput = {
    category?: SortOrder
    name?: SortOrder
    id?: SortOrder
    logo?: SortOrder
  }

  export type techStackSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type SocialLinkListRelationFilter = {
    every?: SocialLinkWhereInput
    some?: SocialLinkWhereInput
    none?: SocialLinkWhereInput
  }

  export type SocialLinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PortfolioCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    profile?: SortOrder
    projects?: SortOrder
    name?: SortOrder
    stackid?: SortOrder
    userid?: SortOrder
    achievements?: SortOrder
    interests?: SortOrder
    availability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isPublished?: SortOrder
    experiences?: SortOrder
    education?: SortOrder
    location?: SortOrder
    passionate?: SortOrder
    yearofexperience?: SortOrder
    certifications?: SortOrder
    techstack?: SortOrder
  }

  export type PortfolioMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    profile?: SortOrder
    name?: SortOrder
    stackid?: SortOrder
    userid?: SortOrder
    achievements?: SortOrder
    interests?: SortOrder
    availability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isPublished?: SortOrder
    education?: SortOrder
    location?: SortOrder
    passionate?: SortOrder
    yearofexperience?: SortOrder
  }

  export type PortfolioMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    profile?: SortOrder
    name?: SortOrder
    stackid?: SortOrder
    userid?: SortOrder
    achievements?: SortOrder
    interests?: SortOrder
    availability?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isPublished?: SortOrder
    education?: SortOrder
    location?: SortOrder
    passionate?: SortOrder
    yearofexperience?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type PortfolioScalarRelationFilter = {
    is?: PortfolioWhereInput
    isNot?: PortfolioWhereInput
  }

  export type SocialLinkCountOrderByAggregateInput = {
    id?: SortOrder
    platform?: SortOrder
    url?: SortOrder
    portfolioId?: SortOrder
    logo?: SortOrder
  }

  export type SocialLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    platform?: SortOrder
    url?: SortOrder
    portfolioId?: SortOrder
    logo?: SortOrder
  }

  export type SocialLinkMinOrderByAggregateInput = {
    id?: SortOrder
    platform?: SortOrder
    url?: SortOrder
    portfolioId?: SortOrder
    logo?: SortOrder
  }

  export type PasswordResetTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    email?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    email?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    email?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type BlogScalarRelationFilter = {
    is?: BlogWhereInput
    isNot?: BlogWhereInput
  }

  export type BlogRequestCountOrderByAggregateInput = {
    id?: SortOrder
    blogId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type BlogRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    blogId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type BlogRequestMinOrderByAggregateInput = {
    id?: SortOrder
    blogId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SnippetScalarRelationFilter = {
    is?: SnippetWhereInput
    isNot?: SnippetWhereInput
  }

  export type SnippetRequestCountOrderByAggregateInput = {
    id?: SortOrder
    snippetId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SnippetRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    snippetId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SnippetRequestMinOrderByAggregateInput = {
    id?: SortOrder
    snippetId?: SortOrder
    requesterId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumVisibilityFilter<$PrismaModel = never> = {
    equals?: $Enums.Visibility | EnumVisibilityFieldRefInput<$PrismaModel>
    in?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    not?: NestedEnumVisibilityFilter<$PrismaModel> | $Enums.Visibility
  }

  export type SnippetCountOrderByAggregateInput = {
    id?: SortOrder
    authorid?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visibility?: SortOrder
    framework?: SortOrder
  }

  export type SnippetMaxOrderByAggregateInput = {
    id?: SortOrder
    authorid?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visibility?: SortOrder
    framework?: SortOrder
  }

  export type SnippetMinOrderByAggregateInput = {
    id?: SortOrder
    authorid?: SortOrder
    title?: SortOrder
    description?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visibility?: SortOrder
    framework?: SortOrder
  }

  export type EnumVisibilityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Visibility | EnumVisibilityFieldRefInput<$PrismaModel>
    in?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    not?: NestedEnumVisibilityWithAggregatesFilter<$PrismaModel> | $Enums.Visibility
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVisibilityFilter<$PrismaModel>
    _max?: NestedEnumVisibilityFilter<$PrismaModel>
  }

  export type LikeUserIdBlogIdCompoundUniqueInput = {
    userId: string
    blogId: string
  }

  export type LikeCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    blogId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    blogId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    blogId?: SortOrder
    createdAt?: SortOrder
  }

  export type BlogCountOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    content?: SortOrder
    title?: SortOrder
    thumbnail?: SortOrder
    createdAt?: SortOrder
    updateAt?: SortOrder
    visibilty?: SortOrder
  }

  export type BlogMaxOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    content?: SortOrder
    title?: SortOrder
    thumbnail?: SortOrder
    createdAt?: SortOrder
    updateAt?: SortOrder
    visibilty?: SortOrder
  }

  export type BlogMinOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    content?: SortOrder
    title?: SortOrder
    thumbnail?: SortOrder
    createdAt?: SortOrder
    updateAt?: SortOrder
    visibilty?: SortOrder
  }

  export type BlogNullableScalarRelationFilter = {
    is?: BlogWhereInput | null
    isNot?: BlogWhereInput | null
  }

  export type CodeBuddyRequestNullableScalarRelationFilter = {
    is?: CodeBuddyRequestWhereInput | null
    isNot?: CodeBuddyRequestWhereInput | null
  }

  export type SnippetNullableScalarRelationFilter = {
    is?: SnippetWhereInput | null
    isNot?: SnippetWhereInput | null
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    snippetId?: SortOrder
    blogId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    codebuddyId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    snippetId?: SortOrder
    blogId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    codebuddyId?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    snippetId?: SortOrder
    blogId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    isRead?: SortOrder
    type?: SortOrder
    codebuddyId?: SortOrder
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    timestamp?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    timestamp?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    senderId?: SortOrder
    recipientId?: SortOrder
    timestamp?: SortOrder
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type BlogCreateNestedManyWithoutAuthorInput = {
    create?: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput> | BlogCreateWithoutAuthorInput[] | BlogUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAuthorInput | BlogCreateOrConnectWithoutAuthorInput[]
    createMany?: BlogCreateManyAuthorInputEnvelope
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
  }

  export type BlogRequestCreateNestedManyWithoutRequesterInput = {
    create?: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput> | BlogRequestCreateWithoutRequesterInput[] | BlogRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutRequesterInput | BlogRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: BlogRequestCreateManyRequesterInputEnvelope
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
  }

  export type CodeBuddyRequestCreateNestedManyWithoutRecieverInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput> | CodeBuddyRequestCreateWithoutRecieverInput[] | CodeBuddyRequestUncheckedCreateWithoutRecieverInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRecieverInput | CodeBuddyRequestCreateOrConnectWithoutRecieverInput[]
    createMany?: CodeBuddyRequestCreateManyRecieverInputEnvelope
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
  }

  export type CodeBuddyRequestCreateNestedManyWithoutRequesterInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput> | CodeBuddyRequestCreateWithoutRequesterInput[] | CodeBuddyRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRequesterInput | CodeBuddyRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: CodeBuddyRequestCreateManyRequesterInputEnvelope
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
  }

  export type LikeCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutRecipientInput = {
    create?: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput> | MessageCreateWithoutRecipientInput[] | MessageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutRecipientInput | MessageCreateOrConnectWithoutRecipientInput[]
    createMany?: MessageCreateManyRecipientInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutReceiverInput = {
    create?: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput> | NotificationCreateWithoutReceiverInput[] | NotificationUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutReceiverInput | NotificationCreateOrConnectWithoutReceiverInput[]
    createMany?: NotificationCreateManyReceiverInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PortfolioCreateNestedOneWithoutUserInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput
    connect?: PortfolioWhereUniqueInput
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type SnippetCreateNestedManyWithoutAuthorInput = {
    create?: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput> | SnippetCreateWithoutAuthorInput[] | SnippetUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAuthorInput | SnippetCreateOrConnectWithoutAuthorInput[]
    createMany?: SnippetCreateManyAuthorInputEnvelope
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
  }

  export type SnippetRequestCreateNestedManyWithoutRequesterInput = {
    create?: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput> | SnippetRequestCreateWithoutRequesterInput[] | SnippetRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutRequesterInput | SnippetRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: SnippetRequestCreateManyRequesterInputEnvelope
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutBuddyOfInput = {
    create?: XOR<UserCreateWithoutBuddyOfInput, UserUncheckedCreateWithoutBuddyOfInput>
    connectOrCreate?: UserCreateOrConnectWithoutBuddyOfInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCodeBuddyInput = {
    create?: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput> | UserCreateWithoutCodeBuddyInput[] | UserUncheckedCreateWithoutCodeBuddyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyInput | UserCreateOrConnectWithoutCodeBuddyInput[]
    createMany?: UserCreateManyCodeBuddyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BlogCreateNestedManyWithoutAllowedUsersInput = {
    create?: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput> | BlogCreateWithoutAllowedUsersInput[] | BlogUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAllowedUsersInput | BlogCreateOrConnectWithoutAllowedUsersInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
  }

  export type SnippetCreateNestedManyWithoutAllowedUsersInput = {
    create?: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput> | SnippetCreateWithoutAllowedUsersInput[] | SnippetUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAllowedUsersInput | SnippetCreateOrConnectWithoutAllowedUsersInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type BlogUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput> | BlogCreateWithoutAuthorInput[] | BlogUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAuthorInput | BlogCreateOrConnectWithoutAuthorInput[]
    createMany?: BlogCreateManyAuthorInputEnvelope
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
  }

  export type BlogRequestUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput> | BlogRequestCreateWithoutRequesterInput[] | BlogRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutRequesterInput | BlogRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: BlogRequestCreateManyRequesterInputEnvelope
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
  }

  export type CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput> | CodeBuddyRequestCreateWithoutRecieverInput[] | CodeBuddyRequestUncheckedCreateWithoutRecieverInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRecieverInput | CodeBuddyRequestCreateOrConnectWithoutRecieverInput[]
    createMany?: CodeBuddyRequestCreateManyRecieverInputEnvelope
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
  }

  export type CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput> | CodeBuddyRequestCreateWithoutRequesterInput[] | CodeBuddyRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRequesterInput | CodeBuddyRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: CodeBuddyRequestCreateManyRequesterInputEnvelope
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput> | MessageCreateWithoutRecipientInput[] | MessageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutRecipientInput | MessageCreateOrConnectWithoutRecipientInput[]
    createMany?: MessageCreateManyRecipientInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutReceiverInput = {
    create?: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput> | NotificationCreateWithoutReceiverInput[] | NotificationUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutReceiverInput | NotificationCreateOrConnectWithoutReceiverInput[]
    createMany?: NotificationCreateManyReceiverInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PortfolioUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput
    connect?: PortfolioWhereUniqueInput
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type SnippetUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput> | SnippetCreateWithoutAuthorInput[] | SnippetUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAuthorInput | SnippetCreateOrConnectWithoutAuthorInput[]
    createMany?: SnippetCreateManyAuthorInputEnvelope
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
  }

  export type SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput> | SnippetRequestCreateWithoutRequesterInput[] | SnippetRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutRequesterInput | SnippetRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: SnippetRequestCreateManyRequesterInputEnvelope
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCodeBuddyInput = {
    create?: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput> | UserCreateWithoutCodeBuddyInput[] | UserUncheckedCreateWithoutCodeBuddyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyInput | UserCreateOrConnectWithoutCodeBuddyInput[]
    createMany?: UserCreateManyCodeBuddyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BlogUncheckedCreateNestedManyWithoutAllowedUsersInput = {
    create?: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput> | BlogCreateWithoutAllowedUsersInput[] | BlogUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAllowedUsersInput | BlogCreateOrConnectWithoutAllowedUsersInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
  }

  export type SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput = {
    create?: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput> | SnippetCreateWithoutAllowedUsersInput[] | SnippetUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAllowedUsersInput | SnippetCreateOrConnectWithoutAllowedUsersInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type BlogUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput> | BlogCreateWithoutAuthorInput[] | BlogUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAuthorInput | BlogCreateOrConnectWithoutAuthorInput[]
    upsert?: BlogUpsertWithWhereUniqueWithoutAuthorInput | BlogUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: BlogCreateManyAuthorInputEnvelope
    set?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    disconnect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    delete?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    update?: BlogUpdateWithWhereUniqueWithoutAuthorInput | BlogUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: BlogUpdateManyWithWhereWithoutAuthorInput | BlogUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: BlogScalarWhereInput | BlogScalarWhereInput[]
  }

  export type BlogRequestUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput> | BlogRequestCreateWithoutRequesterInput[] | BlogRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutRequesterInput | BlogRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: BlogRequestUpsertWithWhereUniqueWithoutRequesterInput | BlogRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: BlogRequestCreateManyRequesterInputEnvelope
    set?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    disconnect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    delete?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    update?: BlogRequestUpdateWithWhereUniqueWithoutRequesterInput | BlogRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: BlogRequestUpdateManyWithWhereWithoutRequesterInput | BlogRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
  }

  export type CodeBuddyRequestUpdateManyWithoutRecieverNestedInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput> | CodeBuddyRequestCreateWithoutRecieverInput[] | CodeBuddyRequestUncheckedCreateWithoutRecieverInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRecieverInput | CodeBuddyRequestCreateOrConnectWithoutRecieverInput[]
    upsert?: CodeBuddyRequestUpsertWithWhereUniqueWithoutRecieverInput | CodeBuddyRequestUpsertWithWhereUniqueWithoutRecieverInput[]
    createMany?: CodeBuddyRequestCreateManyRecieverInputEnvelope
    set?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    disconnect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    delete?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    update?: CodeBuddyRequestUpdateWithWhereUniqueWithoutRecieverInput | CodeBuddyRequestUpdateWithWhereUniqueWithoutRecieverInput[]
    updateMany?: CodeBuddyRequestUpdateManyWithWhereWithoutRecieverInput | CodeBuddyRequestUpdateManyWithWhereWithoutRecieverInput[]
    deleteMany?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
  }

  export type CodeBuddyRequestUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput> | CodeBuddyRequestCreateWithoutRequesterInput[] | CodeBuddyRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRequesterInput | CodeBuddyRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: CodeBuddyRequestUpsertWithWhereUniqueWithoutRequesterInput | CodeBuddyRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: CodeBuddyRequestCreateManyRequesterInputEnvelope
    set?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    disconnect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    delete?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    update?: CodeBuddyRequestUpdateWithWhereUniqueWithoutRequesterInput | CodeBuddyRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: CodeBuddyRequestUpdateManyWithWhereWithoutRequesterInput | CodeBuddyRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
  }

  export type LikeUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput> | MessageCreateWithoutRecipientInput[] | MessageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutRecipientInput | MessageCreateOrConnectWithoutRecipientInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutRecipientInput | MessageUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: MessageCreateManyRecipientInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutRecipientInput | MessageUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutRecipientInput | MessageUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput> | NotificationCreateWithoutReceiverInput[] | NotificationUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutReceiverInput | NotificationCreateOrConnectWithoutReceiverInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutReceiverInput | NotificationUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: NotificationCreateManyReceiverInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutReceiverInput | NotificationUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutReceiverInput | NotificationUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PortfolioUpdateOneWithoutUserNestedInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput
    upsert?: PortfolioUpsertWithoutUserInput
    disconnect?: PortfolioWhereInput | boolean
    delete?: PortfolioWhereInput | boolean
    connect?: PortfolioWhereUniqueInput
    update?: XOR<XOR<PortfolioUpdateToOneWithWhereWithoutUserInput, PortfolioUpdateWithoutUserInput>, PortfolioUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type SnippetUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput> | SnippetCreateWithoutAuthorInput[] | SnippetUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAuthorInput | SnippetCreateOrConnectWithoutAuthorInput[]
    upsert?: SnippetUpsertWithWhereUniqueWithoutAuthorInput | SnippetUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: SnippetCreateManyAuthorInputEnvelope
    set?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    disconnect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    delete?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    update?: SnippetUpdateWithWhereUniqueWithoutAuthorInput | SnippetUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: SnippetUpdateManyWithWhereWithoutAuthorInput | SnippetUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
  }

  export type SnippetRequestUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput> | SnippetRequestCreateWithoutRequesterInput[] | SnippetRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutRequesterInput | SnippetRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: SnippetRequestUpsertWithWhereUniqueWithoutRequesterInput | SnippetRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: SnippetRequestCreateManyRequesterInputEnvelope
    set?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    disconnect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    delete?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    update?: SnippetRequestUpdateWithWhereUniqueWithoutRequesterInput | SnippetRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: SnippetRequestUpdateManyWithWhereWithoutRequesterInput | SnippetRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
  }

  export type UserUpdateOneWithoutBuddyOfNestedInput = {
    create?: XOR<UserCreateWithoutBuddyOfInput, UserUncheckedCreateWithoutBuddyOfInput>
    connectOrCreate?: UserCreateOrConnectWithoutBuddyOfInput
    upsert?: UserUpsertWithoutBuddyOfInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBuddyOfInput, UserUpdateWithoutBuddyOfInput>, UserUncheckedUpdateWithoutBuddyOfInput>
  }

  export type UserUpdateManyWithoutCodeBuddyNestedInput = {
    create?: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput> | UserCreateWithoutCodeBuddyInput[] | UserUncheckedCreateWithoutCodeBuddyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyInput | UserCreateOrConnectWithoutCodeBuddyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCodeBuddyInput | UserUpsertWithWhereUniqueWithoutCodeBuddyInput[]
    createMany?: UserCreateManyCodeBuddyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCodeBuddyInput | UserUpdateWithWhereUniqueWithoutCodeBuddyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCodeBuddyInput | UserUpdateManyWithWhereWithoutCodeBuddyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogUpdateManyWithoutAllowedUsersNestedInput = {
    create?: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput> | BlogCreateWithoutAllowedUsersInput[] | BlogUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAllowedUsersInput | BlogCreateOrConnectWithoutAllowedUsersInput[]
    upsert?: BlogUpsertWithWhereUniqueWithoutAllowedUsersInput | BlogUpsertWithWhereUniqueWithoutAllowedUsersInput[]
    set?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    disconnect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    delete?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    update?: BlogUpdateWithWhereUniqueWithoutAllowedUsersInput | BlogUpdateWithWhereUniqueWithoutAllowedUsersInput[]
    updateMany?: BlogUpdateManyWithWhereWithoutAllowedUsersInput | BlogUpdateManyWithWhereWithoutAllowedUsersInput[]
    deleteMany?: BlogScalarWhereInput | BlogScalarWhereInput[]
  }

  export type SnippetUpdateManyWithoutAllowedUsersNestedInput = {
    create?: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput> | SnippetCreateWithoutAllowedUsersInput[] | SnippetUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAllowedUsersInput | SnippetCreateOrConnectWithoutAllowedUsersInput[]
    upsert?: SnippetUpsertWithWhereUniqueWithoutAllowedUsersInput | SnippetUpsertWithWhereUniqueWithoutAllowedUsersInput[]
    set?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    disconnect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    delete?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    update?: SnippetUpdateWithWhereUniqueWithoutAllowedUsersInput | SnippetUpdateWithWhereUniqueWithoutAllowedUsersInput[]
    updateMany?: SnippetUpdateManyWithWhereWithoutAllowedUsersInput | SnippetUpdateManyWithWhereWithoutAllowedUsersInput[]
    deleteMany?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type BlogUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput> | BlogCreateWithoutAuthorInput[] | BlogUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAuthorInput | BlogCreateOrConnectWithoutAuthorInput[]
    upsert?: BlogUpsertWithWhereUniqueWithoutAuthorInput | BlogUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: BlogCreateManyAuthorInputEnvelope
    set?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    disconnect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    delete?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    update?: BlogUpdateWithWhereUniqueWithoutAuthorInput | BlogUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: BlogUpdateManyWithWhereWithoutAuthorInput | BlogUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: BlogScalarWhereInput | BlogScalarWhereInput[]
  }

  export type BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput> | BlogRequestCreateWithoutRequesterInput[] | BlogRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutRequesterInput | BlogRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: BlogRequestUpsertWithWhereUniqueWithoutRequesterInput | BlogRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: BlogRequestCreateManyRequesterInputEnvelope
    set?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    disconnect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    delete?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    update?: BlogRequestUpdateWithWhereUniqueWithoutRequesterInput | BlogRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: BlogRequestUpdateManyWithWhereWithoutRequesterInput | BlogRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
  }

  export type CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput> | CodeBuddyRequestCreateWithoutRecieverInput[] | CodeBuddyRequestUncheckedCreateWithoutRecieverInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRecieverInput | CodeBuddyRequestCreateOrConnectWithoutRecieverInput[]
    upsert?: CodeBuddyRequestUpsertWithWhereUniqueWithoutRecieverInput | CodeBuddyRequestUpsertWithWhereUniqueWithoutRecieverInput[]
    createMany?: CodeBuddyRequestCreateManyRecieverInputEnvelope
    set?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    disconnect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    delete?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    update?: CodeBuddyRequestUpdateWithWhereUniqueWithoutRecieverInput | CodeBuddyRequestUpdateWithWhereUniqueWithoutRecieverInput[]
    updateMany?: CodeBuddyRequestUpdateManyWithWhereWithoutRecieverInput | CodeBuddyRequestUpdateManyWithWhereWithoutRecieverInput[]
    deleteMany?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
  }

  export type CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput> | CodeBuddyRequestCreateWithoutRequesterInput[] | CodeBuddyRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutRequesterInput | CodeBuddyRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: CodeBuddyRequestUpsertWithWhereUniqueWithoutRequesterInput | CodeBuddyRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: CodeBuddyRequestCreateManyRequesterInputEnvelope
    set?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    disconnect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    delete?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    connect?: CodeBuddyRequestWhereUniqueInput | CodeBuddyRequestWhereUniqueInput[]
    update?: CodeBuddyRequestUpdateWithWhereUniqueWithoutRequesterInput | CodeBuddyRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: CodeBuddyRequestUpdateManyWithWhereWithoutRequesterInput | CodeBuddyRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput> | MessageCreateWithoutRecipientInput[] | MessageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutRecipientInput | MessageCreateOrConnectWithoutRecipientInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutRecipientInput | MessageUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: MessageCreateManyRecipientInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutRecipientInput | MessageUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutRecipientInput | MessageUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput> | NotificationCreateWithoutReceiverInput[] | NotificationUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutReceiverInput | NotificationCreateOrConnectWithoutReceiverInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutReceiverInput | NotificationUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: NotificationCreateManyReceiverInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutReceiverInput | NotificationUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutReceiverInput | NotificationUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PortfolioUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput
    upsert?: PortfolioUpsertWithoutUserInput
    disconnect?: PortfolioWhereInput | boolean
    delete?: PortfolioWhereInput | boolean
    connect?: PortfolioWhereUniqueInput
    update?: XOR<XOR<PortfolioUpdateToOneWithWhereWithoutUserInput, PortfolioUpdateWithoutUserInput>, PortfolioUncheckedUpdateWithoutUserInput>
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type SnippetUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput> | SnippetCreateWithoutAuthorInput[] | SnippetUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAuthorInput | SnippetCreateOrConnectWithoutAuthorInput[]
    upsert?: SnippetUpsertWithWhereUniqueWithoutAuthorInput | SnippetUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: SnippetCreateManyAuthorInputEnvelope
    set?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    disconnect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    delete?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    update?: SnippetUpdateWithWhereUniqueWithoutAuthorInput | SnippetUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: SnippetUpdateManyWithWhereWithoutAuthorInput | SnippetUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
  }

  export type SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput> | SnippetRequestCreateWithoutRequesterInput[] | SnippetRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutRequesterInput | SnippetRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: SnippetRequestUpsertWithWhereUniqueWithoutRequesterInput | SnippetRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: SnippetRequestCreateManyRequesterInputEnvelope
    set?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    disconnect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    delete?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    update?: SnippetRequestUpdateWithWhereUniqueWithoutRequesterInput | SnippetRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: SnippetRequestUpdateManyWithWhereWithoutRequesterInput | SnippetRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCodeBuddyNestedInput = {
    create?: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput> | UserCreateWithoutCodeBuddyInput[] | UserUncheckedCreateWithoutCodeBuddyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyInput | UserCreateOrConnectWithoutCodeBuddyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCodeBuddyInput | UserUpsertWithWhereUniqueWithoutCodeBuddyInput[]
    createMany?: UserCreateManyCodeBuddyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCodeBuddyInput | UserUpdateWithWhereUniqueWithoutCodeBuddyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCodeBuddyInput | UserUpdateManyWithWhereWithoutCodeBuddyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput = {
    create?: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput> | BlogCreateWithoutAllowedUsersInput[] | BlogUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: BlogCreateOrConnectWithoutAllowedUsersInput | BlogCreateOrConnectWithoutAllowedUsersInput[]
    upsert?: BlogUpsertWithWhereUniqueWithoutAllowedUsersInput | BlogUpsertWithWhereUniqueWithoutAllowedUsersInput[]
    set?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    disconnect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    delete?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    connect?: BlogWhereUniqueInput | BlogWhereUniqueInput[]
    update?: BlogUpdateWithWhereUniqueWithoutAllowedUsersInput | BlogUpdateWithWhereUniqueWithoutAllowedUsersInput[]
    updateMany?: BlogUpdateManyWithWhereWithoutAllowedUsersInput | BlogUpdateManyWithWhereWithoutAllowedUsersInput[]
    deleteMany?: BlogScalarWhereInput | BlogScalarWhereInput[]
  }

  export type SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput = {
    create?: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput> | SnippetCreateWithoutAllowedUsersInput[] | SnippetUncheckedCreateWithoutAllowedUsersInput[]
    connectOrCreate?: SnippetCreateOrConnectWithoutAllowedUsersInput | SnippetCreateOrConnectWithoutAllowedUsersInput[]
    upsert?: SnippetUpsertWithWhereUniqueWithoutAllowedUsersInput | SnippetUpsertWithWhereUniqueWithoutAllowedUsersInput[]
    set?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    disconnect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    delete?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    connect?: SnippetWhereUniqueInput | SnippetWhereUniqueInput[]
    update?: SnippetUpdateWithWhereUniqueWithoutAllowedUsersInput | SnippetUpdateWithWhereUniqueWithoutAllowedUsersInput[]
    updateMany?: SnippetUpdateManyWithWhereWithoutAllowedUsersInput | SnippetUpdateManyWithWhereWithoutAllowedUsersInput[]
    deleteMany?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutReceivedCodeBuddyRequestsInput = {
    create?: XOR<UserCreateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedCreateWithoutReceivedCodeBuddyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedCodeBuddyRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCodeBuddyRequestsInput = {
    create?: XOR<UserCreateWithoutCodeBuddyRequestsInput, UserUncheckedCreateWithoutCodeBuddyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type NotificationCreateNestedManyWithoutCodeBuddyRequestInput = {
    create?: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput> | NotificationCreateWithoutCodeBuddyRequestInput[] | NotificationUncheckedCreateWithoutCodeBuddyRequestInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCodeBuddyRequestInput | NotificationCreateOrConnectWithoutCodeBuddyRequestInput[]
    createMany?: NotificationCreateManyCodeBuddyRequestInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutCodeBuddyRequestInput = {
    create?: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput> | NotificationCreateWithoutCodeBuddyRequestInput[] | NotificationUncheckedCreateWithoutCodeBuddyRequestInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCodeBuddyRequestInput | NotificationCreateOrConnectWithoutCodeBuddyRequestInput[]
    createMany?: NotificationCreateManyCodeBuddyRequestInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.RequestStatus
  }

  export type UserUpdateOneRequiredWithoutReceivedCodeBuddyRequestsNestedInput = {
    create?: XOR<UserCreateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedCreateWithoutReceivedCodeBuddyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedCodeBuddyRequestsInput
    upsert?: UserUpsertWithoutReceivedCodeBuddyRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedCodeBuddyRequestsInput, UserUpdateWithoutReceivedCodeBuddyRequestsInput>, UserUncheckedUpdateWithoutReceivedCodeBuddyRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutCodeBuddyRequestsNestedInput = {
    create?: XOR<UserCreateWithoutCodeBuddyRequestsInput, UserUncheckedCreateWithoutCodeBuddyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCodeBuddyRequestsInput
    upsert?: UserUpsertWithoutCodeBuddyRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCodeBuddyRequestsInput, UserUpdateWithoutCodeBuddyRequestsInput>, UserUncheckedUpdateWithoutCodeBuddyRequestsInput>
  }

  export type NotificationUpdateManyWithoutCodeBuddyRequestNestedInput = {
    create?: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput> | NotificationCreateWithoutCodeBuddyRequestInput[] | NotificationUncheckedCreateWithoutCodeBuddyRequestInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCodeBuddyRequestInput | NotificationCreateOrConnectWithoutCodeBuddyRequestInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutCodeBuddyRequestInput | NotificationUpsertWithWhereUniqueWithoutCodeBuddyRequestInput[]
    createMany?: NotificationCreateManyCodeBuddyRequestInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutCodeBuddyRequestInput | NotificationUpdateWithWhereUniqueWithoutCodeBuddyRequestInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutCodeBuddyRequestInput | NotificationUpdateManyWithWhereWithoutCodeBuddyRequestInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutCodeBuddyRequestNestedInput = {
    create?: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput> | NotificationCreateWithoutCodeBuddyRequestInput[] | NotificationUncheckedCreateWithoutCodeBuddyRequestInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCodeBuddyRequestInput | NotificationCreateOrConnectWithoutCodeBuddyRequestInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutCodeBuddyRequestInput | NotificationUpsertWithWhereUniqueWithoutCodeBuddyRequestInput[]
    createMany?: NotificationCreateManyCodeBuddyRequestInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutCodeBuddyRequestInput | NotificationUpdateWithWhereUniqueWithoutCodeBuddyRequestInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutCodeBuddyRequestInput | NotificationUpdateManyWithWhereWithoutCodeBuddyRequestInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserCreateNestedOneWithoutPortfolioInput = {
    create?: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    connectOrCreate?: UserCreateOrConnectWithoutPortfolioInput
    connect?: UserWhereUniqueInput
  }

  export type SocialLinkCreateNestedManyWithoutPortfolioInput = {
    create?: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput> | SocialLinkCreateWithoutPortfolioInput[] | SocialLinkUncheckedCreateWithoutPortfolioInput[]
    connectOrCreate?: SocialLinkCreateOrConnectWithoutPortfolioInput | SocialLinkCreateOrConnectWithoutPortfolioInput[]
    createMany?: SocialLinkCreateManyPortfolioInputEnvelope
    connect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
  }

  export type SocialLinkUncheckedCreateNestedManyWithoutPortfolioInput = {
    create?: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput> | SocialLinkCreateWithoutPortfolioInput[] | SocialLinkUncheckedCreateWithoutPortfolioInput[]
    connectOrCreate?: SocialLinkCreateOrConnectWithoutPortfolioInput | SocialLinkCreateOrConnectWithoutPortfolioInput[]
    createMany?: SocialLinkCreateManyPortfolioInputEnvelope
    connect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutPortfolioNestedInput = {
    create?: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    connectOrCreate?: UserCreateOrConnectWithoutPortfolioInput
    upsert?: UserUpsertWithoutPortfolioInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPortfolioInput, UserUpdateWithoutPortfolioInput>, UserUncheckedUpdateWithoutPortfolioInput>
  }

  export type SocialLinkUpdateManyWithoutPortfolioNestedInput = {
    create?: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput> | SocialLinkCreateWithoutPortfolioInput[] | SocialLinkUncheckedCreateWithoutPortfolioInput[]
    connectOrCreate?: SocialLinkCreateOrConnectWithoutPortfolioInput | SocialLinkCreateOrConnectWithoutPortfolioInput[]
    upsert?: SocialLinkUpsertWithWhereUniqueWithoutPortfolioInput | SocialLinkUpsertWithWhereUniqueWithoutPortfolioInput[]
    createMany?: SocialLinkCreateManyPortfolioInputEnvelope
    set?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    disconnect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    delete?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    connect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    update?: SocialLinkUpdateWithWhereUniqueWithoutPortfolioInput | SocialLinkUpdateWithWhereUniqueWithoutPortfolioInput[]
    updateMany?: SocialLinkUpdateManyWithWhereWithoutPortfolioInput | SocialLinkUpdateManyWithWhereWithoutPortfolioInput[]
    deleteMany?: SocialLinkScalarWhereInput | SocialLinkScalarWhereInput[]
  }

  export type SocialLinkUncheckedUpdateManyWithoutPortfolioNestedInput = {
    create?: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput> | SocialLinkCreateWithoutPortfolioInput[] | SocialLinkUncheckedCreateWithoutPortfolioInput[]
    connectOrCreate?: SocialLinkCreateOrConnectWithoutPortfolioInput | SocialLinkCreateOrConnectWithoutPortfolioInput[]
    upsert?: SocialLinkUpsertWithWhereUniqueWithoutPortfolioInput | SocialLinkUpsertWithWhereUniqueWithoutPortfolioInput[]
    createMany?: SocialLinkCreateManyPortfolioInputEnvelope
    set?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    disconnect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    delete?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    connect?: SocialLinkWhereUniqueInput | SocialLinkWhereUniqueInput[]
    update?: SocialLinkUpdateWithWhereUniqueWithoutPortfolioInput | SocialLinkUpdateWithWhereUniqueWithoutPortfolioInput[]
    updateMany?: SocialLinkUpdateManyWithWhereWithoutPortfolioInput | SocialLinkUpdateManyWithWhereWithoutPortfolioInput[]
    deleteMany?: SocialLinkScalarWhereInput | SocialLinkScalarWhereInput[]
  }

  export type PortfolioCreateNestedOneWithoutLinksInput = {
    create?: XOR<PortfolioCreateWithoutLinksInput, PortfolioUncheckedCreateWithoutLinksInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutLinksInput
    connect?: PortfolioWhereUniqueInput
  }

  export type PortfolioUpdateOneRequiredWithoutLinksNestedInput = {
    create?: XOR<PortfolioCreateWithoutLinksInput, PortfolioUncheckedCreateWithoutLinksInput>
    connectOrCreate?: PortfolioCreateOrConnectWithoutLinksInput
    upsert?: PortfolioUpsertWithoutLinksInput
    connect?: PortfolioWhereUniqueInput
    update?: XOR<XOR<PortfolioUpdateToOneWithWhereWithoutLinksInput, PortfolioUpdateWithoutLinksInput>, PortfolioUncheckedUpdateWithoutLinksInput>
  }

  export type BlogCreateNestedOneWithoutBlogRequestsInput = {
    create?: XOR<BlogCreateWithoutBlogRequestsInput, BlogUncheckedCreateWithoutBlogRequestsInput>
    connectOrCreate?: BlogCreateOrConnectWithoutBlogRequestsInput
    connect?: BlogWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSendBlogRequestInput = {
    create?: XOR<UserCreateWithoutSendBlogRequestInput, UserUncheckedCreateWithoutSendBlogRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutSendBlogRequestInput
    connect?: UserWhereUniqueInput
  }

  export type BlogUpdateOneRequiredWithoutBlogRequestsNestedInput = {
    create?: XOR<BlogCreateWithoutBlogRequestsInput, BlogUncheckedCreateWithoutBlogRequestsInput>
    connectOrCreate?: BlogCreateOrConnectWithoutBlogRequestsInput
    upsert?: BlogUpsertWithoutBlogRequestsInput
    connect?: BlogWhereUniqueInput
    update?: XOR<XOR<BlogUpdateToOneWithWhereWithoutBlogRequestsInput, BlogUpdateWithoutBlogRequestsInput>, BlogUncheckedUpdateWithoutBlogRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutSendBlogRequestNestedInput = {
    create?: XOR<UserCreateWithoutSendBlogRequestInput, UserUncheckedCreateWithoutSendBlogRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutSendBlogRequestInput
    upsert?: UserUpsertWithoutSendBlogRequestInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSendBlogRequestInput, UserUpdateWithoutSendBlogRequestInput>, UserUncheckedUpdateWithoutSendBlogRequestInput>
  }

  export type UserCreateNestedOneWithoutSendRequestsInput = {
    create?: XOR<UserCreateWithoutSendRequestsInput, UserUncheckedCreateWithoutSendRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSendRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type SnippetCreateNestedOneWithoutSnippetRequestsInput = {
    create?: XOR<SnippetCreateWithoutSnippetRequestsInput, SnippetUncheckedCreateWithoutSnippetRequestsInput>
    connectOrCreate?: SnippetCreateOrConnectWithoutSnippetRequestsInput
    connect?: SnippetWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSendRequestsNestedInput = {
    create?: XOR<UserCreateWithoutSendRequestsInput, UserUncheckedCreateWithoutSendRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSendRequestsInput
    upsert?: UserUpsertWithoutSendRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSendRequestsInput, UserUpdateWithoutSendRequestsInput>, UserUncheckedUpdateWithoutSendRequestsInput>
  }

  export type SnippetUpdateOneRequiredWithoutSnippetRequestsNestedInput = {
    create?: XOR<SnippetCreateWithoutSnippetRequestsInput, SnippetUncheckedCreateWithoutSnippetRequestsInput>
    connectOrCreate?: SnippetCreateOrConnectWithoutSnippetRequestsInput
    upsert?: SnippetUpsertWithoutSnippetRequestsInput
    connect?: SnippetWhereUniqueInput
    update?: XOR<XOR<SnippetUpdateToOneWithWhereWithoutSnippetRequestsInput, SnippetUpdateWithoutSnippetRequestsInput>, SnippetUncheckedUpdateWithoutSnippetRequestsInput>
  }

  export type NotificationCreateNestedManyWithoutSnippetInput = {
    create?: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput> | NotificationCreateWithoutSnippetInput[] | NotificationUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSnippetInput | NotificationCreateOrConnectWithoutSnippetInput[]
    createMany?: NotificationCreateManySnippetInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutSnippetCollectionInput = {
    create?: XOR<UserCreateWithoutSnippetCollectionInput, UserUncheckedCreateWithoutSnippetCollectionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSnippetCollectionInput
    connect?: UserWhereUniqueInput
  }

  export type SnippetRequestCreateNestedManyWithoutSnippetInput = {
    create?: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput> | SnippetRequestCreateWithoutSnippetInput[] | SnippetRequestUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutSnippetInput | SnippetRequestCreateOrConnectWithoutSnippetInput[]
    createMany?: SnippetRequestCreateManySnippetInputEnvelope
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutAllowedSnippetsInput = {
    create?: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput> | UserCreateWithoutAllowedSnippetsInput[] | UserUncheckedCreateWithoutAllowedSnippetsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedSnippetsInput | UserCreateOrConnectWithoutAllowedSnippetsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutSnippetInput = {
    create?: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput> | NotificationCreateWithoutSnippetInput[] | NotificationUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSnippetInput | NotificationCreateOrConnectWithoutSnippetInput[]
    createMany?: NotificationCreateManySnippetInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type SnippetRequestUncheckedCreateNestedManyWithoutSnippetInput = {
    create?: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput> | SnippetRequestCreateWithoutSnippetInput[] | SnippetRequestUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutSnippetInput | SnippetRequestCreateOrConnectWithoutSnippetInput[]
    createMany?: SnippetRequestCreateManySnippetInputEnvelope
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAllowedSnippetsInput = {
    create?: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput> | UserCreateWithoutAllowedSnippetsInput[] | UserUncheckedCreateWithoutAllowedSnippetsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedSnippetsInput | UserCreateOrConnectWithoutAllowedSnippetsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type EnumVisibilityFieldUpdateOperationsInput = {
    set?: $Enums.Visibility
  }

  export type NotificationUpdateManyWithoutSnippetNestedInput = {
    create?: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput> | NotificationCreateWithoutSnippetInput[] | NotificationUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSnippetInput | NotificationCreateOrConnectWithoutSnippetInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSnippetInput | NotificationUpsertWithWhereUniqueWithoutSnippetInput[]
    createMany?: NotificationCreateManySnippetInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSnippetInput | NotificationUpdateWithWhereUniqueWithoutSnippetInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSnippetInput | NotificationUpdateManyWithWhereWithoutSnippetInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutSnippetCollectionNestedInput = {
    create?: XOR<UserCreateWithoutSnippetCollectionInput, UserUncheckedCreateWithoutSnippetCollectionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSnippetCollectionInput
    upsert?: UserUpsertWithoutSnippetCollectionInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSnippetCollectionInput, UserUpdateWithoutSnippetCollectionInput>, UserUncheckedUpdateWithoutSnippetCollectionInput>
  }

  export type SnippetRequestUpdateManyWithoutSnippetNestedInput = {
    create?: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput> | SnippetRequestCreateWithoutSnippetInput[] | SnippetRequestUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutSnippetInput | SnippetRequestCreateOrConnectWithoutSnippetInput[]
    upsert?: SnippetRequestUpsertWithWhereUniqueWithoutSnippetInput | SnippetRequestUpsertWithWhereUniqueWithoutSnippetInput[]
    createMany?: SnippetRequestCreateManySnippetInputEnvelope
    set?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    disconnect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    delete?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    update?: SnippetRequestUpdateWithWhereUniqueWithoutSnippetInput | SnippetRequestUpdateWithWhereUniqueWithoutSnippetInput[]
    updateMany?: SnippetRequestUpdateManyWithWhereWithoutSnippetInput | SnippetRequestUpdateManyWithWhereWithoutSnippetInput[]
    deleteMany?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
  }

  export type UserUpdateManyWithoutAllowedSnippetsNestedInput = {
    create?: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput> | UserCreateWithoutAllowedSnippetsInput[] | UserUncheckedCreateWithoutAllowedSnippetsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedSnippetsInput | UserCreateOrConnectWithoutAllowedSnippetsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAllowedSnippetsInput | UserUpsertWithWhereUniqueWithoutAllowedSnippetsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAllowedSnippetsInput | UserUpdateWithWhereUniqueWithoutAllowedSnippetsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAllowedSnippetsInput | UserUpdateManyWithWhereWithoutAllowedSnippetsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutSnippetNestedInput = {
    create?: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput> | NotificationCreateWithoutSnippetInput[] | NotificationUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSnippetInput | NotificationCreateOrConnectWithoutSnippetInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSnippetInput | NotificationUpsertWithWhereUniqueWithoutSnippetInput[]
    createMany?: NotificationCreateManySnippetInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSnippetInput | NotificationUpdateWithWhereUniqueWithoutSnippetInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSnippetInput | NotificationUpdateManyWithWhereWithoutSnippetInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type SnippetRequestUncheckedUpdateManyWithoutSnippetNestedInput = {
    create?: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput> | SnippetRequestCreateWithoutSnippetInput[] | SnippetRequestUncheckedCreateWithoutSnippetInput[]
    connectOrCreate?: SnippetRequestCreateOrConnectWithoutSnippetInput | SnippetRequestCreateOrConnectWithoutSnippetInput[]
    upsert?: SnippetRequestUpsertWithWhereUniqueWithoutSnippetInput | SnippetRequestUpsertWithWhereUniqueWithoutSnippetInput[]
    createMany?: SnippetRequestCreateManySnippetInputEnvelope
    set?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    disconnect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    delete?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    connect?: SnippetRequestWhereUniqueInput | SnippetRequestWhereUniqueInput[]
    update?: SnippetRequestUpdateWithWhereUniqueWithoutSnippetInput | SnippetRequestUpdateWithWhereUniqueWithoutSnippetInput[]
    updateMany?: SnippetRequestUpdateManyWithWhereWithoutSnippetInput | SnippetRequestUpdateManyWithWhereWithoutSnippetInput[]
    deleteMany?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAllowedSnippetsNestedInput = {
    create?: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput> | UserCreateWithoutAllowedSnippetsInput[] | UserUncheckedCreateWithoutAllowedSnippetsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedSnippetsInput | UserCreateOrConnectWithoutAllowedSnippetsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAllowedSnippetsInput | UserUpsertWithWhereUniqueWithoutAllowedSnippetsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAllowedSnippetsInput | UserUpdateWithWhereUniqueWithoutAllowedSnippetsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAllowedSnippetsInput | UserUpdateManyWithWhereWithoutAllowedSnippetsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogCreateNestedOneWithoutLikesInput = {
    create?: XOR<BlogCreateWithoutLikesInput, BlogUncheckedCreateWithoutLikesInput>
    connectOrCreate?: BlogCreateOrConnectWithoutLikesInput
    connect?: BlogWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutLikesInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    connect?: UserWhereUniqueInput
  }

  export type BlogUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<BlogCreateWithoutLikesInput, BlogUncheckedCreateWithoutLikesInput>
    connectOrCreate?: BlogCreateOrConnectWithoutLikesInput
    upsert?: BlogUpsertWithoutLikesInput
    connect?: BlogWhereUniqueInput
    update?: XOR<XOR<BlogUpdateToOneWithWhereWithoutLikesInput, BlogUpdateWithoutLikesInput>, BlogUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    upsert?: UserUpsertWithoutLikesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLikesInput, UserUpdateWithoutLikesInput>, UserUncheckedUpdateWithoutLikesInput>
  }

  export type UserCreateNestedOneWithoutBlogInput = {
    create?: XOR<UserCreateWithoutBlogInput, UserUncheckedCreateWithoutBlogInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlogInput
    connect?: UserWhereUniqueInput
  }

  export type BlogRequestCreateNestedManyWithoutBlogInput = {
    create?: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput> | BlogRequestCreateWithoutBlogInput[] | BlogRequestUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutBlogInput | BlogRequestCreateOrConnectWithoutBlogInput[]
    createMany?: BlogRequestCreateManyBlogInputEnvelope
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
  }

  export type LikeCreateNestedManyWithoutBlogInput = {
    create?: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput> | LikeCreateWithoutBlogInput[] | LikeUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutBlogInput | LikeCreateOrConnectWithoutBlogInput[]
    createMany?: LikeCreateManyBlogInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutBlogInput = {
    create?: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput> | NotificationCreateWithoutBlogInput[] | NotificationUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutBlogInput | NotificationCreateOrConnectWithoutBlogInput[]
    createMany?: NotificationCreateManyBlogInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutAllowedBlogInput = {
    create?: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput> | UserCreateWithoutAllowedBlogInput[] | UserUncheckedCreateWithoutAllowedBlogInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedBlogInput | UserCreateOrConnectWithoutAllowedBlogInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BlogRequestUncheckedCreateNestedManyWithoutBlogInput = {
    create?: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput> | BlogRequestCreateWithoutBlogInput[] | BlogRequestUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutBlogInput | BlogRequestCreateOrConnectWithoutBlogInput[]
    createMany?: BlogRequestCreateManyBlogInputEnvelope
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutBlogInput = {
    create?: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput> | LikeCreateWithoutBlogInput[] | LikeUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutBlogInput | LikeCreateOrConnectWithoutBlogInput[]
    createMany?: LikeCreateManyBlogInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutBlogInput = {
    create?: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput> | NotificationCreateWithoutBlogInput[] | NotificationUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutBlogInput | NotificationCreateOrConnectWithoutBlogInput[]
    createMany?: NotificationCreateManyBlogInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAllowedBlogInput = {
    create?: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput> | UserCreateWithoutAllowedBlogInput[] | UserUncheckedCreateWithoutAllowedBlogInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedBlogInput | UserCreateOrConnectWithoutAllowedBlogInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutBlogNestedInput = {
    create?: XOR<UserCreateWithoutBlogInput, UserUncheckedCreateWithoutBlogInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlogInput
    upsert?: UserUpsertWithoutBlogInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBlogInput, UserUpdateWithoutBlogInput>, UserUncheckedUpdateWithoutBlogInput>
  }

  export type BlogRequestUpdateManyWithoutBlogNestedInput = {
    create?: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput> | BlogRequestCreateWithoutBlogInput[] | BlogRequestUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutBlogInput | BlogRequestCreateOrConnectWithoutBlogInput[]
    upsert?: BlogRequestUpsertWithWhereUniqueWithoutBlogInput | BlogRequestUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: BlogRequestCreateManyBlogInputEnvelope
    set?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    disconnect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    delete?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    update?: BlogRequestUpdateWithWhereUniqueWithoutBlogInput | BlogRequestUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: BlogRequestUpdateManyWithWhereWithoutBlogInput | BlogRequestUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
  }

  export type LikeUpdateManyWithoutBlogNestedInput = {
    create?: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput> | LikeCreateWithoutBlogInput[] | LikeUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutBlogInput | LikeCreateOrConnectWithoutBlogInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutBlogInput | LikeUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: LikeCreateManyBlogInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutBlogInput | LikeUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutBlogInput | LikeUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutBlogNestedInput = {
    create?: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput> | NotificationCreateWithoutBlogInput[] | NotificationUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutBlogInput | NotificationCreateOrConnectWithoutBlogInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutBlogInput | NotificationUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: NotificationCreateManyBlogInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutBlogInput | NotificationUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutBlogInput | NotificationUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserUpdateManyWithoutAllowedBlogNestedInput = {
    create?: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput> | UserCreateWithoutAllowedBlogInput[] | UserUncheckedCreateWithoutAllowedBlogInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedBlogInput | UserCreateOrConnectWithoutAllowedBlogInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAllowedBlogInput | UserUpsertWithWhereUniqueWithoutAllowedBlogInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAllowedBlogInput | UserUpdateWithWhereUniqueWithoutAllowedBlogInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAllowedBlogInput | UserUpdateManyWithWhereWithoutAllowedBlogInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogRequestUncheckedUpdateManyWithoutBlogNestedInput = {
    create?: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput> | BlogRequestCreateWithoutBlogInput[] | BlogRequestUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: BlogRequestCreateOrConnectWithoutBlogInput | BlogRequestCreateOrConnectWithoutBlogInput[]
    upsert?: BlogRequestUpsertWithWhereUniqueWithoutBlogInput | BlogRequestUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: BlogRequestCreateManyBlogInputEnvelope
    set?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    disconnect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    delete?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    connect?: BlogRequestWhereUniqueInput | BlogRequestWhereUniqueInput[]
    update?: BlogRequestUpdateWithWhereUniqueWithoutBlogInput | BlogRequestUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: BlogRequestUpdateManyWithWhereWithoutBlogInput | BlogRequestUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutBlogNestedInput = {
    create?: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput> | LikeCreateWithoutBlogInput[] | LikeUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutBlogInput | LikeCreateOrConnectWithoutBlogInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutBlogInput | LikeUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: LikeCreateManyBlogInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutBlogInput | LikeUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutBlogInput | LikeUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutBlogNestedInput = {
    create?: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput> | NotificationCreateWithoutBlogInput[] | NotificationUncheckedCreateWithoutBlogInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutBlogInput | NotificationCreateOrConnectWithoutBlogInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutBlogInput | NotificationUpsertWithWhereUniqueWithoutBlogInput[]
    createMany?: NotificationCreateManyBlogInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutBlogInput | NotificationUpdateWithWhereUniqueWithoutBlogInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutBlogInput | NotificationUpdateManyWithWhereWithoutBlogInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAllowedBlogNestedInput = {
    create?: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput> | UserCreateWithoutAllowedBlogInput[] | UserUncheckedCreateWithoutAllowedBlogInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAllowedBlogInput | UserCreateOrConnectWithoutAllowedBlogInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAllowedBlogInput | UserUpsertWithWhereUniqueWithoutAllowedBlogInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAllowedBlogInput | UserUpdateWithWhereUniqueWithoutAllowedBlogInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAllowedBlogInput | UserUpdateManyWithWhereWithoutAllowedBlogInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<BlogCreateWithoutNotificationsInput, BlogUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: BlogCreateOrConnectWithoutNotificationsInput
    connect?: BlogWhereUniqueInput
  }

  export type CodeBuddyRequestCreateNestedOneWithoutNotificationInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutNotificationInput, CodeBuddyRequestUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutNotificationInput
    connect?: CodeBuddyRequestWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedNotifcationsInput = {
    create?: XOR<UserCreateWithoutReceivedNotifcationsInput, UserUncheckedCreateWithoutReceivedNotifcationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedNotifcationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSentNotificationInput = {
    create?: XOR<UserCreateWithoutSentNotificationInput, UserUncheckedCreateWithoutSentNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentNotificationInput
    connect?: UserWhereUniqueInput
  }

  export type SnippetCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<SnippetCreateWithoutNotificationsInput, SnippetUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: SnippetCreateOrConnectWithoutNotificationsInput
    connect?: SnippetWhereUniqueInput
  }

  export type BlogUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<BlogCreateWithoutNotificationsInput, BlogUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: BlogCreateOrConnectWithoutNotificationsInput
    upsert?: BlogUpsertWithoutNotificationsInput
    disconnect?: BlogWhereInput | boolean
    delete?: BlogWhereInput | boolean
    connect?: BlogWhereUniqueInput
    update?: XOR<XOR<BlogUpdateToOneWithWhereWithoutNotificationsInput, BlogUpdateWithoutNotificationsInput>, BlogUncheckedUpdateWithoutNotificationsInput>
  }

  export type CodeBuddyRequestUpdateOneWithoutNotificationNestedInput = {
    create?: XOR<CodeBuddyRequestCreateWithoutNotificationInput, CodeBuddyRequestUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: CodeBuddyRequestCreateOrConnectWithoutNotificationInput
    upsert?: CodeBuddyRequestUpsertWithoutNotificationInput
    disconnect?: CodeBuddyRequestWhereInput | boolean
    delete?: CodeBuddyRequestWhereInput | boolean
    connect?: CodeBuddyRequestWhereUniqueInput
    update?: XOR<XOR<CodeBuddyRequestUpdateToOneWithWhereWithoutNotificationInput, CodeBuddyRequestUpdateWithoutNotificationInput>, CodeBuddyRequestUncheckedUpdateWithoutNotificationInput>
  }

  export type UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput = {
    create?: XOR<UserCreateWithoutReceivedNotifcationsInput, UserUncheckedCreateWithoutReceivedNotifcationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedNotifcationsInput
    upsert?: UserUpsertWithoutReceivedNotifcationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedNotifcationsInput, UserUpdateWithoutReceivedNotifcationsInput>, UserUncheckedUpdateWithoutReceivedNotifcationsInput>
  }

  export type UserUpdateOneRequiredWithoutSentNotificationNestedInput = {
    create?: XOR<UserCreateWithoutSentNotificationInput, UserUncheckedCreateWithoutSentNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentNotificationInput
    upsert?: UserUpsertWithoutSentNotificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentNotificationInput, UserUpdateWithoutSentNotificationInput>, UserUncheckedUpdateWithoutSentNotificationInput>
  }

  export type SnippetUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<SnippetCreateWithoutNotificationsInput, SnippetUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: SnippetCreateOrConnectWithoutNotificationsInput
    upsert?: SnippetUpsertWithoutNotificationsInput
    disconnect?: SnippetWhereInput | boolean
    delete?: SnippetWhereInput | boolean
    connect?: SnippetWhereUniqueInput
    update?: XOR<XOR<SnippetUpdateToOneWithWhereWithoutNotificationsInput, SnippetUpdateWithoutNotificationsInput>, SnippetUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutReceivedMessagesNestedInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    upsert?: UserUpsertWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedMessagesInput, UserUpdateWithoutReceivedMessagesInput>, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumVisibilityFilter<$PrismaModel = never> = {
    equals?: $Enums.Visibility | EnumVisibilityFieldRefInput<$PrismaModel>
    in?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    not?: NestedEnumVisibilityFilter<$PrismaModel> | $Enums.Visibility
  }

  export type NestedEnumVisibilityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Visibility | EnumVisibilityFieldRefInput<$PrismaModel>
    in?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Visibility[] | ListEnumVisibilityFieldRefInput<$PrismaModel>
    not?: NestedEnumVisibilityWithAggregatesFilter<$PrismaModel> | $Enums.Visibility
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVisibilityFilter<$PrismaModel>
    _max?: NestedEnumVisibilityFilter<$PrismaModel>
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BlogCreateWithoutAuthorInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestCreateNestedManyWithoutBlogInput
    likes?: LikeCreateNestedManyWithoutBlogInput
    notifications?: NotificationCreateNestedManyWithoutBlogInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUncheckedCreateWithoutAuthorInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestUncheckedCreateNestedManyWithoutBlogInput
    likes?: LikeUncheckedCreateNestedManyWithoutBlogInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutBlogInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogCreateOrConnectWithoutAuthorInput = {
    where: BlogWhereUniqueInput
    create: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput>
  }

  export type BlogCreateManyAuthorInputEnvelope = {
    data: BlogCreateManyAuthorInput | BlogCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type BlogRequestCreateWithoutRequesterInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    blog: BlogCreateNestedOneWithoutBlogRequestsInput
  }

  export type BlogRequestUncheckedCreateWithoutRequesterInput = {
    id?: string
    blogId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type BlogRequestCreateOrConnectWithoutRequesterInput = {
    where: BlogRequestWhereUniqueInput
    create: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput>
  }

  export type BlogRequestCreateManyRequesterInputEnvelope = {
    data: BlogRequestCreateManyRequesterInput | BlogRequestCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type CodeBuddyRequestCreateWithoutRecieverInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    requester: UserCreateNestedOneWithoutCodeBuddyRequestsInput
    notification?: NotificationCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestUncheckedCreateWithoutRecieverInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    notification?: NotificationUncheckedCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestCreateOrConnectWithoutRecieverInput = {
    where: CodeBuddyRequestWhereUniqueInput
    create: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput>
  }

  export type CodeBuddyRequestCreateManyRecieverInputEnvelope = {
    data: CodeBuddyRequestCreateManyRecieverInput | CodeBuddyRequestCreateManyRecieverInput[]
    skipDuplicates?: boolean
  }

  export type CodeBuddyRequestCreateWithoutRequesterInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    reciever: UserCreateNestedOneWithoutReceivedCodeBuddyRequestsInput
    notification?: NotificationCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestUncheckedCreateWithoutRequesterInput = {
    id?: string
    receiverId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    notification?: NotificationUncheckedCreateNestedManyWithoutCodeBuddyRequestInput
  }

  export type CodeBuddyRequestCreateOrConnectWithoutRequesterInput = {
    where: CodeBuddyRequestWhereUniqueInput
    create: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput>
  }

  export type CodeBuddyRequestCreateManyRequesterInputEnvelope = {
    data: CodeBuddyRequestCreateManyRequesterInput | CodeBuddyRequestCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type LikeCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    blog: BlogCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutUserInput = {
    id?: string
    blogId: string
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutUserInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeCreateManyUserInputEnvelope = {
    data: LikeCreateManyUserInput | LikeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutRecipientInput = {
    id?: string
    content: string
    timestamp?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutRecipientInput = {
    id?: string
    content: string
    senderId: string
    timestamp?: Date | string
  }

  export type MessageCreateOrConnectWithoutRecipientInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput>
  }

  export type MessageCreateManyRecipientInputEnvelope = {
    data: MessageCreateManyRecipientInput | MessageCreateManyRecipientInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content: string
    timestamp?: Date | string
    recipient: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    content: string
    recipientId: string
    timestamp?: Date | string
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutReceiverInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    blog?: BlogCreateNestedOneWithoutNotificationsInput
    codeBuddyRequest?: CodeBuddyRequestCreateNestedOneWithoutNotificationInput
    sender: UserCreateNestedOneWithoutSentNotificationInput
    snippet?: SnippetCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutReceiverInput = {
    id?: string
    senderId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationCreateOrConnectWithoutReceiverInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput>
  }

  export type NotificationCreateManyReceiverInputEnvelope = {
    data: NotificationCreateManyReceiverInput | NotificationCreateManyReceiverInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutSenderInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    blog?: BlogCreateNestedOneWithoutNotificationsInput
    codeBuddyRequest?: CodeBuddyRequestCreateNestedOneWithoutNotificationInput
    receiver: UserCreateNestedOneWithoutReceivedNotifcationsInput
    snippet?: SnippetCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutSenderInput = {
    id?: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationCreateOrConnectWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationCreateManySenderInputEnvelope = {
    data: NotificationCreateManySenderInput | NotificationCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type PortfolioCreateWithoutUserInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkCreateNestedManyWithoutPortfolioInput
  }

  export type PortfolioUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkUncheckedCreateNestedManyWithoutPortfolioInput
  }

  export type PortfolioCreateOrConnectWithoutUserInput = {
    where: PortfolioWhereUniqueInput
    create: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SnippetCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationCreateNestedManyWithoutSnippetInput
    snippetRequests?: SnippetRequestCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationUncheckedCreateNestedManyWithoutSnippetInput
    snippetRequests?: SnippetRequestUncheckedCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetCreateOrConnectWithoutAuthorInput = {
    where: SnippetWhereUniqueInput
    create: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput>
  }

  export type SnippetCreateManyAuthorInputEnvelope = {
    data: SnippetCreateManyAuthorInput | SnippetCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type SnippetRequestCreateWithoutRequesterInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    snippet: SnippetCreateNestedOneWithoutSnippetRequestsInput
  }

  export type SnippetRequestUncheckedCreateWithoutRequesterInput = {
    id?: string
    snippetId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type SnippetRequestCreateOrConnectWithoutRequesterInput = {
    where: SnippetRequestWhereUniqueInput
    create: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput>
  }

  export type SnippetRequestCreateManyRequesterInputEnvelope = {
    data: SnippetRequestCreateManyRequesterInput | SnippetRequestCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutBuddyOfInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutBuddyOfInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutBuddyOfInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBuddyOfInput, UserUncheckedCreateWithoutBuddyOfInput>
  }

  export type UserCreateWithoutCodeBuddyInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutCodeBuddyInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutCodeBuddyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput>
  }

  export type UserCreateManyCodeBuddyInputEnvelope = {
    data: UserCreateManyCodeBuddyInput | UserCreateManyCodeBuddyInput[]
    skipDuplicates?: boolean
  }

  export type BlogCreateWithoutAllowedUsersInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    author: UserCreateNestedOneWithoutBlogInput
    blogRequests?: BlogRequestCreateNestedManyWithoutBlogInput
    likes?: LikeCreateNestedManyWithoutBlogInput
    notifications?: NotificationCreateNestedManyWithoutBlogInput
  }

  export type BlogUncheckedCreateWithoutAllowedUsersInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestUncheckedCreateNestedManyWithoutBlogInput
    likes?: LikeUncheckedCreateNestedManyWithoutBlogInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutBlogInput
  }

  export type BlogCreateOrConnectWithoutAllowedUsersInput = {
    where: BlogWhereUniqueInput
    create: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput>
  }

  export type SnippetCreateWithoutAllowedUsersInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationCreateNestedManyWithoutSnippetInput
    author: UserCreateNestedOneWithoutSnippetCollectionInput
    snippetRequests?: SnippetRequestCreateNestedManyWithoutSnippetInput
  }

  export type SnippetUncheckedCreateWithoutAllowedUsersInput = {
    id?: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationUncheckedCreateNestedManyWithoutSnippetInput
    snippetRequests?: SnippetRequestUncheckedCreateNestedManyWithoutSnippetInput
  }

  export type SnippetCreateOrConnectWithoutAllowedUsersInput = {
    where: SnippetWhereUniqueInput
    create: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput>
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
  }

  export type BlogUpsertWithWhereUniqueWithoutAuthorInput = {
    where: BlogWhereUniqueInput
    update: XOR<BlogUpdateWithoutAuthorInput, BlogUncheckedUpdateWithoutAuthorInput>
    create: XOR<BlogCreateWithoutAuthorInput, BlogUncheckedCreateWithoutAuthorInput>
  }

  export type BlogUpdateWithWhereUniqueWithoutAuthorInput = {
    where: BlogWhereUniqueInput
    data: XOR<BlogUpdateWithoutAuthorInput, BlogUncheckedUpdateWithoutAuthorInput>
  }

  export type BlogUpdateManyWithWhereWithoutAuthorInput = {
    where: BlogScalarWhereInput
    data: XOR<BlogUpdateManyMutationInput, BlogUncheckedUpdateManyWithoutAuthorInput>
  }

  export type BlogScalarWhereInput = {
    AND?: BlogScalarWhereInput | BlogScalarWhereInput[]
    OR?: BlogScalarWhereInput[]
    NOT?: BlogScalarWhereInput | BlogScalarWhereInput[]
    id?: StringFilter<"Blog"> | string
    authorId?: StringFilter<"Blog"> | string
    content?: StringFilter<"Blog"> | string
    title?: StringFilter<"Blog"> | string
    thumbnail?: StringNullableFilter<"Blog"> | string | null
    createdAt?: DateTimeFilter<"Blog"> | Date | string
    updateAt?: DateTimeFilter<"Blog"> | Date | string
    visibilty?: EnumVisibilityFilter<"Blog"> | $Enums.Visibility
  }

  export type BlogRequestUpsertWithWhereUniqueWithoutRequesterInput = {
    where: BlogRequestWhereUniqueInput
    update: XOR<BlogRequestUpdateWithoutRequesterInput, BlogRequestUncheckedUpdateWithoutRequesterInput>
    create: XOR<BlogRequestCreateWithoutRequesterInput, BlogRequestUncheckedCreateWithoutRequesterInput>
  }

  export type BlogRequestUpdateWithWhereUniqueWithoutRequesterInput = {
    where: BlogRequestWhereUniqueInput
    data: XOR<BlogRequestUpdateWithoutRequesterInput, BlogRequestUncheckedUpdateWithoutRequesterInput>
  }

  export type BlogRequestUpdateManyWithWhereWithoutRequesterInput = {
    where: BlogRequestScalarWhereInput
    data: XOR<BlogRequestUpdateManyMutationInput, BlogRequestUncheckedUpdateManyWithoutRequesterInput>
  }

  export type BlogRequestScalarWhereInput = {
    AND?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
    OR?: BlogRequestScalarWhereInput[]
    NOT?: BlogRequestScalarWhereInput | BlogRequestScalarWhereInput[]
    id?: StringFilter<"BlogRequest"> | string
    blogId?: StringFilter<"BlogRequest"> | string
    requesterId?: StringFilter<"BlogRequest"> | string
    status?: EnumRequestStatusFilter<"BlogRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"BlogRequest"> | Date | string
  }

  export type CodeBuddyRequestUpsertWithWhereUniqueWithoutRecieverInput = {
    where: CodeBuddyRequestWhereUniqueInput
    update: XOR<CodeBuddyRequestUpdateWithoutRecieverInput, CodeBuddyRequestUncheckedUpdateWithoutRecieverInput>
    create: XOR<CodeBuddyRequestCreateWithoutRecieverInput, CodeBuddyRequestUncheckedCreateWithoutRecieverInput>
  }

  export type CodeBuddyRequestUpdateWithWhereUniqueWithoutRecieverInput = {
    where: CodeBuddyRequestWhereUniqueInput
    data: XOR<CodeBuddyRequestUpdateWithoutRecieverInput, CodeBuddyRequestUncheckedUpdateWithoutRecieverInput>
  }

  export type CodeBuddyRequestUpdateManyWithWhereWithoutRecieverInput = {
    where: CodeBuddyRequestScalarWhereInput
    data: XOR<CodeBuddyRequestUpdateManyMutationInput, CodeBuddyRequestUncheckedUpdateManyWithoutRecieverInput>
  }

  export type CodeBuddyRequestScalarWhereInput = {
    AND?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
    OR?: CodeBuddyRequestScalarWhereInput[]
    NOT?: CodeBuddyRequestScalarWhereInput | CodeBuddyRequestScalarWhereInput[]
    id?: StringFilter<"CodeBuddyRequest"> | string
    requesterId?: StringFilter<"CodeBuddyRequest"> | string
    receiverId?: StringFilter<"CodeBuddyRequest"> | string
    status?: EnumRequestStatusFilter<"CodeBuddyRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
    expiresAt?: DateTimeFilter<"CodeBuddyRequest"> | Date | string
  }

  export type CodeBuddyRequestUpsertWithWhereUniqueWithoutRequesterInput = {
    where: CodeBuddyRequestWhereUniqueInput
    update: XOR<CodeBuddyRequestUpdateWithoutRequesterInput, CodeBuddyRequestUncheckedUpdateWithoutRequesterInput>
    create: XOR<CodeBuddyRequestCreateWithoutRequesterInput, CodeBuddyRequestUncheckedCreateWithoutRequesterInput>
  }

  export type CodeBuddyRequestUpdateWithWhereUniqueWithoutRequesterInput = {
    where: CodeBuddyRequestWhereUniqueInput
    data: XOR<CodeBuddyRequestUpdateWithoutRequesterInput, CodeBuddyRequestUncheckedUpdateWithoutRequesterInput>
  }

  export type CodeBuddyRequestUpdateManyWithWhereWithoutRequesterInput = {
    where: CodeBuddyRequestScalarWhereInput
    data: XOR<CodeBuddyRequestUpdateManyMutationInput, CodeBuddyRequestUncheckedUpdateManyWithoutRequesterInput>
  }

  export type LikeUpsertWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
  }

  export type LikeUpdateManyWithWhereWithoutUserInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutUserInput>
  }

  export type LikeScalarWhereInput = {
    AND?: LikeScalarWhereInput | LikeScalarWhereInput[]
    OR?: LikeScalarWhereInput[]
    NOT?: LikeScalarWhereInput | LikeScalarWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    blogId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutRecipientInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutRecipientInput, MessageUncheckedUpdateWithoutRecipientInput>
    create: XOR<MessageCreateWithoutRecipientInput, MessageUncheckedCreateWithoutRecipientInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutRecipientInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutRecipientInput, MessageUncheckedUpdateWithoutRecipientInput>
  }

  export type MessageUpdateManyWithWhereWithoutRecipientInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutRecipientInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    recipientId?: StringFilter<"Message"> | string
    timestamp?: DateTimeFilter<"Message"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutReceiverInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutReceiverInput, NotificationUncheckedUpdateWithoutReceiverInput>
    create: XOR<NotificationCreateWithoutReceiverInput, NotificationUncheckedCreateWithoutReceiverInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutReceiverInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutReceiverInput, NotificationUncheckedUpdateWithoutReceiverInput>
  }

  export type NotificationUpdateManyWithWhereWithoutReceiverInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutReceiverInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    senderId?: StringFilter<"Notification"> | string
    receiverId?: StringFilter<"Notification"> | string
    snippetId?: StringNullableFilter<"Notification"> | string | null
    blogId?: StringNullableFilter<"Notification"> | string | null
    status?: EnumRequestStatusFilter<"Notification"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    isRead?: BoolFilter<"Notification"> | boolean
    type?: StringNullableFilter<"Notification"> | string | null
    codebuddyId?: StringNullableFilter<"Notification"> | string | null
  }

  export type NotificationUpsertWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
  }

  export type NotificationUpdateManyWithWhereWithoutSenderInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutSenderInput>
  }

  export type PortfolioUpsertWithoutUserInput = {
    update: XOR<PortfolioUpdateWithoutUserInput, PortfolioUncheckedUpdateWithoutUserInput>
    create: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
    where?: PortfolioWhereInput
  }

  export type PortfolioUpdateToOneWithWhereWithoutUserInput = {
    where?: PortfolioWhereInput
    data: XOR<PortfolioUpdateWithoutUserInput, PortfolioUncheckedUpdateWithoutUserInput>
  }

  export type PortfolioUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkUpdateManyWithoutPortfolioNestedInput
  }

  export type PortfolioUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    links?: SocialLinkUncheckedUpdateManyWithoutPortfolioNestedInput
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
  }

  export type SnippetUpsertWithWhereUniqueWithoutAuthorInput = {
    where: SnippetWhereUniqueInput
    update: XOR<SnippetUpdateWithoutAuthorInput, SnippetUncheckedUpdateWithoutAuthorInput>
    create: XOR<SnippetCreateWithoutAuthorInput, SnippetUncheckedCreateWithoutAuthorInput>
  }

  export type SnippetUpdateWithWhereUniqueWithoutAuthorInput = {
    where: SnippetWhereUniqueInput
    data: XOR<SnippetUpdateWithoutAuthorInput, SnippetUncheckedUpdateWithoutAuthorInput>
  }

  export type SnippetUpdateManyWithWhereWithoutAuthorInput = {
    where: SnippetScalarWhereInput
    data: XOR<SnippetUpdateManyMutationInput, SnippetUncheckedUpdateManyWithoutAuthorInput>
  }

  export type SnippetScalarWhereInput = {
    AND?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
    OR?: SnippetScalarWhereInput[]
    NOT?: SnippetScalarWhereInput | SnippetScalarWhereInput[]
    id?: StringFilter<"Snippet"> | string
    authorid?: StringFilter<"Snippet"> | string
    title?: StringFilter<"Snippet"> | string
    description?: StringFilter<"Snippet"> | string
    content?: StringFilter<"Snippet"> | string
    createdAt?: DateTimeFilter<"Snippet"> | Date | string
    updatedAt?: DateTimeFilter<"Snippet"> | Date | string
    visibility?: EnumVisibilityFilter<"Snippet"> | $Enums.Visibility
    framework?: StringNullableFilter<"Snippet"> | string | null
  }

  export type SnippetRequestUpsertWithWhereUniqueWithoutRequesterInput = {
    where: SnippetRequestWhereUniqueInput
    update: XOR<SnippetRequestUpdateWithoutRequesterInput, SnippetRequestUncheckedUpdateWithoutRequesterInput>
    create: XOR<SnippetRequestCreateWithoutRequesterInput, SnippetRequestUncheckedCreateWithoutRequesterInput>
  }

  export type SnippetRequestUpdateWithWhereUniqueWithoutRequesterInput = {
    where: SnippetRequestWhereUniqueInput
    data: XOR<SnippetRequestUpdateWithoutRequesterInput, SnippetRequestUncheckedUpdateWithoutRequesterInput>
  }

  export type SnippetRequestUpdateManyWithWhereWithoutRequesterInput = {
    where: SnippetRequestScalarWhereInput
    data: XOR<SnippetRequestUpdateManyMutationInput, SnippetRequestUncheckedUpdateManyWithoutRequesterInput>
  }

  export type SnippetRequestScalarWhereInput = {
    AND?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
    OR?: SnippetRequestScalarWhereInput[]
    NOT?: SnippetRequestScalarWhereInput | SnippetRequestScalarWhereInput[]
    id?: StringFilter<"SnippetRequest"> | string
    snippetId?: StringFilter<"SnippetRequest"> | string
    requesterId?: StringFilter<"SnippetRequest"> | string
    status?: EnumRequestStatusFilter<"SnippetRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SnippetRequest"> | Date | string
  }

  export type UserUpsertWithoutBuddyOfInput = {
    update: XOR<UserUpdateWithoutBuddyOfInput, UserUncheckedUpdateWithoutBuddyOfInput>
    create: XOR<UserCreateWithoutBuddyOfInput, UserUncheckedCreateWithoutBuddyOfInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBuddyOfInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBuddyOfInput, UserUncheckedUpdateWithoutBuddyOfInput>
  }

  export type UserUpdateWithoutBuddyOfInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBuddyOfInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCodeBuddyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCodeBuddyInput, UserUncheckedUpdateWithoutCodeBuddyInput>
    create: XOR<UserCreateWithoutCodeBuddyInput, UserUncheckedCreateWithoutCodeBuddyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCodeBuddyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCodeBuddyInput, UserUncheckedUpdateWithoutCodeBuddyInput>
  }

  export type UserUpdateManyWithWhereWithoutCodeBuddyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCodeBuddyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    codeBuddyId?: StringNullableFilter<"User"> | string | null
    matchingPreferences?: JsonNullableFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    portfolioId?: StringNullableFilter<"User"> | string | null
  }

  export type BlogUpsertWithWhereUniqueWithoutAllowedUsersInput = {
    where: BlogWhereUniqueInput
    update: XOR<BlogUpdateWithoutAllowedUsersInput, BlogUncheckedUpdateWithoutAllowedUsersInput>
    create: XOR<BlogCreateWithoutAllowedUsersInput, BlogUncheckedCreateWithoutAllowedUsersInput>
  }

  export type BlogUpdateWithWhereUniqueWithoutAllowedUsersInput = {
    where: BlogWhereUniqueInput
    data: XOR<BlogUpdateWithoutAllowedUsersInput, BlogUncheckedUpdateWithoutAllowedUsersInput>
  }

  export type BlogUpdateManyWithWhereWithoutAllowedUsersInput = {
    where: BlogScalarWhereInput
    data: XOR<BlogUpdateManyMutationInput, BlogUncheckedUpdateManyWithoutAllowedUsersInput>
  }

  export type SnippetUpsertWithWhereUniqueWithoutAllowedUsersInput = {
    where: SnippetWhereUniqueInput
    update: XOR<SnippetUpdateWithoutAllowedUsersInput, SnippetUncheckedUpdateWithoutAllowedUsersInput>
    create: XOR<SnippetCreateWithoutAllowedUsersInput, SnippetUncheckedCreateWithoutAllowedUsersInput>
  }

  export type SnippetUpdateWithWhereUniqueWithoutAllowedUsersInput = {
    where: SnippetWhereUniqueInput
    data: XOR<SnippetUpdateWithoutAllowedUsersInput, SnippetUncheckedUpdateWithoutAllowedUsersInput>
  }

  export type SnippetUpdateManyWithWhereWithoutAllowedUsersInput = {
    where: SnippetScalarWhereInput
    data: XOR<SnippetUpdateManyMutationInput, SnippetUncheckedUpdateManyWithoutAllowedUsersInput>
  }

  export type UserCreateWithoutReceivedCodeBuddyRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutReceivedCodeBuddyRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutReceivedCodeBuddyRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedCreateWithoutReceivedCodeBuddyRequestsInput>
  }

  export type UserCreateWithoutCodeBuddyRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutCodeBuddyRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutCodeBuddyRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCodeBuddyRequestsInput, UserUncheckedCreateWithoutCodeBuddyRequestsInput>
  }

  export type NotificationCreateWithoutCodeBuddyRequestInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    blog?: BlogCreateNestedOneWithoutNotificationsInput
    receiver: UserCreateNestedOneWithoutReceivedNotifcationsInput
    sender: UserCreateNestedOneWithoutSentNotificationInput
    snippet?: SnippetCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutCodeBuddyRequestInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
  }

  export type NotificationCreateOrConnectWithoutCodeBuddyRequestInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput>
  }

  export type NotificationCreateManyCodeBuddyRequestInputEnvelope = {
    data: NotificationCreateManyCodeBuddyRequestInput | NotificationCreateManyCodeBuddyRequestInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutReceivedCodeBuddyRequestsInput = {
    update: XOR<UserUpdateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedUpdateWithoutReceivedCodeBuddyRequestsInput>
    create: XOR<UserCreateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedCreateWithoutReceivedCodeBuddyRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedCodeBuddyRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedCodeBuddyRequestsInput, UserUncheckedUpdateWithoutReceivedCodeBuddyRequestsInput>
  }

  export type UserUpdateWithoutReceivedCodeBuddyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedCodeBuddyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUpsertWithoutCodeBuddyRequestsInput = {
    update: XOR<UserUpdateWithoutCodeBuddyRequestsInput, UserUncheckedUpdateWithoutCodeBuddyRequestsInput>
    create: XOR<UserCreateWithoutCodeBuddyRequestsInput, UserUncheckedCreateWithoutCodeBuddyRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCodeBuddyRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCodeBuddyRequestsInput, UserUncheckedUpdateWithoutCodeBuddyRequestsInput>
  }

  export type UserUpdateWithoutCodeBuddyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutCodeBuddyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type NotificationUpsertWithWhereUniqueWithoutCodeBuddyRequestInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutCodeBuddyRequestInput, NotificationUncheckedUpdateWithoutCodeBuddyRequestInput>
    create: XOR<NotificationCreateWithoutCodeBuddyRequestInput, NotificationUncheckedCreateWithoutCodeBuddyRequestInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutCodeBuddyRequestInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutCodeBuddyRequestInput, NotificationUncheckedUpdateWithoutCodeBuddyRequestInput>
  }

  export type NotificationUpdateManyWithWhereWithoutCodeBuddyRequestInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutCodeBuddyRequestInput>
  }

  export type UserCreateWithoutPortfolioInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutPortfolioInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutPortfolioInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
  }

  export type SocialLinkCreateWithoutPortfolioInput = {
    id?: string
    platform: string
    url: string
    logo?: string | null
  }

  export type SocialLinkUncheckedCreateWithoutPortfolioInput = {
    id?: string
    platform: string
    url: string
    logo?: string | null
  }

  export type SocialLinkCreateOrConnectWithoutPortfolioInput = {
    where: SocialLinkWhereUniqueInput
    create: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput>
  }

  export type SocialLinkCreateManyPortfolioInputEnvelope = {
    data: SocialLinkCreateManyPortfolioInput | SocialLinkCreateManyPortfolioInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPortfolioInput = {
    update: XOR<UserUpdateWithoutPortfolioInput, UserUncheckedUpdateWithoutPortfolioInput>
    create: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPortfolioInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPortfolioInput, UserUncheckedUpdateWithoutPortfolioInput>
  }

  export type UserUpdateWithoutPortfolioInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutPortfolioInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type SocialLinkUpsertWithWhereUniqueWithoutPortfolioInput = {
    where: SocialLinkWhereUniqueInput
    update: XOR<SocialLinkUpdateWithoutPortfolioInput, SocialLinkUncheckedUpdateWithoutPortfolioInput>
    create: XOR<SocialLinkCreateWithoutPortfolioInput, SocialLinkUncheckedCreateWithoutPortfolioInput>
  }

  export type SocialLinkUpdateWithWhereUniqueWithoutPortfolioInput = {
    where: SocialLinkWhereUniqueInput
    data: XOR<SocialLinkUpdateWithoutPortfolioInput, SocialLinkUncheckedUpdateWithoutPortfolioInput>
  }

  export type SocialLinkUpdateManyWithWhereWithoutPortfolioInput = {
    where: SocialLinkScalarWhereInput
    data: XOR<SocialLinkUpdateManyMutationInput, SocialLinkUncheckedUpdateManyWithoutPortfolioInput>
  }

  export type SocialLinkScalarWhereInput = {
    AND?: SocialLinkScalarWhereInput | SocialLinkScalarWhereInput[]
    OR?: SocialLinkScalarWhereInput[]
    NOT?: SocialLinkScalarWhereInput | SocialLinkScalarWhereInput[]
    id?: StringFilter<"SocialLink"> | string
    platform?: StringFilter<"SocialLink"> | string
    url?: StringFilter<"SocialLink"> | string
    portfolioId?: StringFilter<"SocialLink"> | string
    logo?: StringNullableFilter<"SocialLink"> | string | null
  }

  export type PortfolioCreateWithoutLinksInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    user: UserCreateNestedOneWithoutPortfolioInput
  }

  export type PortfolioUncheckedCreateWithoutLinksInput = {
    id?: string
    title: string
    summary: string
    profile?: string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name: string
    stackid?: string | null
    userid: string
    achievements?: string | null
    interests?: string | null
    availability?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isPublished?: boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: string | null
    location?: string | null
    passionate?: string | null
    yearofexperience?: string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PortfolioCreateOrConnectWithoutLinksInput = {
    where: PortfolioWhereUniqueInput
    create: XOR<PortfolioCreateWithoutLinksInput, PortfolioUncheckedCreateWithoutLinksInput>
  }

  export type PortfolioUpsertWithoutLinksInput = {
    update: XOR<PortfolioUpdateWithoutLinksInput, PortfolioUncheckedUpdateWithoutLinksInput>
    create: XOR<PortfolioCreateWithoutLinksInput, PortfolioUncheckedCreateWithoutLinksInput>
    where?: PortfolioWhereInput
  }

  export type PortfolioUpdateToOneWithWhereWithoutLinksInput = {
    where?: PortfolioWhereInput
    data: XOR<PortfolioUpdateWithoutLinksInput, PortfolioUncheckedUpdateWithoutLinksInput>
  }

  export type PortfolioUpdateWithoutLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
    user?: UserUpdateOneRequiredWithoutPortfolioNestedInput
  }

  export type PortfolioUncheckedUpdateWithoutLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    profile?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: NullableJsonNullValueInput | InputJsonValue
    name?: StringFieldUpdateOperationsInput | string
    stackid?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: StringFieldUpdateOperationsInput | string
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isPublished?: BoolFieldUpdateOperationsInput | boolean
    experiences?: NullableJsonNullValueInput | InputJsonValue
    education?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    passionate?: NullableStringFieldUpdateOperationsInput | string | null
    yearofexperience?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableJsonNullValueInput | InputJsonValue
    techstack?: NullableJsonNullValueInput | InputJsonValue
  }

  export type BlogCreateWithoutBlogRequestsInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    author: UserCreateNestedOneWithoutBlogInput
    likes?: LikeCreateNestedManyWithoutBlogInput
    notifications?: NotificationCreateNestedManyWithoutBlogInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUncheckedCreateWithoutBlogRequestsInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    likes?: LikeUncheckedCreateNestedManyWithoutBlogInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutBlogInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogCreateOrConnectWithoutBlogRequestsInput = {
    where: BlogWhereUniqueInput
    create: XOR<BlogCreateWithoutBlogRequestsInput, BlogUncheckedCreateWithoutBlogRequestsInput>
  }

  export type UserCreateWithoutSendBlogRequestInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSendBlogRequestInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSendBlogRequestInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSendBlogRequestInput, UserUncheckedCreateWithoutSendBlogRequestInput>
  }

  export type BlogUpsertWithoutBlogRequestsInput = {
    update: XOR<BlogUpdateWithoutBlogRequestsInput, BlogUncheckedUpdateWithoutBlogRequestsInput>
    create: XOR<BlogCreateWithoutBlogRequestsInput, BlogUncheckedCreateWithoutBlogRequestsInput>
    where?: BlogWhereInput
  }

  export type BlogUpdateToOneWithWhereWithoutBlogRequestsInput = {
    where?: BlogWhereInput
    data: XOR<BlogUpdateWithoutBlogRequestsInput, BlogUncheckedUpdateWithoutBlogRequestsInput>
  }

  export type BlogUpdateWithoutBlogRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    author?: UserUpdateOneRequiredWithoutBlogNestedInput
    likes?: LikeUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateWithoutBlogRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    likes?: LikeUncheckedUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedBlogNestedInput
  }

  export type UserUpsertWithoutSendBlogRequestInput = {
    update: XOR<UserUpdateWithoutSendBlogRequestInput, UserUncheckedUpdateWithoutSendBlogRequestInput>
    create: XOR<UserCreateWithoutSendBlogRequestInput, UserUncheckedCreateWithoutSendBlogRequestInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSendBlogRequestInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSendBlogRequestInput, UserUncheckedUpdateWithoutSendBlogRequestInput>
  }

  export type UserUpdateWithoutSendBlogRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSendBlogRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserCreateWithoutSendRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSendRequestsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSendRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSendRequestsInput, UserUncheckedCreateWithoutSendRequestsInput>
  }

  export type SnippetCreateWithoutSnippetRequestsInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationCreateNestedManyWithoutSnippetInput
    author: UserCreateNestedOneWithoutSnippetCollectionInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetUncheckedCreateWithoutSnippetRequestsInput = {
    id?: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    notifications?: NotificationUncheckedCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetCreateOrConnectWithoutSnippetRequestsInput = {
    where: SnippetWhereUniqueInput
    create: XOR<SnippetCreateWithoutSnippetRequestsInput, SnippetUncheckedCreateWithoutSnippetRequestsInput>
  }

  export type UserUpsertWithoutSendRequestsInput = {
    update: XOR<UserUpdateWithoutSendRequestsInput, UserUncheckedUpdateWithoutSendRequestsInput>
    create: XOR<UserCreateWithoutSendRequestsInput, UserUncheckedCreateWithoutSendRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSendRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSendRequestsInput, UserUncheckedUpdateWithoutSendRequestsInput>
  }

  export type UserUpdateWithoutSendRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSendRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type SnippetUpsertWithoutSnippetRequestsInput = {
    update: XOR<SnippetUpdateWithoutSnippetRequestsInput, SnippetUncheckedUpdateWithoutSnippetRequestsInput>
    create: XOR<SnippetCreateWithoutSnippetRequestsInput, SnippetUncheckedCreateWithoutSnippetRequestsInput>
    where?: SnippetWhereInput
  }

  export type SnippetUpdateToOneWithWhereWithoutSnippetRequestsInput = {
    where?: SnippetWhereInput
    data: XOR<SnippetUpdateWithoutSnippetRequestsInput, SnippetUncheckedUpdateWithoutSnippetRequestsInput>
  }

  export type SnippetUpdateWithoutSnippetRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUpdateManyWithoutSnippetNestedInput
    author?: UserUpdateOneRequiredWithoutSnippetCollectionNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetUncheckedUpdateWithoutSnippetRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUncheckedUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type NotificationCreateWithoutSnippetInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    blog?: BlogCreateNestedOneWithoutNotificationsInput
    codeBuddyRequest?: CodeBuddyRequestCreateNestedOneWithoutNotificationInput
    receiver: UserCreateNestedOneWithoutReceivedNotifcationsInput
    sender: UserCreateNestedOneWithoutSentNotificationInput
  }

  export type NotificationUncheckedCreateWithoutSnippetInput = {
    id?: string
    senderId: string
    receiverId: string
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationCreateOrConnectWithoutSnippetInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput>
  }

  export type NotificationCreateManySnippetInputEnvelope = {
    data: NotificationCreateManySnippetInput | NotificationCreateManySnippetInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSnippetCollectionInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSnippetCollectionInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSnippetCollectionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSnippetCollectionInput, UserUncheckedCreateWithoutSnippetCollectionInput>
  }

  export type SnippetRequestCreateWithoutSnippetInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    requester: UserCreateNestedOneWithoutSendRequestsInput
  }

  export type SnippetRequestUncheckedCreateWithoutSnippetInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type SnippetRequestCreateOrConnectWithoutSnippetInput = {
    where: SnippetRequestWhereUniqueInput
    create: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput>
  }

  export type SnippetRequestCreateManySnippetInputEnvelope = {
    data: SnippetRequestCreateManySnippetInput | SnippetRequestCreateManySnippetInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAllowedSnippetsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutAllowedSnippetsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutAllowedSnippetsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutSnippetInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutSnippetInput, NotificationUncheckedUpdateWithoutSnippetInput>
    create: XOR<NotificationCreateWithoutSnippetInput, NotificationUncheckedCreateWithoutSnippetInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutSnippetInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutSnippetInput, NotificationUncheckedUpdateWithoutSnippetInput>
  }

  export type NotificationUpdateManyWithWhereWithoutSnippetInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutSnippetInput>
  }

  export type UserUpsertWithoutSnippetCollectionInput = {
    update: XOR<UserUpdateWithoutSnippetCollectionInput, UserUncheckedUpdateWithoutSnippetCollectionInput>
    create: XOR<UserCreateWithoutSnippetCollectionInput, UserUncheckedCreateWithoutSnippetCollectionInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSnippetCollectionInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSnippetCollectionInput, UserUncheckedUpdateWithoutSnippetCollectionInput>
  }

  export type UserUpdateWithoutSnippetCollectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSnippetCollectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type SnippetRequestUpsertWithWhereUniqueWithoutSnippetInput = {
    where: SnippetRequestWhereUniqueInput
    update: XOR<SnippetRequestUpdateWithoutSnippetInput, SnippetRequestUncheckedUpdateWithoutSnippetInput>
    create: XOR<SnippetRequestCreateWithoutSnippetInput, SnippetRequestUncheckedCreateWithoutSnippetInput>
  }

  export type SnippetRequestUpdateWithWhereUniqueWithoutSnippetInput = {
    where: SnippetRequestWhereUniqueInput
    data: XOR<SnippetRequestUpdateWithoutSnippetInput, SnippetRequestUncheckedUpdateWithoutSnippetInput>
  }

  export type SnippetRequestUpdateManyWithWhereWithoutSnippetInput = {
    where: SnippetRequestScalarWhereInput
    data: XOR<SnippetRequestUpdateManyMutationInput, SnippetRequestUncheckedUpdateManyWithoutSnippetInput>
  }

  export type UserUpsertWithWhereUniqueWithoutAllowedSnippetsInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAllowedSnippetsInput, UserUncheckedUpdateWithoutAllowedSnippetsInput>
    create: XOR<UserCreateWithoutAllowedSnippetsInput, UserUncheckedCreateWithoutAllowedSnippetsInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAllowedSnippetsInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAllowedSnippetsInput, UserUncheckedUpdateWithoutAllowedSnippetsInput>
  }

  export type UserUpdateManyWithWhereWithoutAllowedSnippetsInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAllowedSnippetsInput>
  }

  export type BlogCreateWithoutLikesInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    author: UserCreateNestedOneWithoutBlogInput
    blogRequests?: BlogRequestCreateNestedManyWithoutBlogInput
    notifications?: NotificationCreateNestedManyWithoutBlogInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUncheckedCreateWithoutLikesInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestUncheckedCreateNestedManyWithoutBlogInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutBlogInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogCreateOrConnectWithoutLikesInput = {
    where: BlogWhereUniqueInput
    create: XOR<BlogCreateWithoutLikesInput, BlogUncheckedCreateWithoutLikesInput>
  }

  export type UserCreateWithoutLikesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutLikesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutLikesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
  }

  export type BlogUpsertWithoutLikesInput = {
    update: XOR<BlogUpdateWithoutLikesInput, BlogUncheckedUpdateWithoutLikesInput>
    create: XOR<BlogCreateWithoutLikesInput, BlogUncheckedCreateWithoutLikesInput>
    where?: BlogWhereInput
  }

  export type BlogUpdateToOneWithWhereWithoutLikesInput = {
    where?: BlogWhereInput
    data: XOR<BlogUpdateWithoutLikesInput, BlogUncheckedUpdateWithoutLikesInput>
  }

  export type BlogUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    author?: UserUpdateOneRequiredWithoutBlogNestedInput
    blogRequests?: BlogRequestUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUncheckedUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedBlogNestedInput
  }

  export type UserUpsertWithoutLikesInput = {
    update: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLikesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserCreateWithoutBlogInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutBlogInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutBlogInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBlogInput, UserUncheckedCreateWithoutBlogInput>
  }

  export type BlogRequestCreateWithoutBlogInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    requester: UserCreateNestedOneWithoutSendBlogRequestInput
  }

  export type BlogRequestUncheckedCreateWithoutBlogInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type BlogRequestCreateOrConnectWithoutBlogInput = {
    where: BlogRequestWhereUniqueInput
    create: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput>
  }

  export type BlogRequestCreateManyBlogInputEnvelope = {
    data: BlogRequestCreateManyBlogInput | BlogRequestCreateManyBlogInput[]
    skipDuplicates?: boolean
  }

  export type LikeCreateWithoutBlogInput = {
    id?: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutBlogInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutBlogInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput>
  }

  export type LikeCreateManyBlogInputEnvelope = {
    data: LikeCreateManyBlogInput | LikeCreateManyBlogInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutBlogInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codeBuddyRequest?: CodeBuddyRequestCreateNestedOneWithoutNotificationInput
    receiver: UserCreateNestedOneWithoutReceivedNotifcationsInput
    sender: UserCreateNestedOneWithoutSentNotificationInput
    snippet?: SnippetCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutBlogInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationCreateOrConnectWithoutBlogInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput>
  }

  export type NotificationCreateManyBlogInputEnvelope = {
    data: NotificationCreateManyBlogInput | NotificationCreateManyBlogInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAllowedBlogInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutAllowedBlogInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutAllowedBlogInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput>
  }

  export type UserUpsertWithoutBlogInput = {
    update: XOR<UserUpdateWithoutBlogInput, UserUncheckedUpdateWithoutBlogInput>
    create: XOR<UserCreateWithoutBlogInput, UserUncheckedCreateWithoutBlogInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBlogInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBlogInput, UserUncheckedUpdateWithoutBlogInput>
  }

  export type UserUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type BlogRequestUpsertWithWhereUniqueWithoutBlogInput = {
    where: BlogRequestWhereUniqueInput
    update: XOR<BlogRequestUpdateWithoutBlogInput, BlogRequestUncheckedUpdateWithoutBlogInput>
    create: XOR<BlogRequestCreateWithoutBlogInput, BlogRequestUncheckedCreateWithoutBlogInput>
  }

  export type BlogRequestUpdateWithWhereUniqueWithoutBlogInput = {
    where: BlogRequestWhereUniqueInput
    data: XOR<BlogRequestUpdateWithoutBlogInput, BlogRequestUncheckedUpdateWithoutBlogInput>
  }

  export type BlogRequestUpdateManyWithWhereWithoutBlogInput = {
    where: BlogRequestScalarWhereInput
    data: XOR<BlogRequestUpdateManyMutationInput, BlogRequestUncheckedUpdateManyWithoutBlogInput>
  }

  export type LikeUpsertWithWhereUniqueWithoutBlogInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutBlogInput, LikeUncheckedUpdateWithoutBlogInput>
    create: XOR<LikeCreateWithoutBlogInput, LikeUncheckedCreateWithoutBlogInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutBlogInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutBlogInput, LikeUncheckedUpdateWithoutBlogInput>
  }

  export type LikeUpdateManyWithWhereWithoutBlogInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutBlogInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutBlogInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutBlogInput, NotificationUncheckedUpdateWithoutBlogInput>
    create: XOR<NotificationCreateWithoutBlogInput, NotificationUncheckedCreateWithoutBlogInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutBlogInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutBlogInput, NotificationUncheckedUpdateWithoutBlogInput>
  }

  export type NotificationUpdateManyWithWhereWithoutBlogInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutBlogInput>
  }

  export type UserUpsertWithWhereUniqueWithoutAllowedBlogInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAllowedBlogInput, UserUncheckedUpdateWithoutAllowedBlogInput>
    create: XOR<UserCreateWithoutAllowedBlogInput, UserUncheckedCreateWithoutAllowedBlogInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAllowedBlogInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAllowedBlogInput, UserUncheckedUpdateWithoutAllowedBlogInput>
  }

  export type UserUpdateManyWithWhereWithoutAllowedBlogInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAllowedBlogInput>
  }

  export type BlogCreateWithoutNotificationsInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    author: UserCreateNestedOneWithoutBlogInput
    blogRequests?: BlogRequestCreateNestedManyWithoutBlogInput
    likes?: LikeCreateNestedManyWithoutBlogInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogUncheckedCreateWithoutNotificationsInput = {
    id?: string
    authorId: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
    blogRequests?: BlogRequestUncheckedCreateNestedManyWithoutBlogInput
    likes?: LikeUncheckedCreateNestedManyWithoutBlogInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedBlogInput
  }

  export type BlogCreateOrConnectWithoutNotificationsInput = {
    where: BlogWhereUniqueInput
    create: XOR<BlogCreateWithoutNotificationsInput, BlogUncheckedCreateWithoutNotificationsInput>
  }

  export type CodeBuddyRequestCreateWithoutNotificationInput = {
    id?: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
    reciever: UserCreateNestedOneWithoutReceivedCodeBuddyRequestsInput
    requester: UserCreateNestedOneWithoutCodeBuddyRequestsInput
  }

  export type CodeBuddyRequestUncheckedCreateWithoutNotificationInput = {
    id?: string
    requesterId: string
    receiverId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
  }

  export type CodeBuddyRequestCreateOrConnectWithoutNotificationInput = {
    where: CodeBuddyRequestWhereUniqueInput
    create: XOR<CodeBuddyRequestCreateWithoutNotificationInput, CodeBuddyRequestUncheckedCreateWithoutNotificationInput>
  }

  export type UserCreateWithoutReceivedNotifcationsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutReceivedNotifcationsInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutReceivedNotifcationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedNotifcationsInput, UserUncheckedCreateWithoutReceivedNotifcationsInput>
  }

  export type UserCreateWithoutSentNotificationInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSentNotificationInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSentNotificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentNotificationInput, UserUncheckedCreateWithoutSentNotificationInput>
  }

  export type SnippetCreateWithoutNotificationsInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    author: UserCreateNestedOneWithoutSnippetCollectionInput
    snippetRequests?: SnippetRequestCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetUncheckedCreateWithoutNotificationsInput = {
    id?: string
    authorid: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
    snippetRequests?: SnippetRequestUncheckedCreateNestedManyWithoutSnippetInput
    allowedUsers?: UserUncheckedCreateNestedManyWithoutAllowedSnippetsInput
  }

  export type SnippetCreateOrConnectWithoutNotificationsInput = {
    where: SnippetWhereUniqueInput
    create: XOR<SnippetCreateWithoutNotificationsInput, SnippetUncheckedCreateWithoutNotificationsInput>
  }

  export type BlogUpsertWithoutNotificationsInput = {
    update: XOR<BlogUpdateWithoutNotificationsInput, BlogUncheckedUpdateWithoutNotificationsInput>
    create: XOR<BlogCreateWithoutNotificationsInput, BlogUncheckedCreateWithoutNotificationsInput>
    where?: BlogWhereInput
  }

  export type BlogUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: BlogWhereInput
    data: XOR<BlogUpdateWithoutNotificationsInput, BlogUncheckedUpdateWithoutNotificationsInput>
  }

  export type BlogUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    author?: UserUpdateOneRequiredWithoutBlogNestedInput
    blogRequests?: BlogRequestUpdateManyWithoutBlogNestedInput
    likes?: LikeUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUncheckedUpdateManyWithoutBlogNestedInput
    likes?: LikeUncheckedUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedBlogNestedInput
  }

  export type CodeBuddyRequestUpsertWithoutNotificationInput = {
    update: XOR<CodeBuddyRequestUpdateWithoutNotificationInput, CodeBuddyRequestUncheckedUpdateWithoutNotificationInput>
    create: XOR<CodeBuddyRequestCreateWithoutNotificationInput, CodeBuddyRequestUncheckedCreateWithoutNotificationInput>
    where?: CodeBuddyRequestWhereInput
  }

  export type CodeBuddyRequestUpdateToOneWithWhereWithoutNotificationInput = {
    where?: CodeBuddyRequestWhereInput
    data: XOR<CodeBuddyRequestUpdateWithoutNotificationInput, CodeBuddyRequestUncheckedUpdateWithoutNotificationInput>
  }

  export type CodeBuddyRequestUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reciever?: UserUpdateOneRequiredWithoutReceivedCodeBuddyRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutCodeBuddyRequestsNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutReceivedNotifcationsInput = {
    update: XOR<UserUpdateWithoutReceivedNotifcationsInput, UserUncheckedUpdateWithoutReceivedNotifcationsInput>
    create: XOR<UserCreateWithoutReceivedNotifcationsInput, UserUncheckedCreateWithoutReceivedNotifcationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedNotifcationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedNotifcationsInput, UserUncheckedUpdateWithoutReceivedNotifcationsInput>
  }

  export type UserUpdateWithoutReceivedNotifcationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedNotifcationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUpsertWithoutSentNotificationInput = {
    update: XOR<UserUpdateWithoutSentNotificationInput, UserUncheckedUpdateWithoutSentNotificationInput>
    create: XOR<UserCreateWithoutSentNotificationInput, UserUncheckedCreateWithoutSentNotificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentNotificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentNotificationInput, UserUncheckedUpdateWithoutSentNotificationInput>
  }

  export type UserUpdateWithoutSentNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSentNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type SnippetUpsertWithoutNotificationsInput = {
    update: XOR<SnippetUpdateWithoutNotificationsInput, SnippetUncheckedUpdateWithoutNotificationsInput>
    create: XOR<SnippetCreateWithoutNotificationsInput, SnippetUncheckedCreateWithoutNotificationsInput>
    where?: SnippetWhereInput
  }

  export type SnippetUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: SnippetWhereInput
    data: XOR<SnippetUpdateWithoutNotificationsInput, SnippetUncheckedUpdateWithoutNotificationsInput>
  }

  export type SnippetUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneRequiredWithoutSnippetCollectionNestedInput
    snippetRequests?: SnippetRequestUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    snippetRequests?: SnippetRequestUncheckedUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type UserCreateWithoutReceivedMessagesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutReceivedMessagesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutReceivedMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type UserCreateWithoutSentMessagesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    blog?: BlogCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestCreateNestedManyWithoutRequesterInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutRecipientInput
    receivedNotifcations?: NotificationCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioCreateNestedOneWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestCreateNestedManyWithoutRequesterInput
    codeBuddy?: UserCreateNestedOneWithoutBuddyOfInput
    buddyOf?: UserCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    codeBuddyId?: string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    blog?: BlogUncheckedCreateNestedManyWithoutAuthorInput
    sendBlogRequest?: BlogRequestUncheckedCreateNestedManyWithoutRequesterInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRecieverInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedCreateNestedManyWithoutRequesterInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutRecipientInput
    receivedNotifcations?: NotificationUncheckedCreateNestedManyWithoutReceiverInput
    sentNotification?: NotificationUncheckedCreateNestedManyWithoutSenderInput
    portfolio?: PortfolioUncheckedCreateNestedOneWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    snippetCollection?: SnippetUncheckedCreateNestedManyWithoutAuthorInput
    sendRequests?: SnippetRequestUncheckedCreateNestedManyWithoutRequesterInput
    buddyOf?: UserUncheckedCreateNestedManyWithoutCodeBuddyInput
    allowedBlog?: BlogUncheckedCreateNestedManyWithoutAllowedUsersInput
    allowedSnippets?: SnippetUncheckedCreateNestedManyWithoutAllowedUsersInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type UserUpsertWithoutReceivedMessagesInput = {
    update: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type BlogCreateManyAuthorInput = {
    id?: string
    content: string
    title: string
    thumbnail?: string | null
    createdAt?: Date | string
    updateAt?: Date | string
    visibilty?: $Enums.Visibility
  }

  export type BlogRequestCreateManyRequesterInput = {
    id?: string
    blogId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type CodeBuddyRequestCreateManyRecieverInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
  }

  export type CodeBuddyRequestCreateManyRequesterInput = {
    id?: string
    receiverId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    expiresAt?: Date | string
  }

  export type LikeCreateManyUserInput = {
    id?: string
    blogId: string
    createdAt?: Date | string
  }

  export type MessageCreateManyRecipientInput = {
    id?: string
    content: string
    senderId: string
    timestamp?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    content: string
    recipientId: string
    timestamp?: Date | string
  }

  export type NotificationCreateManyReceiverInput = {
    id?: string
    senderId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type NotificationCreateManySenderInput = {
    id?: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SnippetCreateManyAuthorInput = {
    id?: string
    title: string
    description: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    visibility?: $Enums.Visibility
    framework?: string | null
  }

  export type SnippetRequestCreateManyRequesterInput = {
    id?: string
    snippetId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type UserCreateManyCodeBuddyInput = {
    id?: string
    username: string
    email?: string | null
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    portfolioId?: string | null
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BlogUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUpdateManyWithoutBlogNestedInput
    likes?: LikeUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUncheckedUpdateManyWithoutBlogNestedInput
    likes?: LikeUncheckedUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutBlogNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedBlogNestedInput
  }

  export type BlogUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
  }

  export type BlogRequestUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blog?: BlogUpdateOneRequiredWithoutBlogRequestsNestedInput
  }

  export type BlogRequestUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogRequestUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CodeBuddyRequestUpdateWithoutRecieverInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requester?: UserUpdateOneRequiredWithoutCodeBuddyRequestsNestedInput
    notification?: NotificationUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateWithoutRecieverInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: NotificationUncheckedUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateManyWithoutRecieverInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CodeBuddyRequestUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reciever?: UserUpdateOneRequiredWithoutReceivedCodeBuddyRequestsNestedInput
    notification?: NotificationUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    notification?: NotificationUncheckedUpdateManyWithoutCodeBuddyRequestNestedInput
  }

  export type CodeBuddyRequestUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blog?: BlogUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    blogId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutRecipientInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateOneWithoutNotificationsNestedInput
    codeBuddyRequest?: CodeBuddyRequestUpdateOneWithoutNotificationNestedInput
    sender?: UserUpdateOneRequiredWithoutSentNotificationNestedInput
    snippet?: SnippetUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateOneWithoutNotificationsNestedInput
    codeBuddyRequest?: CodeBuddyRequestUpdateOneWithoutNotificationNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput
    snippet?: SnippetUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUpdateManyWithoutSnippetNestedInput
    snippetRequests?: SnippetRequestUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUncheckedUpdateManyWithoutSnippetNestedInput
    snippetRequests?: SnippetRequestUncheckedUpdateManyWithoutSnippetNestedInput
    allowedUsers?: UserUncheckedUpdateManyWithoutAllowedSnippetsNestedInput
  }

  export type SnippetUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SnippetRequestUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    snippet?: SnippetUpdateOneRequiredWithoutSnippetRequestsNestedInput
  }

  export type SnippetRequestUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    snippetId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetRequestUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    snippetId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutCodeBuddyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutCodeBuddyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCodeBuddyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BlogUpdateWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    author?: UserUpdateOneRequiredWithoutBlogNestedInput
    blogRequests?: BlogRequestUpdateManyWithoutBlogNestedInput
    likes?: LikeUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUpdateManyWithoutBlogNestedInput
  }

  export type BlogUncheckedUpdateWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    blogRequests?: BlogRequestUncheckedUpdateManyWithoutBlogNestedInput
    likes?: LikeUncheckedUpdateManyWithoutBlogNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutBlogNestedInput
  }

  export type BlogUncheckedUpdateManyWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updateAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibilty?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
  }

  export type SnippetUpdateWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUpdateManyWithoutSnippetNestedInput
    author?: UserUpdateOneRequiredWithoutSnippetCollectionNestedInput
    snippetRequests?: SnippetRequestUpdateManyWithoutSnippetNestedInput
  }

  export type SnippetUncheckedUpdateWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    notifications?: NotificationUncheckedUpdateManyWithoutSnippetNestedInput
    snippetRequests?: SnippetRequestUncheckedUpdateManyWithoutSnippetNestedInput
  }

  export type SnippetUncheckedUpdateManyWithoutAllowedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorid?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visibility?: EnumVisibilityFieldUpdateOperationsInput | $Enums.Visibility
    framework?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateManyCodeBuddyRequestInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
  }

  export type NotificationUpdateWithoutCodeBuddyRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateOneWithoutNotificationsNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput
    sender?: UserUpdateOneRequiredWithoutSentNotificationNestedInput
    snippet?: SnippetUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutCodeBuddyRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutCodeBuddyRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialLinkCreateManyPortfolioInput = {
    id?: string
    platform: string
    url: string
    logo?: string | null
  }

  export type SocialLinkUpdateWithoutPortfolioInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialLinkUncheckedUpdateWithoutPortfolioInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SocialLinkUncheckedUpdateManyWithoutPortfolioInput = {
    id?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateManySnippetInput = {
    id?: string
    senderId: string
    receiverId: string
    blogId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type SnippetRequestCreateManySnippetInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type NotificationUpdateWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    blog?: BlogUpdateOneWithoutNotificationsNestedInput
    codeBuddyRequest?: CodeBuddyRequestUpdateOneWithoutNotificationNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput
    sender?: UserUpdateOneRequiredWithoutSentNotificationNestedInput
  }

  export type NotificationUncheckedUpdateWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    blogId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SnippetRequestUpdateWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requester?: UserUpdateOneRequiredWithoutSendRequestsNestedInput
  }

  export type SnippetRequestUncheckedUpdateWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SnippetRequestUncheckedUpdateManyWithoutSnippetInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutAllowedSnippetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAllowedSnippetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedBlog?: BlogUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAllowedSnippetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BlogRequestCreateManyBlogInput = {
    id?: string
    requesterId: string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type LikeCreateManyBlogInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type NotificationCreateManyBlogInput = {
    id?: string
    senderId: string
    receiverId: string
    snippetId?: string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    isRead?: boolean
    type?: string | null
    codebuddyId?: string | null
  }

  export type BlogRequestUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requester?: UserUpdateOneRequiredWithoutSendBlogRequestNestedInput
  }

  export type BlogRequestUncheckedUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogRequestUncheckedUpdateManyWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codeBuddyRequest?: CodeBuddyRequestUpdateOneWithoutNotificationNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedNotifcationsNestedInput
    sender?: UserUpdateOneRequiredWithoutSentNotificationNestedInput
    snippet?: SnippetUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    snippetId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    type?: NullableStringFieldUpdateOperationsInput | string | null
    codebuddyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutAllowedBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    blog?: BlogUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUpdateManyWithoutRequesterNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUpdateOneWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUpdateManyWithoutRequesterNestedInput
    codeBuddy?: UserUpdateOneWithoutBuddyOfNestedInput
    buddyOf?: UserUpdateManyWithoutCodeBuddyNestedInput
    allowedSnippets?: SnippetUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAllowedBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    blog?: BlogUncheckedUpdateManyWithoutAuthorNestedInput
    sendBlogRequest?: BlogRequestUncheckedUpdateManyWithoutRequesterNestedInput
    receivedCodeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRecieverNestedInput
    codeBuddyRequests?: CodeBuddyRequestUncheckedUpdateManyWithoutRequesterNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutRecipientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedNotifcations?: NotificationUncheckedUpdateManyWithoutReceiverNestedInput
    sentNotification?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
    portfolio?: PortfolioUncheckedUpdateOneWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    snippetCollection?: SnippetUncheckedUpdateManyWithoutAuthorNestedInput
    sendRequests?: SnippetRequestUncheckedUpdateManyWithoutRequesterNestedInput
    buddyOf?: UserUncheckedUpdateManyWithoutCodeBuddyNestedInput
    allowedSnippets?: SnippetUncheckedUpdateManyWithoutAllowedUsersNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAllowedBlogInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    codeBuddyId?: NullableStringFieldUpdateOperationsInput | string | null
    matchingPreferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    portfolioId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}